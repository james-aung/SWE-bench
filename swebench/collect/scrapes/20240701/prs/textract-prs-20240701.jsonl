{"url": "https://api.github.com/repos/deanmalmgren/textract/pulls/522", "id": 2004069584, "node_id": "PR_kwDOAUezhc53c6zQ", "html_url": "https://github.com/deanmalmgren/textract/pull/522", "diff_url": "https://github.com/deanmalmgren/textract/pull/522.diff", "patch_url": "https://github.com/deanmalmgren/textract/pull/522.patch", "issue_url": "https://api.github.com/repos/deanmalmgren/textract/issues/522", "number": 522, "state": "closed", "locked": false, "title": "Scheduled biweekly dependency update for week 31", "user": {"login": "pyup-bot", "id": 16239342, "node_id": "MDQ6VXNlcjE2MjM5MzQy", "avatar_url": "https://avatars.githubusercontent.com/u/16239342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyup-bot", "html_url": "https://github.com/pyup-bot", "followers_url": "https://api.github.com/users/pyup-bot/followers", "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}", "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions", "organizations_url": "https://api.github.com/users/pyup-bot/orgs", "repos_url": "https://api.github.com/users/pyup-bot/repos", "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/pyup-bot/received_events", "type": "User", "site_admin": false}, "body": "\n\n\n\n\n### Update [argcomplete](https://pypi.org/project/argcomplete) from **1.10.3** to **3.4.0**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 3.4.0\n   ```\n   ===============================\n\n-  No stdin for python calls from bash completion functions (488)\n\n   Prevents usage of stdin by (python) executables that are called\n   during completion generation. This prevents the completion locking up\n   the entire shell when the python script is broken i.e.\u00a0it enters an\n   interactive mode (REPL) instead of generating the completions, as\n   expected.\n\n-  Localize shell variable REPLY to avoid overwriting users\u2019 value\n   (489)\n\n   The variable REPLY is used by default by the ``read`` shell builtin\n   to store the return value, and like all bash/zsh variables, is scoped\n   globally. This change allows this variable to be used for other needs\n   by appropriately scoping its internal use by an argcomplete utility\n   function that uses ``read``.\n   ```\n   \n  \n  \n   ### 3.3.0\n   ```\n   ===============================\n\n-  Preserve compatibility with argparse option tuples of length 4. This\n   update is required to use argcomplete on Python 3.11.9+ or 3.12.3+.\n   ```\n   \n  \n  \n   ### 3.2.3\n   ```\n   ===============================\n\n-  Allow register-python-argcomplete output to be used as lazy-loaded\n   zsh completion module (475)\n\n-  Move debug_stream initialization to helper method to allow fd 9\n   behavior to be overridden in subclasses (471)\n   ```\n   \n  \n  \n   ### 3.2.2\n   ```\n   ===============================\n\nExpand tilde in zsh\n   ```\n   \n  \n  \n   ### 3.2.1\n   ```\n   ===============================\n\n-  Allow explicit zsh global completion activation (467)\n   ```\n   \n  \n  \n   ### 3.2.0\n   ```\n   ===============================\n\n-  Fix and test global completion in zsh (463, 466)\n\n-  Add \u2013yes option to activate-global-python-argcomplete (461)\n\n-  Test suite improvements\n   ```\n   \n  \n  \n   ### 3.1.6\n   ```\n   ===============================\n\n-  Respect user choice in activate-global-python-argcomplete\n   ```\n   \n  \n  \n   ### 3.1.5\n   ```\n   ===============================\n\n-  Escape colon in zsh completions. Fixes 456\n   ```\n   \n  \n  \n   ### 3.1.4\n   ```\n   ===============================\n\n-  Call \\_default as a fallback in zsh global completion\n   ```\n   \n  \n  \n   ### 3.1.3\n   ```\n   ===============================\n\n-  Use homebrew prefix by default\n\n-  zsh: Allow to use external script (453)\n\n-  Add support for Python 3.12 and drop EOL 3.6 and 3.7 (449)\n   ```\n   \n  \n  \n   ### 3.1.2\n   ```\n   ===============================\n\n-  Ensure Python 3.12+ compatibility in check_console_script (448)\n   ```\n   \n  \n  \n   ### 3.1.1\n   ```\n   ===============================\n\n-  Search through asdf shims\n\n-  Use \\` as escape character in PowerShell (434)\n   ```\n   \n  \n  \n   ### 3.1.0\n   ```\n   ===============================\n\n-  setup.py -&gt; pyproject.toml migration start (427)\n\n-  Improve user install logic in activate-global-python-argcomplete\n   (437)\n\n-  Ensure Python 3.7 compatibility in check_console_script (436)\n\n-  ZSH implementation fixes (431, 433)\n\n-  Documentation improvements\n   ```\n   \n  \n  \n   ### 3.0.8\n   ```\n   ===============================\n\n-  Test suite shell wrapper: Accept OSError on exit\n   ```\n   \n  \n  \n   ### 3.0.7\n   ```\n   ===============================\n\n-  Test suite: Use general regex to cut zsh reset ANSI sequences (425)\n   ```\n   \n  \n  \n   ### 3.0.6\n   ```\n   ===============================\n\n-  Allow importlib-metadata 6.x; skip test failures on Python 3.7 (420,\n   424)\n\n-  Note completers can return iterables of strings, not just lists\n   (422)\n\n-  Documentation and test improvements\n   ```\n   \n  \n  \n   ### 3.0.5\n   ```\n   ===============================\n\n-  Call \\_default as fallback in zsh global completion hook\n\n-  Begin support for mapping-emitting completers\n   ```\n   \n  \n  \n   ### 3.0.4\n   ```\n   ===============================\n\n-  activate-global-python-argcomplete: do not overwrite existing dotfile\n   in user directory\n\n-  Add NOTICE file\n\n-  Establish long term name for split_line as\n   argcomplete.lexers.split_line\n   ```\n   \n  \n  \n   ### 3.0.3\n   ```\n   ===============================\n\n-  Re-add split_line to API (419)\n   ```\n   \n  \n  \n   ### 3.0.2\n   ```\n   ===============================\n\nFix zsh default completion issues\n   ```\n   \n  \n  \n   ### 3.0.1\n   ```\n   ===============================\n\n-  Fix zsh autoload issues\n   ```\n   \n  \n  \n   ### 3.0.0\n   ```\n   ===============================\n\n-  Fully support zsh. Argcomplete now supports completion descriptions\n   and global completion in zsh.\n\n-  Clean up top level namespace.\n\n-  Documentation and test improvements.\n   ```\n   \n  \n  \n   ### 2.1.2\n   ```\n   ===============================\n\n-  Test infrastructure improvements\n\n-  Indicate that there is no support commitment for fish and tcsh shells\n   ```\n   \n  \n  \n   ### 2.1.1\n   ```\n   ===============================\n\n-  Documentation and test improvements\n   ```\n   \n  \n  \n   ### 2.1.0\n   ```\n   ===============================\n\n-  Remove scripts for contrib-supported shells from global namespace\n   ```\n   \n  \n  \n   ### 2.0.6\n   ```\n   ===============================\n\n-  setup.py: exclude test.\\* subpackages from find_packages (406)\n\n-  Support PowerShell (405)\n\n-  CI updates\n   ```\n   \n  \n  \n   ### 2.0.5\n   ```\n   ===============================\n\n-  Revert \u201cSupport powershell (392)\u201d\n   ```\n   \n  \n  \n   ### 2.0.4\n   ```\n   ===============================\n   ```\n   \n  \n  \n   ### 2.0.3\n   ```\n   ===============================\n   ```\n   \n  \n  \n   ### 2.0.2\n   ```\n   ===============================\n   ```\n   \n  \n  \n   ### 2.0.1\n   ```\n   ===============================\n\n-  Support powershell (392)\n\n-  Update importlib-metadata dependency to include versions 5.x (389)\n\n-  Test and documentation improvements\n   ```\n   \n  \n  \n   ### 2.0.0\n   ```\n   ===============================\n\n-  Truncate input after cursor. Fixes 351 (352)\n\n-  Support of path completion in fish 327 (359)\n\n-  Drop support for Python 2.7 and 3.5 (361)\n\n-  Add support for Python 3.10 (356)\n\n-  Test, documentation, and release infrastructure improvements\n   ```\n   \n  \n  \n   ### 1.12.3\n   ```\n   ================================\n\n-  Update importlib-metadata version pin (345)\n\n-  Display script debug output in tcsh (342)\n\n-  Fish support improvements (338, 339)\n\n-  Print ``warn()`` message from beginning of line (335)\n\n-  Test infrastructure improvements\n   ```\n   \n  \n  \n   ### 1.12.2\n   ```\n   ================================\n\n-  Update importlib-metadata dependency pin (332)\n\n-  Add change log project URL (312)\n\n-  Replace Travis CI with GitHub Actions (323)\n   ```\n   \n  \n  \n   ### 1.12.1\n   ```\n   ================================\n\n-  Update importlib-metadata dependency version range\n\n-  Bash nounset mode fixes (313)\n   ```\n   \n  \n  \n   ### 1.11.1\n   ```\n   ================================\n\n-  Add -o bashdefault to register-python-argcomplete\u2019s output command\n   (284)\n   ```\n   \n  \n  \n   ### 1.11.0\n   ```\n   ================================\n\n-  Use shell builtins where possible (280)\n\n-  Switch from pkg_resources to importlib (283)\n\n-  Remove .sh extension by bash-completion convention (281)\n\n-  Catch exceptions in \\_check_module (269)\n\n-  Documentation and test improvements\n   ```\n   \n  \n  \n   ### 1.10.3\n   ```\n   ================================\n\n-  Do not suggest options after \u2013 (end-of-options delimiter)\n   ```\n   \n  \n  \n   ### 1.10.2\n   ```\n   ================================\n\n-  Include all test directory contents in source distribution\n   ```\n   \n  \n  \n   ### 1.10.1\n   ```\n   ================================\n\n-  Trigger completers on \u2013optional=PARTIAL_VALUE\n\n-  Complete console scripts installed from wheels (241)\n   ```\n   \n  \n  \n   ### 1.10.0\n   ```\n   ================================\n\n-  Fish support 68 (260), thanks to volkov\n   ```\n   \n  \n  \n   ### 1.9.5\n   ```\n   ===============================\n\n-  check_module: Don\u2019t crash, exit with error instead (261)\n\n-  Register completion for multiple commands (246)\n   ```\n   \n  \n  \n   ### 1.9.4\n   ```\n   ===============================\n\n-  Use the correct interpreter when checking wrappers (226)\n\n-  Provide shellcode as a module function (237)\n   ```\n   \n  \n  \n   ### 1.9.3\n   ```\n   ===============================\n\n-  Fix handling of COMP\\_POINT (236)\n\n-  Fix crash when writing unicode to debug\\_stream in Python 2 (230)\n   ```\n   \n  \n  \n   ### 1.9.2\n   ```\n   ===============================\n\n-  Fix release\n   ```\n   \n  \n  \n   ### 1.9.1\n   ```\n   ===============================\n\n-  Fix release\n   ```\n   \n  \n  \n   ### 1.9.0\n   ```\n   ===============================\n\n-  Add SuppressCompleter to skip completion for specific arguments while\n   allowing help text (224)\n\n-  Redirect all output to debug stream in debug mode (206)\n\n-  Complete python -m module (204)\n   ```\n   \n  \n  \n   ### 1.8.2\n   ```\n   ===============================\n\n-  Fix bug introduced in v0.7.1 where completers would not receive the\n   parser keyword argument.\n\n-  Documentation improvements.\n   ```\n   \n  \n  \n   ### 1.8.1\n   ```\n   ===============================\n\n-  Fix completion after tokens with wordbreak chars (197)\n   ```\n   \n  \n  \n   ### 1.8.0\n   ```\n   ===============================\n\nThis release contains work by evanunderscore with numerous improvements\nto the handling of special characters in completions.\n\n-  Simplify nospace handling in global completion (195)\n\n-  Specially handle all characters in COMP\\_WORDBREAKS (187)\n\n-  Use setuptools tests-require directive, fixes 186\n\n-  Complete files using the specified interpreter (192)\n\n-  Fix completion for scripts run via python (191)\n\n-  Clarify argument to register-python-argcomplete (190)\n\n-  Fix handling of commas and other special chars (172); handle more\n   special characters (189)\n\n-  Fix handling of special characters in tcsh (188)\n\n-  Update my\\_shlex to Python 3.6 version (184)\n\n-  Fix additional trailing space in exact matches (183)\n\n-  Adjust tests to handle development environments (180)\n\n-  Fix tcsh tests on OSX (177); Update bash on OSX (176); Check output\n   of test setup command (179)\n\n-  Optionally disable duplicated flags (143)\n\n-  Add default\\_completer option to CompletionFinder.\\ **call** (167)\n\n-  Let bash add or suppress trailing space (159)\n   ```\n   \n  \n  \n   ### 1.7.0\n   ```\n   ===============================\n\n-  Restore parser to its original state to allow reuse after completion\n   (150).\n\n-  Expose COMP\\_TYPE environment variable (157). Thanks to Matt Clay\n   (mattclay).\n\n-  Test infrastructure and documentation improvements.\n   ```\n   \n  \n  \n   ### 1.6.0\n   ```\n   ===============================\n\n-  Add support for tcsh (155)\n\n-  Fix handling of unquoted completions containing $ (154)\n\n-  Don&#x27;t insert unnecessary leading quote char in completions (152)\n\n-  Fix parser reuse with positional arguments (149)\n\n-  Tests: Add simple pexpect tests for bash (153); Add test case to\n   verify 20 is fixed (148)\n\n-  Thanks to davvid and evanunderscore for their work on this release.\n   ```\n   \n  \n  \n   ### 1.5.1\n   ```\n   ===============================\n\n-  Packaging fix\n   ```\n   \n  \n  \n   ### 1.5.0\n   ```\n   ===============================\n\n-  Do not suggest options from mutually exclusive groups (145).\n   ```\n   \n  \n  \n   ### 1.4.1\n   ```\n   ==========================\n- activate-global-python-argcomplete runs on Homebrew out of the box\n   ```\n   \n  \n  \n   ### 1.4.0\n   ```\n   ==========================\n- Correctly handle suggestions for positionals with variable-length nargs. Thanks to evanunderscore (132, 133).\n   ```\n   \n  \n  \n   ### 1.3.0\n   ```\n   ==========================\n- Correctly handle suggestions with custom nargs for optionals. Thanks to evanunderscore (131).\n   ```\n   \n  \n  \n   ### 1.2.0\n   ```\n   ==========================\n- Fix propagation of partially parsed subparser namespace into parent parser namespace upon subparser failure due to\n  partial args. This allows completers to access partial parse results for subparser optionals in parsed_args (114).\n- The default completer can now be specified when manually instantiating CompletionFinder. Thanks to avylove (130).\n   ```\n   \n  \n  \n   ### 1.1.1\n   ```\n   ==========================\n- Use FilesCompleter as default completer fallback (120).\n   ```\n   \n  \n  \n   ### 1.1.0\n   ```\n   ==========================\n- Recognize subclasses of argparse._SubParsersAction. Thanks to Stephen Koo (118).\n- Support parsed_args in custom completers with missing args. Thanks to Dan Kilman (124).\n- Non-ASCII support in FilesCompleter.\n- Automatically enable FilesCompleter for argparse.FileType arguments.\n   ```\n   \n  \n  \n   ### 1.0.0\n   ```\n   ==========================\n- Don&#x27;t print args with suppressed help by default; add\n  ``argcomplete.autocomplete(print_suppressed=True)`` to control this\n  behavior (113).\n   ```\n   \n  \n  \n   ### 0.9.0\n   ```\n   ==========================\n- Fix always_complete_options=False support (115).\n   ```\n   \n  \n  \n   ### 0.8.9\n   ```\n   ==========================\n- Correct doc filename in setup.cfg (fixes bdist_rpm failure, Issue 111).\n- Make context managers exception-safe. Thanks to Miko\u0142aj Siedlarek (pull request 110).\n   ```\n   \n  \n  \n   ### 0.8.8\n   ```\n   ==========================\n- Build and upload universal wheel packages in release.\n- Fix issue with non-string choices for arguments. Thanks to neizod (pull request 107).\n- Improve non-ascii argparse argument support on Python 2.7.\n   ```\n   \n  \n  \n   ### 0.8.7\n   ```\n   ==========================\n- register-python-argcomplete: add option to avoid default readline completion. Thanks to drmalex07 (pull request 99).\n   ```\n   \n  \n  \n   ### 0.8.6\n   ```\n   ==========================\n- Expand tilde in script name, allowing argcomplete to work when invoking scripts from one&#x27;s home directory. Thanks to VorpalBlade (Issue 104).\n   ```\n   \n  \n  \n   ### 0.8.5\n   ```\n   ==========================\n- Fix issues related to using argcomplete in a REPL environment.\n- New helper method for custom completion display.\n- Expand test suite; formatting cleanup.\n   ```\n   \n  \n  \n   ### 0.8.4\n   ```\n   ==========================\n- Fix issue related to using argcomplete in a REPL environment. Thanks to wapiflapi (pull request 91).\n   ```\n   \n  \n  \n   ### 0.8.3\n   ```\n   ==========================\n- Fix multiple issues related to using argcomplete in a REPL environment. Thanks to wapiflapi (pull request 90).\n   ```\n   \n  \n  \n   ### 0.8.2\n   ```\n   ==========================\n- Don&#x27;t strip colon prefix in completion results if COMP_WORDBREAKS does not contain a colon. Thanks to berezv (pull request 88).\n   ```\n   \n  \n  \n   ### 0.8.1\n   ```\n   ==========================\n- Use complete --nospace to avoid issues with directory completion.\n   ```\n   \n  \n  \n   ### 0.8.0\n   ```\n   ==========================\n- Refactor main body of code into a class to enable subclassing and overriding of functionality (Issue 78).\n   ```\n   \n  \n  \n   ### 0.7.1\n   ```\n   ==========================\n- New keyword option &quot;argcomplete.autocomplete(validator=...)&quot; to supply a custom validator or bypass default validation. Thanks to thijsdezoete (Issue 77).\n- Document debug options.\n   ```\n   \n  \n  \n   ### 0.7.0\n   ```\n   ==========================\n- New keyword option &quot;argcomplete.autocomplete(exclude=[...])&quot; to suppress options (Issue 74).\n- More speedups to code path for global completion hook negative result.\n   ```\n   \n  \n  \n   ### 0.6.9\n   ```\n   ==========================\n- Fix handling of development mode script wrappers. Thanks to jmlopez-rod and dcosson (Issue 69).\n- Speed up code path for global completion hook negative result by loading pkg_resources on demand.\n   ```\n   \n  \n  \n   ### 0.6.8\n   ```\n   ==========================\n- Begin tracking changes in changelog.\n- Add completion support for PBR installed scripts (PR 71).\n- Detect easy-install shims with shebang lines that contain Py instead of py (Issue 69).\n   ```\n   \n  \n</details>\n\n\n \n\n<details>\n  <summary>Links</summary>\n  \n  - PyPI: https://pypi.org/project/argcomplete\n  - Changelog: https://data.safetycli.com/changelogs/argcomplete/\n  - Repo: https://github.com/kislyuk/argcomplete\n</details>\n\n\n\n\n\n### Update [beautifulsoup4](https://pypi.org/project/beautifulsoup4) from **4.8.2** to **4.12.3**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 4.11.1\n   ```\n   This release was done to ensure that the unit tests are packaged along\nwith the released source. There are no functionality changes in this\nrelease, but there are a few other packaging changes:\n\n* The Japanese and Korean translations of the documentation are included.\n* The changelog is now packaged as CHANGELOG, and the license file is\n  packaged as LICENSE. NEWS.txt and COPYING.txt are still present,\n  but may be removed in the future.\n* TODO.txt is no longer packaged, since a TODO is not relevant for released\n  code.\n   ```\n   \n  \n  \n   ### 4.11.0\n   ```\n   * Ported unit tests to use pytest.\n\n* Added special string classes, RubyParenthesisString and RubyTextString,\n  to make it possible to treat ruby text specially in get_text() calls.\n  [bug=1941980]\n\n* It&#x27;s now possible to customize the way output is indented by\n  providing a value for the &#x27;indent&#x27; argument to the Formatter\n  constructor. The &#x27;indent&#x27; argument works very similarly to the\n  argument of the same name in the Python standard library&#x27;s\n  json.dump() function. [bug=1955497]\n\n* If the charset-normalizer Python module\n  (https://pypi.org/project/charset-normalizer/) is installed, Beautiful\n  Soup will use it to detect the character sets of incoming documents.\n  This is also the module used by newer versions of the Requests library.\n  For the sake of backwards compatibility, chardet and cchardet both take\n  precedence if installed. [bug=1955346]\n\n* Added a workaround for an lxml bug\n  (https://bugs.launchpad.net/lxml/+bug/1948551) that causes\n  problems when parsing a Unicode string beginning with BYTE ORDER MARK.\n  [bug=1947768]\n\n* Issue a warning when an HTML parser is used to parse a document that\n  looks like XML but not XHTML. [bug=1939121]\n\n* Do a better job of keeping track of namespaces as an XML document is\n  parsed, so that CSS selectors that use namespaces will do the right\n  thing more often. [bug=1946243]\n\n* Some time ago, the misleadingly named &quot;text&quot; argument to find-type\n  methods was renamed to the more accurate &quot;string.&quot; But this supposed\n  &quot;renaming&quot; didn&#x27;t make it into important places like the method\n  signatures or the docstrings. That&#x27;s corrected in this\n  version. &quot;text&quot; still works, but will give a DeprecationWarning.\n  [bug=1947038]\n\n* Fixed a crash when pickling a BeautifulSoup object that has no\n  tree builder. [bug=1934003]\n\n* Fixed a crash when overriding multi_valued_attributes and using the\n  html5lib parser. [bug=1948488]\n\n* Standardized the wording of the MarkupResemblesLocatorWarning\n  warnings to omit untrusted input and make the warnings less\n  judgmental about what you ought to be doing. [bug=1955450]\n\n* Removed support for the iconv_codec library, which doesn&#x27;t seem\n  to exist anymore and was never put up on PyPI. (The closest\n  replacement on PyPI, iconv_codecs, is GPL-licensed, so we can&#x27;t use\n  it--it&#x27;s also quite old.)\n   ```\n   \n  \n  \n   ### 4.10.0\n   ```\n   * This is the first release of Beautiful Soup to only support Python\n  3. I dropped Python 2 support to maintain support for newer versions\n  (58 and up) of setuptools. See:\n  https://github.com/pypa/setuptools/issues/2769 [bug=1942919]\n\n* The behavior of methods like .get_text() and .strings now differs\n  depending on the type of tag. The change is visible with HTML tags\n  like &lt;script&gt;, &lt;style&gt;, and &lt;template&gt;. Starting in 4.9.0, methods\n  like get_text() returned no results on such tags, because the\n  contents of those tags are not considered &#x27;text&#x27; within the document\n  as a whole.\n\n  But a user who calls script.get_text() is working from a different\n  definition of &#x27;text&#x27; than a user who calls div.get_text()--otherwise\n  there would be no need to call script.get_text() at all. In 4.10.0,\n  the contents of (e.g.) a &lt;script&gt; tag are considered &#x27;text&#x27; during a\n  get_text() call on the tag itself, but not considered &#x27;text&#x27; during\n  a get_text() call on the tag&#x27;s parent.\n\n  Because of this change, calling get_text() on each child of a tag\n  may now return a different result than calling get_text() on the tag\n  itself. That&#x27;s because different tags now have different\n  understandings of what counts as &#x27;text&#x27;. [bug=1906226] [bug=1868861]\n\n* NavigableString and its subclasses now implement the get_text()\n  method, as well as the properties .strings and\n  .stripped_strings. These methods will either return the string\n  itself, or nothing, so the only reason to use this is when iterating\n  over a list of mixed Tag and NavigableString objects. [bug=1904309]\n\n* The &#x27;html5&#x27; formatter now treats attributes whose values are the\n  empty string as HTML boolean attributes. Previously (and in other\n  formatters), an attribute value must be set as None to be treated as\n  a boolean attribute. In a future release, I plan to also give this\n  behavior to the &#x27;html&#x27; formatter. Patch by Isaac Muse. [bug=1915424]\n\n* The &#x27;replace_with()&#x27; method now takes a variable number of arguments,\n  and can be used to replace a single element with a sequence of elements.\n  Patch by Bill Chandos. [rev=605]\n\n* Corrected output when the namespace prefix associated with a\n  namespaced attribute is the empty string, as opposed to\n  None. [bug=1915583]\n\n* Performance improvement when processing tags that speeds up overall\n  tree construction by 2%. Patch by Morotti. [bug=1899358]\n\n* Corrected the use of special string container classes in cases when a\n  single tag may contain strings with different containers; such as\n  the &lt;template&gt; tag, which may contain both TemplateString objects\n  and Comment objects. [bug=1913406]\n\n* The html.parser tree builder can now handle named entities\n  found in the HTML5 spec in much the same way that the html5lib\n  tree builder does. Note that the lxml HTML tree builder doesn&#x27;t handle\n  named entities this way. [bug=1924908]\n\n* Added a second way to pass specify encodings to UnicodeDammit and\n  EncodingDetector, based on the order of precedence defined in the\n  HTML5 spec, starting at:\n  https://html.spec.whatwg.org/multipage/parsing.html#parsing-with-a-known-character-encoding\n\n  Encodings in &#x27;known_definite_encodings&#x27; are tried first, then\n  byte-order-mark sniffing is run, then encodings in &#x27;user_encodings&#x27;\n  are tried. The old argument, &#x27;override_encodings&#x27;, is now a\n  deprecated alias for &#x27;known_definite_encodings&#x27;.\n\n  This changes the default behavior of the html.parser and lxml tree\n  builders, in a way that may slightly improve encoding\n  detection but will probably have no effect. [bug=1889014]\n\n* Improve the warning issued when a directory name (as opposed to\n  the name of a regular file) is passed as markup into the BeautifulSoup\n  constructor. [bug=1913628]\n   ```\n   \n  \n  \n   ### 4.9.3\n   ```\n   * Implemented a significant performance optimization to the process of\n  searching the parse tree. Patch by Morotti. [bug=1898212]\n   ```\n   \n  \n  \n   ### 4.9.2\n   ```\n   * Fixed a bug that caused too many tags to be popped from the tag\n  stack during tree building, when encountering a closing tag that had\n  no matching opening tag. [bug=1880420]\n\n* Fixed a bug that inconsistently moved elements over when passing\n  a Tag, rather than a list, into Tag.extend(). [bug=1885710]\n\n* Specify the soupsieve dependency in a way that complies with\n  PEP 508. Patch by Mike Nerone. [bug=1893696]\n\n* Change the signatures for BeautifulSoup.insert_before and insert_after\n  (which are not implemented) to match PageElement.insert_before and\n  insert_after, quieting warnings in some IDEs. [bug=1897120]\n   ```\n   \n  \n  \n   ### 4.9.1\n   ```\n   * Added a keyword argument &#x27;on_duplicate_attribute&#x27; to the\n  BeautifulSoupHTMLParser constructor (used by the html.parser tree\n  builder) which lets you customize the handling of markup that\n  contains the same attribute more than once, as in:\n  &lt;a href=&quot;url1&quot; href=&quot;url2&quot;&gt; [bug=1878209]\n\n* Added a distinct subclass, GuessedAtParserWarning, for the warning\n  issued when BeautifulSoup is instantiated without a parser being\n  specified. [bug=1873787]\n\n* Added a distinct subclass, MarkupResemblesLocatorWarning, for the\n  warning issued when BeautifulSoup is instantiated with &#x27;markup&#x27; that\n  actually seems to be a URL or the path to a file on\n  disk. [bug=1873787]\n\n* The new NavigableString subclasses (Stylesheet, Script, and\n  TemplateString) can now be imported directly from the bs4 package.\n\n* If you encode a document with a Python-specific encoding like\n  &#x27;unicode_escape&#x27;, that encoding is no longer mentioned in the final\n  XML or HTML document. Instead, encoding information is omitted or\n  left blank. [bug=1874955]\n\n* Fixed test failures when run against soupselect 2.0. Patch by Tom\u00e1\u0161\n  Chv\u00e1tal. [bug=1872279]\n   ```\n   \n  \n  \n   ### 4.9.0\n   ```\n   * Added PageElement.decomposed, a new property which lets you\n  check whether you&#x27;ve already called decompose() on a Tag or\n  NavigableString.\n\n* Embedded CSS and Javascript is now stored in distinct Stylesheet and\n  Script tags, which are ignored by methods like get_text() since most\n  people don&#x27;t consider this sort of content to be &#x27;text&#x27;. This\n  feature is not supported by the html5lib treebuilder. [bug=1868861]\n\n* Added a Russian translation by &#x27;authoress&#x27; to the repository.\n\n* Fixed an unhandled exception when formatting a Tag that had been\n  decomposed.[bug=1857767]\n\n* Fixed a bug that happened when passing a Unicode filename containing\n  non-ASCII characters as markup into Beautiful Soup, on a system that\n  allows Unicode filenames. [bug=1866717]\n\n* Added a performance optimization to PageElement.extract(). Patch by\n  Arthur Darcet.\n   ```\n   \n  \n  \n   ### 4.8.2\n   ```\n   * Added Python docstrings to all public methods of the most commonly\n  used classes.\n\n* Added a Chinese translation by Deron Wang and a Brazilian Portuguese\n  translation by Cezar Peixeiro to the repository.\n\n* Fixed two deprecation warnings. Patches by Colin\n  Watson and Nicholas Neumann. [bug=1847592] [bug=1855301]\n\n* The html.parser tree builder now correctly handles DOCTYPEs that are\n  not uppercase. [bug=1848401]\n\n* PageElement.select() now returns a ResultSet rather than a regular\n  list, making it consistent with methods like find_all().\n   ```\n   \n  \n  \n   ### 4.8.1\n   ```\n   * When the html.parser or html5lib parsers are in use, Beautiful Soup\n  will, by default, record the position in the original document where\n  each tag was encountered. This includes line number (Tag.sourceline)\n  and position within a line (Tag.sourcepos).  Based on code by Chris\n  Mayo. [bug=1742921]\n\n* When instantiating a BeautifulSoup object, it&#x27;s now possible to\n   provide a dictionary (&#x27;element_classes&#x27;) of the classes you&#x27;d like to be\n   instantiated instead of Tag, NavigableString, etc.\n\n* Fixed the definition of the default XML namespace when using\n   lxml 4.4. Patch by Isaac Muse. [bug=1840141]\n\n* Fixed a crash when pretty-printing tags that were not created\n   during initial parsing. [bug=1838903]\n\n* Copying a Tag preserves information that was originally obtained from\n   the TreeBuilder used to build the original Tag. [bug=1838903]\n\n* Raise an explanatory exception when the underlying parser\n   completely rejects the incoming markup. [bug=1838877]\n\n* Avoid a crash when trying to detect the declared encoding of a\n   Unicode document. [bug=1838877]\n\n* Avoid a crash when unpickling certain parse trees generated\n   using html5lib on Python 3. [bug=1843545]\n   ```\n   \n  \n  \n   ### 4.8.0\n   ```\n   This release focuses on making it easier to customize Beautiful Soup&#x27;s\ninput mechanism (the TreeBuilder) and output mechanism (the Formatter).\n\n* You can customize the TreeBuilder object by passing keyword\n  arguments into the BeautifulSoup constructor. Those keyword\n  arguments will be passed along into the TreeBuilder constructor.\n\n  The main reason to do this right now is to change how which\n  attributes are treated as multi-valued attributes (the way &#x27;class&#x27;\n  is treated by default). You can do this with the\n  &#x27;multi_valued_attributes&#x27; argument. [bug=1832978]\n\n* The role of Formatter objects has been greatly expanded. The Formatter\n  class now controls the following:\n\n  - The function to call to perform entity substitution. (This was\n    previously Formatter&#x27;s only job.)\n  - Which tags should be treated as containing CDATA and have their\n    contents exempt from entity substitution.\n  - The order in which a tag&#x27;s attributes are output. [bug=1812422]\n  - Whether or not to put a &#x27;/&#x27; inside a void element, e.g. &#x27;&lt;br/&gt;&#x27; vs &#x27;&lt;br&gt;&#x27;\n\n  All preexisting code should work as before.\n\n* Added a new method to the API, Tag.smooth(), which consolidates\n  multiple adjacent NavigableString elements. [bug=1697296]\n\n* &amp;apos; (which is valid in XML, XHTML, and HTML 5, but not HTML 4) is always\n  recognized as a named entity and converted to a single quote. [bug=1818721]\n   ```\n   \n  \n  \n   ### 4.7.1\n   ```\n   * Fixed a significant performance problem introduced in 4.7.0. [bug=1810617]\n\n* Fixed an incorrectly raised exception when inserting a tag before or\n  after an identical tag. [bug=1810692]\n\n* Beautiful Soup will no longer try to keep track of namespaces that\n  are not defined with a prefix; this can confuse soupselect. [bug=1810680]\n\n* Tried even harder to avoid the deprecation warning originally fixed in\n   4.6.1. [bug=1778909]\n   ```\n   \n  \n  \n   ### 4.7.0\n   ```\n   * Beautiful Soup&#x27;s CSS Selector implementation has been replaced by a\n  dependency on Isaac Muse&#x27;s SoupSieve project (the soupsieve package\n  on PyPI). The good news is that SoupSieve has a much more robust and\n  complete implementation of CSS selectors, resolving a large number\n  of longstanding issues. The bad news is that from this point onward,\n  SoupSieve must be installed if you want to use the select() method.\n\n  You don&#x27;t have to change anything lf you installed Beautiful Soup\n  through pip (SoupSieve will be automatically installed when you\n  upgrade Beautiful Soup) or if you don&#x27;t use CSS selectors from\n  within Beautiful Soup.\n\n  SoupSieve documentation: https://facelessuser.github.io/soupsieve/\n\n* Added the PageElement.extend() method, which works like list.append().\n   [bug=1514970]\n\n* PageElement.insert_before() and insert_after() now take a variable\n   number of arguments. [bug=1514970]\n\n* Fix a number of problems with the tree builder that caused\n  trees that were superficially okay, but which fell apart when bits\n  were extracted. Patch by Isaac Muse. [bug=1782928,1809910]\n\n* Fixed a problem with the tree builder in which elements that\n  contained no content (such as empty comments and all-whitespace\n  elements) were not being treated as part of the tree. Patch by Isaac\n  Muse. [bug=1798699]\n\n* Fixed a problem with multi-valued attributes where the value\n  contained whitespace. Thanks to Jens Svalgaard for the\n  fix. [bug=1787453]\n\n* Clarified ambiguous license statements in the source code. Beautiful\n  Soup is released under the MIT license, and has been since 4.4.0.\n\n* This file has been renamed from NEWS.txt to CHANGELOG.\n   ```\n   \n  \n  \n   ### 4.6.3\n   ```\n   * Exactly the same as 4.6.2. Re-released to make the README file\n  render properly on PyPI.\n   ```\n   \n  \n  \n   ### 4.6.2\n   ```\n   * Fix an exception when a custom formatter was asked to format a void\n  element. [bug=1784408]\n   ```\n   \n  \n  \n   ### 4.6.1\n   ```\n   * Stop data loss when encountering an empty numeric entity, and\n  possibly in other cases.  Thanks to tos.kamiya for the fix. [bug=1698503]\n\n* Preserve XML namespaces introduced inside an XML document, not just\n   the ones introduced at the top level. [bug=1718787]\n\n* Added a new formatter, &quot;html5&quot;, which represents void elements\n   as &quot;&lt;element&gt;&quot; rather than &quot;&lt;element/&gt;&quot;.  [bug=1716272]\n\n* Fixed a problem where the html.parser tree builder interpreted\n  a string like &quot;&amp;foo &quot; as the character entity &quot;&amp;foo;&quot;  [bug=1728706]\n\n* Correctly handle invalid HTML numeric character entities like &amp;147;\n  which reference code points that are not Unicode code points. Note\n  that this is only fixed when Beautiful Soup is used with the\n  html.parser parser -- html5lib already worked and I couldn&#x27;t fix it\n  with lxml.  [bug=1782933]\n\n* Improved the warning given when no parser is specified. [bug=1780571]\n\n* When markup contains duplicate elements, a select() call that\n  includes multiple match clauses will match all relevant\n  elements. [bug=1770596]\n\n* Fixed code that was causing deprecation warnings in recent Python 3\n  versions. Includes a patch from Ville Skytt\u00e4. [bug=1778909] [bug=1689496]\n\n* Fixed a Windows crash in diagnose() when checking whether a long\n  markup string is a filename. [bug=1737121]\n\n* Stopped HTMLParser from raising an exception in very rare cases of\n  bad markup. [bug=1708831]\n\n* Fixed a bug where find_all() was not working when asked to find a\n  tag with a namespaced name in an XML document that was parsed as\n  HTML. [bug=1723783]\n\n* You can get finer control over formatting by subclassing\n  bs4.element.Formatter and passing a Formatter instance into (e.g.)\n  encode(). [bug=1716272]\n\n* You can pass a dictionary of `attrs` into\n  BeautifulSoup.new_tag. This makes it possible to create a tag with\n  an attribute like &#x27;name&#x27; that would otherwise be masked by another\n  argument of new_tag. [bug=1779276]\n\n* Clarified the deprecation warning when accessing tag.fooTag, to cover\n  the possibility that you might really have been looking for a tag\n  called &#x27;fooTag&#x27;.\n   ```\n   \n  \n  \n   ### 4.6.0\n   ```\n   * Added the `Tag.get_attribute_list` method, which acts like `Tag.get` for\n  getting the value of an attribute, but which always returns a list,\n  whether or not the attribute is a multi-value attribute. [bug=1678589]\n\n* It&#x27;s now possible to use a tag&#x27;s namespace prefix when searching,\n  e.g. soup.find(&#x27;namespace:tag&#x27;) [bug=1655332]\n\n* Improved the handling of empty-element tags like &lt;br&gt; when using the\n  html.parser parser. [bug=1676935]\n\n* HTML parsers treat all HTML4 and HTML5 empty element tags (aka void\n  element tags) correctly. [bug=1656909]\n\n* Namespace prefix is preserved when an XML tag is copied. Thanks\n  to Vikas for a patch and test. [bug=1685172]\n   ```\n   \n  \n  \n   ### 4.5.3\n   ```\n   * Fixed foster parenting when html5lib is the tree builder. Thanks to\n  Geoffrey Sneddon for a patch and test.\n  \n* Fixed yet another problem that caused the html5lib tree builder to\n  create a disconnected parse tree. [bug=1629825]\n   ```\n   \n  \n  \n   ### 4.5.2\n   ```\n   * Apart from the version number, this release is identical to\n  4.5.3. Due to user error, it could not be completely uploaded to\n  PyPI. Use 4.5.3 instead.\n   ```\n   \n  \n  \n   ### 4.5.1\n   ```\n   * Fixed a crash when passing Unicode markup that contained a\n  processing instruction into the lxml HTML parser on Python\n  3. [bug=1608048]\n   ```\n   \n  \n  \n   ### 4.5.0\n   ```\n   * Beautiful Soup is no longer compatible with Python 2.6. This\n  actually happened a few releases ago, but it&#x27;s now official.\n\n* Beautiful Soup will now work with versions of html5lib greater than\n  0.99999999. [bug=1603299]\n\n* If a search against each individual value of a multi-valued\n  attribute fails, the search will be run one final time against the\n  complete attribute value considered as a single string. That is, if\n  a tag has class=&quot;foo bar&quot; and neither &quot;foo&quot; nor &quot;bar&quot; matches, but\n  &quot;foo bar&quot; does, the tag is now considered a match.\n\n  This happened in previous versions, but only when the value being\n  searched for was a string. Now it also works when that value is\n  a regular expression, a list of strings, etc. [bug=1476868]\n\n* Fixed a bug that deranged the tree when a whitespace element was\n  reparented into a tag that contained an identical whitespace\n  element. [bug=1505351]\n\n* Added support for CSS selector values that contain quoted spaces,\n  such as tag[style=&quot;display: foo&quot;]. [bug=1540588]\n\n* Corrected handling of XML processing instructions. [bug=1504393]\n\n* Corrected an encoding error that happened when a BeautifulSoup\n  object was copied. [bug=1554439]\n\n* The contents of &lt;textarea&gt; tags will no longer be modified when the\n  tree is prettified. [bug=1555829]\n\n* When a BeautifulSoup object is pickled but its tree builder cannot\n  be pickled, its .builder attribute is set to None instead of being\n  destroyed. This avoids a performance problem once the object is\n  unpickled. [bug=1523629]\n\n* Specify the file and line number when warning about a\n  BeautifulSoup object being instantiated without a parser being\n  specified. [bug=1574647]\n\n* The `limit` argument to `select()` now works correctly, though it&#x27;s\n  not implemented very efficiently. [bug=1520530]\n\n* Fixed a Python 3 ByteWarning when a URL was passed in as though it\n  were markup. Thanks to James Salter for a patch and\n  test. [bug=1533762]\n\n* We don&#x27;t run the check for a filename passed in as markup if the\n  &#x27;filename&#x27; contains a less-than character; the less-than character\n  indicates it&#x27;s most likely a very small document. [bug=1577864]\n   ```\n   \n  \n  \n   ### 4.4.1\n   ```\n   * Fixed a bug that deranged the tree when part of it was\n  removed. Thanks to Eric Weiser for the patch and John Wiseman for a\n  test. [bug=1481520]\n\n* Fixed a parse bug with the html5lib tree-builder. Thanks to Roel\n  Kramer for the patch. [bug=1483781]\n\n* Improved the implementation of CSS selector grouping. Thanks to\n  Orangain for the patch. [bug=1484543]\n\n* Fixed the test_detect_utf8 test so that it works when chardet is\n  installed. [bug=1471359]\n\n* Corrected the output of Declaration objects. [bug=1477847]\n   ```\n   \n  \n  \n   ### 4.4.0\n   ```\n   Especially important changes:\n\n* Added a warning when you instantiate a BeautifulSoup object without\n  explicitly naming a parser. [bug=1398866]\n\n* __repr__ now returns an ASCII bytestring in Python 2, and a Unicode\n  string in Python 3, instead of a UTF8-encoded bytestring in both\n  versions. In Python 3, __str__ now returns a Unicode string instead\n  of a bytestring. [bug=1420131]\n\n* The `text` argument to the find_* methods is now called `string`,\n  which is more accurate. `text` still works, but `string` is the\n  argument described in the documentation. `text` may eventually\n  change its meaning, but not for a very long time. [bug=1366856]\n\n* Changed the way soup objects work under copy.copy(). Copying a\n  NavigableString or a Tag will give you a new NavigableString that&#x27;s\n  equal to the old one but not connected to the parse tree. Patch by\n  Martijn Peters. [bug=1307490]\n\n* Started using a standard MIT license. [bug=1294662]\n\n* Added a Chinese translation of the documentation by Delong .w.\n\nNew features:\n\n* Introduced the select_one() method, which uses a CSS selector but\n  only returns the first match, instead of a list of\n  matches. [bug=1349367]\n\n* You can now create a Tag object without specifying a\n  TreeBuilder. Patch by Martijn Pieters. [bug=1307471]\n\n* You can now create a NavigableString or a subclass just by invoking\n  the constructor. [bug=1294315]\n\n* Added an `exclude_encodings` argument to UnicodeDammit and to the\n  Beautiful Soup constructor, which lets you prohibit the detection of\n  an encoding that you know is wrong. [bug=1469408]\n\n* The select() method now supports selector grouping. Patch by\n  Francisco Canas [bug=1191917]\n\nBug fixes:\n\n* Fixed yet another problem that caused the html5lib tree builder to\n  create a disconnected parse tree. [bug=1237763]\n\n* Force object_was_parsed() to keep the tree intact even when an element\n  from later in the document is moved into place. [bug=1430633]\n\n* Fixed yet another bug that caused a disconnected tree when html5lib\n  copied an element from one part of the tree to another. [bug=1270611]\n\n* Fixed a bug where Element.extract() could create an infinite loop in\n  the remaining tree.\n\n* The select() method can now find tags whose names contain\n  dashes. Patch by Francisco Canas. [bug=1276211]\n\n* The select() method can now find tags with attributes whose names\n  contain dashes. Patch by Marek Kapolka. [bug=1304007]\n\n* Improved the lxml tree builder&#x27;s handling of processing\n  instructions. [bug=1294645]\n\n* Restored the helpful syntax error that happens when you try to\n  import the Python 2 edition of Beautiful Soup under Python\n  3. [bug=1213387]\n\n* In Python 3.4 and above, set the new convert_charrefs argument to\n  the html.parser constructor to avoid a warning and future\n  failures. Patch by Stefano Revera. [bug=1375721]\n\n* The warning when you pass in a filename or URL as markup will now be\n  displayed correctly even if the filename or URL is a Unicode\n  string. [bug=1268888]\n\n* If the initial &lt;html&gt; tag contains a CDATA list attribute such as\n  &#x27;class&#x27;, the html5lib tree builder will now turn its value into a\n  list, as it would with any other tag. [bug=1296481]\n\n* Fixed an import error in Python 3.5 caused by the removal of the\n  HTMLParseError class. [bug=1420063]\n\n* Improved docstring for encode_contents() and\n  decode_contents(). [bug=1441543]\n\n* Fixed a crash in Unicode, Dammit&#x27;s encoding detector when the name\n  of the encoding itself contained invalid bytes. [bug=1360913]\n\n* Improved the exception raised when you call .unwrap() or\n  .replace_with() on an element that&#x27;s not attached to a tree.\n\n* Raise a NotImplementedError whenever an unsupported CSS pseudoclass\n  is used in select(). Previously some cases did not result in a\n  NotImplementedError.\n\n* It&#x27;s now possible to pickle a BeautifulSoup object no matter which\n  tree builder was used to create it. However, the only tree builder\n  that survives the pickling process is the HTMLParserTreeBuilder\n  (&#x27;html.parser&#x27;). If you unpickle a BeautifulSoup object created with\n  some other tree builder, soup.builder will be None. [bug=1231545]\n   ```\n   \n  \n  \n   ### 4.3.2\n   ```\n   * Fixed a bug in which short Unicode input was improperly encoded to\n  ASCII when checking whether or not it was the name of a file on\n  disk. [bug=1227016]\n\n* Fixed a crash when a short input contains data not valid in\n  filenames. [bug=1232604]\n\n* Fixed a bug that caused Unicode data put into UnicodeDammit to\n  return None instead of the original data. [bug=1214983]\n\n* Combined two tests to stop a spurious test failure when tests are\n  run by nosetests. [bug=1212445]\n   ```\n   \n  \n  \n   ### 4.3.1\n   ```\n   * Fixed yet another problem with the html5lib tree builder, caused by\n  html5lib&#x27;s tendency to rearrange the tree during\n  parsing. [bug=1189267]\n\n* Fixed a bug that caused the optimized version of find_all() to\n  return nothing. [bug=1212655]\n   ```\n   \n  \n  \n   ### 4.3.0\n   ```\n   * Instead of converting incoming data to Unicode and feeding it to the\n  lxml tree builder in chunks, Beautiful Soup now makes successive\n  guesses at the encoding of the incoming data, and tells lxml to\n  parse the data as that encoding. Giving lxml more control over the\n  parsing process improves performance and avoids a number of bugs and\n  issues with the lxml parser which had previously required elaborate\n  workarounds:\n\n  - An issue in which lxml refuses to parse Unicode strings on some\n    systems. [bug=1180527]\n\n  - A returning bug that truncated documents longer than a (very\n    small) size. [bug=963880]\n\n  - A returning bug in which extra spaces were added to a document if\n    the document defined a charset other than UTF-8. [bug=972466]\n\n  This required a major overhaul of the tree builder architecture. If\n  you wrote your own tree builder and didn&#x27;t tell me, you&#x27;ll need to\n  modify your prepare_markup() method.\n\n* The UnicodeDammit code that makes guesses at encodings has been\n  split into its own class, EncodingDetector. A lot of apparently\n  redundant code has been removed from Unicode, Dammit, and some\n  undocumented features have also been removed.\n\n* Beautiful Soup will issue a warning if instead of markup you pass it\n  a URL or the name of a file on disk (a common beginner&#x27;s mistake).\n\n* A number of optimizations improve the performance of the lxml tree\n  builder by about 33%, the html.parser tree builder by about 20%, and\n  the html5lib tree builder by about 15%.\n\n* All find_all calls should now return a ResultSet object. Patch by\n  Aaron DeVore. [bug=1194034]\n   ```\n   \n  \n  \n   ### 4.2.1\n   ```\n   * The default XML formatter will now replace ampersands even if they\n  appear to be part of entities. That is, &quot;&amp;lt;&quot; will become\n  &quot;&amp;amp;lt;&quot;. The old code was left over from Beautiful Soup 3, which\n  didn&#x27;t always turn entities into Unicode characters.\n\n  If you really want the old behavior (maybe because you add new\n  strings to the tree, those strings include entities, and you want\n  the formatter to leave them alone on output), it can be found in\n  EntitySubstitution.substitute_xml_containing_entities(). [bug=1182183]\n\n* Gave new_string() the ability to create subclasses of\n  NavigableString. [bug=1181986]\n\n* Fixed another bug by which the html5lib tree builder could create a\n  disconnected tree. [bug=1182089]\n\n* The .previous_element of a BeautifulSoup object is now always None,\n  not the last element to be parsed. [bug=1182089]\n\n* Fixed test failures when lxml is not installed. [bug=1181589]\n\n* html5lib now supports Python 3. Fixed some Python 2-specific\n  code in the html5lib test suite. [bug=1181624]\n\n* The html.parser treebuilder can now handle numeric attributes in\n  text when the hexidecimal name of the attribute starts with a\n  capital X. Patch by Tim Shirley. [bug=1186242]\n   ```\n   \n  \n  \n   ### 4.2.0\n   ```\n   * The Tag.select() method now supports a much wider variety of CSS\n  selectors.\n\n - Added support for the adjacent sibling combinator (+) and the\n   general sibling combinator (~). Tests by &quot;liquider&quot;. [bug=1082144]\n\n - The combinators (&gt;, +, and ~) can now combine with any supported\n   selector, not just one that selects based on tag name.\n\n - Added limited support for the &quot;nth-of-type&quot; pseudo-class. Code\n   by Sven Slootweg. [bug=1109952]\n\n* The BeautifulSoup class is now aliased to &quot;_s&quot; and &quot;_soup&quot;, making\n  it quicker to type the import statement in an interactive session:\n\n  from bs4 import _s\n   or\n  from bs4 import _soup\n\n  The alias may change in the future, so don&#x27;t use this in code you&#x27;re\n  going to run more than once.\n\n* Added the &#x27;diagnose&#x27; submodule, which includes several useful\n  functions for reporting problems and doing tech support.\n\n  - diagnose(data) tries the given markup on every installed parser,\n    reporting exceptions and displaying successes. If a parser is not\n    installed, diagnose() mentions this fact.\n\n  - lxml_trace(data, html=True) runs the given markup through lxml&#x27;s\n    XML parser or HTML parser, and prints out the parser events as\n    they happen. This helps you quickly determine whether a given\n    problem occurs in lxml code or Beautiful Soup code.\n\n  - htmlparser_trace(data) is the same thing, but for Python&#x27;s\n    built-in HTMLParser class.\n\n* In an HTML document, the contents of a &lt;script&gt; or &lt;style&gt; tag will\n  no longer undergo entity substitution by default. XML documents work\n  the same way they did before. [bug=1085953]\n\n* Methods like get_text() and properties like .strings now only give\n  you strings that are visible in the document--no comments or\n  processing commands. [bug=1050164]\n\n* The prettify() method now leaves the contents of &lt;pre&gt; tags\n  alone. [bug=1095654]\n\n* Fix a bug in the html5lib treebuilder which sometimes created\n  disconnected trees. [bug=1039527]\n\n* Fix a bug in the lxml treebuilder which crashed when a tag included\n  an attribute from the predefined &quot;xml:&quot; namespace. [bug=1065617]\n\n* Fix a bug by which keyword arguments to find_parent() were not\n  being passed on. [bug=1126734]\n\n* Stop a crash when unwisely messing with a tag that&#x27;s been\n  decomposed. [bug=1097699]\n\n* Now that lxml&#x27;s segfault on invalid doctype has been fixed, fixed a\n  corresponding problem on the Beautiful Soup end that was previously\n  invisible. [bug=984936]\n\n* Fixed an exception when an overspecified CSS selector didn&#x27;t match\n  anything. Code by Stefaan Lippens. [bug=1168167]\n   ```\n   \n  \n  \n   ### 4.1.3\n   ```\n   * Skipped a test under Python 2.6 and Python 3.1 to avoid a spurious\n  test failure caused by the lousy HTMLParser in those\n  versions. [bug=1038503]\n\n* Raise a more specific error (FeatureNotFound) when a requested\n  parser or parser feature is not installed. Raise NotImplementedError\n  instead of ValueError when the user calls insert_before() or\n  insert_after() on the BeautifulSoup object itself. Patch by Aaron\n  Devore. [bug=1038301]\n   ```\n   \n  \n  \n   ### 4.1.2\n   ```\n   * As per PEP-8, allow searching by CSS class using the &#x27;class_&#x27;\n  keyword argument. [bug=1037624]\n\n* Display namespace prefixes for namespaced attribute names, instead of\n  the fully-qualified names given by the lxml parser. [bug=1037597]\n\n* Fixed a crash on encoding when an attribute name contained\n  non-ASCII characters.\n\n* When sniffing encodings, if the cchardet library is installed,\n  Beautiful Soup uses it instead of chardet. cchardet is much\n  faster. [bug=1020748]\n\n* Use logging.warning() instead of warning.warn() to notify the user\n  that characters were replaced with REPLACEMENT\n  CHARACTER. [bug=1013862]\n   ```\n   \n  \n  \n   ### 4.1.1\n   ```\n   * Fixed an html5lib tree builder crash which happened when html5lib\n  moved a tag with a multivalued attribute from one part of the tree\n  to another. [bug=1019603]\n\n* Correctly display closing tags with an XML namespace declared. Patch\n  by Andreas Kostyrka. [bug=1019635]\n\n* Fixed a typo that made parsing significantly slower than it should\n  have been, and also waited too long to close tags with XML\n  namespaces. [bug=1020268]\n\n* get_text() now returns an empty Unicode string if there is no text,\n  rather than an empty bytestring. [bug=1020387]\n   ```\n   \n  \n  \n   ### 4.1.0\n   ```\n   * Added experimental support for fixing Windows-1252 characters\n  embedded in UTF-8 documents. (UnicodeDammit.detwingle())\n\n* Fixed the handling of &amp;quot; with the built-in parser. [bug=993871]\n\n* Comments, processing instructions, document type declarations, and\n  markup declarations are now treated as preformatted strings, the way\n  CData blocks are. [bug=1001025]\n\n* Fixed a bug with the lxml treebuilder that prevented the user from\n  adding attributes to a tag that didn&#x27;t originally have\n  attributes. [bug=1002378] Thanks to Oliver Beattie for the patch.\n\n* Fixed some edge-case bugs having to do with inserting an element\n  into a tag it&#x27;s already inside, and replacing one of a tag&#x27;s\n  children with another. [bug=997529]\n\n* Added the ability to search for attribute values specified in UTF-8. [bug=1003974]\n\n  This caused a major refactoring of the search code. All the tests\n  pass, but it&#x27;s possible that some searches will behave differently.\n   ```\n   \n  \n  \n   ### 4.0.5\n   ```\n   * Added a new method, wrap(), which wraps an element in a tag.\n\n* Renamed replace_with_children() to unwrap(), which is easier to\n  understand and also the jQuery name of the function.\n\n* Made encoding substitution in &lt;meta&gt; tags completely transparent (no\n  more %SOUP-ENCODING%).\n\n* Fixed a bug in decoding data that contained a byte-order mark, such\n  as data encoded in UTF-16LE. [bug=988980]\n\n* Fixed a bug that made the HTMLParser treebuilder generate XML\n  definitions ending with two question marks instead of\n  one. [bug=984258]\n\n* Upon document generation, CData objects are no longer run through\n  the formatter. [bug=988905]\n\n* The test suite now passes when lxml is not installed, whether or not\n  html5lib is installed. [bug=987004]\n\n* Print a warning on HTMLParseErrors to let people know they should\n  install a better parser library.\n   ```\n   \n  \n  \n   ### 4.0.4\n   ```\n   * Fixed a bug that sometimes created disconnected trees.\n\n* Fixed a bug with the string setter that moved a string around the\n  tree instead of copying it. [bug=983050]\n\n* Attribute values are now run through the provided output formatter.\n  Previously they were always run through the &#x27;minimal&#x27; formatter. In\n  the future I may make it possible to specify different formatters\n  for attribute values and strings, but for now, consistent behavior\n  is better than inconsistent behavior. [bug=980237]\n\n* Added the missing renderContents method from Beautiful Soup 3. Also\n  added an encode_contents() method to go along with decode_contents().\n\n* Give a more useful error when the user tries to run the Python 2\n  version of BS under Python 3.\n\n* UnicodeDammit can now convert Microsoft smart quotes to ASCII with\n  UnicodeDammit(markup, smart_quotes_to=&quot;ascii&quot;).\n   ```\n   \n  \n  \n   ### 4.0.3\n   ```\n   * Fixed a typo that caused some versions of Python 3 to convert the\n  Beautiful Soup codebase incorrectly.\n\n* Got rid of the 4.0.2 workaround for HTML documents--it was\n  unnecessary and the workaround was triggering a (possibly different,\n  but related) bug in lxml. [bug=972466]\n   ```\n   \n  \n  \n   ### 4.0.2\n   ```\n   * Worked around a possible bug in lxml that prevents non-tiny XML\n  documents from being parsed. [bug=963880, bug=963936]\n\n* Fixed a bug where specifying `text` while also searching for a tag\n  only worked if `text` wanted an exact string match. [bug=955942]\n   ```\n   \n  \n  \n   ### 4.0.1\n   ```\n   * This is the first official release of Beautiful Soup 4. There is no\n   ```\n   \n  \n  \n   ### 4.0.0\n   ```\n   might treat &quot;4.0.0&quot; as being an earlier version than &quot;4.0.0b10&quot;.\n\n* Brought BS up to date with the latest release of soupselect, adding\n  CSS selector support for direct descendant matches and multiple CSS\n  class matches.\n   ```\n   \n  \n  \n   ### 4.0.0b10\n   ```\n   * Added support for simple CSS selectors, taken from the soupselect project.\n\n* Fixed a crash when using html5lib. [bug=943246]\n\n* In HTML5-style &lt;meta charset=&quot;foo&quot;&gt; tags, the value of the &quot;charset&quot;\n  attribute is now replaced with the appropriate encoding on\n  output. [bug=942714]\n\n* Fixed a bug that caused calling a tag to sometimes call find_all()\n  with the wrong arguments. [bug=944426]\n\n* For backwards compatibility, brought back the BeautifulStoneSoup\n  class as a deprecated wrapper around BeautifulSoup.\n   ```\n   \n  \n  \n   ### 4.0.0b9\n   ```\n   * Fixed the string representation of DOCTYPEs that have both a public\n  ID and a system ID.\n\n* Fixed the generated XML declaration.\n\n* Renamed Tag.nsprefix to Tag.prefix, for consistency with\n  NamespacedAttribute.\n\n* Fixed a test failure that occurred on Python 3.x when chardet was\n  installed.\n\n* Made prettify() return Unicode by default, so it will look nice on\n  Python 3 when passed into print().\n   ```\n   \n  \n  \n   ### 4.0.0b8\n   ```\n   * All tree builders now preserve namespace information in the\n  documents they parse. If you use the html5lib parser or lxml&#x27;s XML\n  parser, you can access the namespace URL for a tag as tag.namespace.\n\n  However, there is no special support for namespace-oriented\n  searching or tree manipulation. When you search the tree, you need\n  to use namespace prefixes exactly as they&#x27;re used in the original\n  document.\n\n* The string representation of a DOCTYPE always ends in a newline.\n\n* Issue a warning if the user tries to use a SoupStrainer in\n  conjunction with the html5lib tree builder, which doesn&#x27;t support\n  them.\n   ```\n   \n  \n  \n   ### 4.0.0b7\n   ```\n   * Upon decoding to string, any characters that can&#x27;t be represented in\n  your chosen encoding will be converted into numeric XML entity\n  references.\n\n* Issue a warning if characters were replaced with REPLACEMENT\n  CHARACTER during Unicode conversion.\n\n* Restored compatibility with Python 2.6.\n\n* The install process no longer installs docs or auxiliary text files.\n\n* It&#x27;s now possible to deepcopy a BeautifulSoup object created with\n  Python&#x27;s built-in HTML parser.\n\n* About 100 unit tests that &quot;test&quot; the behavior of various parsers on\n  invalid markup have been removed. Legitimate changes to those\n  parsers caused these tests to fail, indicating that perhaps\n  Beautiful Soup should not test the behavior of foreign\n  libraries.\n\n  The problematic unit tests have been reformulated as informational\n  comparisons generated by the script\n  scripts/demonstrate_parser_differences.py.\n\n  This makes Beautiful Soup compatible with html5lib version 0.95 and\n  future versions of HTMLParser.\n   ```\n   \n  \n  \n   ### 4.0.0b6\n   ```\n   * Multi-valued attributes like &quot;class&quot; always have a list of values,\n  even if there&#x27;s only one value in the list.\n\n* Added a number of multi-valued attributes defined in HTML5.\n\n* Stopped generating a space before the slash that closes an\n  empty-element tag. This may come back if I add a special XHTML mode\n  (http://www.w3.org/TR/xhtml1/#C_2), but right now it&#x27;s pretty\n  useless.\n\n* Passing text along with tag-specific arguments to a find* method:\n\n   find(&quot;a&quot;, text=&quot;Click here&quot;)\n\n  will find tags that contain the given text as their\n  .string. Previously, the tag-specific arguments were ignored and\n  only strings were searched.\n\n* Fixed a bug that caused the html5lib tree builder to build a\n  partially disconnected tree. Generally cleaned up the html5lib tree\n  builder.\n\n* If you restrict a multi-valued attribute like &quot;class&quot; to a string\n  that contains spaces, Beautiful Soup will only consider it a match\n  if the values correspond to that specific string.\n   ```\n   \n  \n  \n   ### 4.0.0b5\n   ```\n   * Rationalized Beautiful Soup&#x27;s treatment of CSS class. A tag\n  belonging to multiple CSS classes is treated as having a list of\n  values for the &#x27;class&#x27; attribute. Searching for a CSS class will\n  match *any* of the CSS classes.\n\n  This actually affects all attributes that the HTML standard defines\n  as taking multiple values (class, rel, rev, archive, accept-charset,\n  and headers), but &#x27;class&#x27; is by far the most common. [bug=41034]\n\n* If you pass anything other than a dictionary as the second argument\n  to one of the find* methods, it&#x27;ll assume you want to use that\n  object to search against a tag&#x27;s CSS classes. Previously this only\n  worked if you passed in a string.\n\n* Fixed a bug that caused a crash when you passed a dictionary as an\n  attribute value (possibly because you mistyped &quot;attrs&quot;). [bug=842419]\n\n* Unicode, Dammit now detects the encoding in HTML 5-style &lt;meta&gt; tags\n  like &lt;meta charset=&quot;utf-8&quot; /&gt;. [bug=837268]\n\n* If Unicode, Dammit can&#x27;t figure out a consistent encoding for a\n  page, it will try each of its guesses again, with errors=&quot;replace&quot;\n  instead of errors=&quot;strict&quot;. This may mean that some data gets\n  replaced with REPLACEMENT CHARACTER, but at least most of it will\n  get turned into Unicode. [bug=754903]\n\n* Patched over a bug in html5lib (?) that was crashing Beautiful Soup\n  on certain kinds of markup. [bug=838800]\n\n* Fixed a bug that wrecked the tree if you replaced an element with an\n  empty string. [bug=728697]\n\n* Improved Unicode, Dammit&#x27;s behavior when you give it Unicode to\n  begin with.\n   ```\n   \n  \n  \n   ### 4.0.0b4\n   ```\n   * Added BeautifulSoup.new_string() to go along with BeautifulSoup.new_tag()\n\n* BeautifulSoup.new_tag() will follow the rules of whatever\n  tree-builder was used to create the original BeautifulSoup object. A\n  new &lt;p&gt; tag will look like &quot;&lt;p /&gt;&quot; if the soup object was created to\n  parse XML, but it will look like &quot;&lt;p&gt;&lt;/p&gt;&quot; if the soup object was\n  created to parse HTML.\n\n* We pass in strict=False to html.parser on Python 3, greatly\n  improving html.parser&#x27;s ability to handle bad HTML.\n\n* We also monkeypatch a serious bug in html.parser that made\n  strict=False disastrous on Python 3.2.2.\n\n* Replaced the &quot;substitute_html_entities&quot; argument with the\n  more general &quot;formatter&quot; argument.\n\n* Bare ampersands and angle brackets are always converted to XML\n  entities unless the user prevents it.\n\n* Added PageElement.insert_before() and PageElement.insert_after(),\n  which let you put an element into the parse tree with respect to\n  some other element.\n\n* Raise an exception when the user tries to do something nonsensical\n  like insert a tag into itself.\n   ```\n   \n  \n  \n   ### 4.0.0b3\n   ```\n   Beautiful Soup 4 is a nearly-complete rewrite that removes Beautiful\nSoup&#x27;s custom HTML parser in favor of a system that lets you write a\nlittle glue code and plug in any HTML or XML parser you want.\n\nBeautiful Soup 4.0 comes with glue code for four parsers:\n\n * Python&#x27;s standard HTMLParser (html.parser in Python 3)\n * lxml&#x27;s HTML and XML parsers\n * html5lib&#x27;s HTML parser\n\nHTMLParser is the default, but I recommend you install lxml if you\ncan.\n\nFor complete documentation, see the Sphinx documentation in\nbs4/doc/source/. What follows is a summary of the changes from\nBeautiful Soup 3.\n\n=== The module name has changed ===\n\nPreviously you imported the BeautifulSoup class from a module also\ncalled BeautifulSoup. To save keystrokes and make it clear which\nversion of the API is in use, the module is now called &#x27;bs4&#x27;:\n\n    &gt;&gt;&gt; from bs4 import BeautifulSoup\n\n=== It works with Python 3 ===\n\nBeautiful Soup 3.1.0 worked with Python 3, but the parser it used was\nso bad that it barely worked at all. Beautiful Soup 4 works with\nPython 3, and since its parser is pluggable, you don&#x27;t sacrifice\nquality.\n\nSpecial thanks to Thomas Kluyver and Ezio Melotti for getting Python 3\nsupport to the finish line. Ezio Melotti is also to thank for greatly\nimproving the HTML parser that comes with Python 3.2.\n\n=== CDATA sections are normal text, if they&#x27;re understood at all. ===\n\nCurrently, the lxml and html5lib HTML parsers ignore CDATA sections in\nmarkup:\n\n &lt;p&gt;&lt;![CDATA[foo]]&gt;&lt;/p&gt; =&gt; &lt;p&gt;&lt;/p&gt;\n\nA future version of html5lib will turn CDATA sections into text nodes,\nbut only within tags like &lt;svg&gt; and &lt;math&gt;:\n\n &lt;svg&gt;&lt;![CDATA[foo]]&gt;&lt;/svg&gt; =&gt; &lt;p&gt;foo&lt;/p&gt;\n\nThe default XML parser (which uses lxml behind the scenes) turns CDATA\nsections into ordinary text elements:\n\n &lt;p&gt;&lt;![CDATA[foo]]&gt;&lt;/p&gt; =&gt; &lt;p&gt;foo&lt;/p&gt;\n\nIn theory it&#x27;s possible to preserve the CDATA sections when using the\nXML parser, but I don&#x27;t see how to get it to work in practice.\n\n=== Miscellaneous other stuff ===\n\nIf the BeautifulSoup instance has .is_xml set to True, an appropriate\nXML declaration will be emitted when the tree is transformed into a\nstring:\n\n    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;&gt;\n    &lt;markup&gt;\n     ...\n    &lt;/markup&gt;\n\nThe [&#x27;lxml&#x27;, &#x27;xml&#x27;] tree builder sets .is_xml to True; the other tree\nbuilders set it to False. If you want to parse XHTML with an HTML\nparser, you can set it manually.\n   ```\n   \n  \n  \n   ### 3.2\n   ```\n   to make it obvious which one you should use.\n   ```\n   \n  \n  \n  \n  \n   ### 3.1.0\n   ```\n   A hybrid version that supports 2.4 and can be automatically converted\nto run under Python 3.0. There are three backwards-incompatible\nchanges you should be aware of, but no new features or deliberate\nbehavior changes.\n\n1. str() may no longer do what you want. This is because the meaning\nof str() inverts between Python 2 and 3; in Python 2 it gives you a\nbyte string, in Python 3 it gives you a Unicode string.\n\nThe effect of this is that you can&#x27;t pass an encoding to .__str__\nanymore. Use encode() to get a string and decode() to get Unicode, and\nyou&#x27;ll be ready (well, readier) for Python 3.\n\n2. Beautiful Soup is now based on HTMLParser rather than SGMLParser,\nwhich is gone in Python 3. There&#x27;s some bad HTML that SGMLParser\nhandled but HTMLParser doesn&#x27;t, usually to do with attribute values\nthat aren&#x27;t closed or have brackets inside them:\n\n  &lt;a href=&quot;foo&lt;/a&gt;, &lt;/a&gt;&lt;a href=&quot;bar&quot;&gt;baz&lt;/a&gt;\n  &lt;a b=&quot;&lt;a&gt;&quot;&gt;&#x27;, &#x27;&lt;a b=&quot;&amp;lt;a&amp;gt;&quot;&gt;&lt;/a&gt;&lt;a&gt;&quot;&gt;&lt;/a&gt;\n\nA later version of Beautiful Soup will allow you to plug in different\nparsers to make tradeoffs ", "created_at": "2024-08-05T14:04:09Z", "updated_at": "2024-08-19T14:04:14Z", "closed_at": "2024-08-19T14:04:13Z", "merged_at": null, "merge_commit_sha": "87ce01b6f79ae25c0452ef0f6bb9f0d31435ae80", "assignee": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/deanmalmgren/textract/pulls/522/commits", "review_comments_url": "https://api.github.com/repos/deanmalmgren/textract/pulls/522/comments", "review_comment_url": "https://api.github.com/repos/deanmalmgren/textract/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/deanmalmgren/textract/issues/522/comments", "statuses_url": "https://api.github.com/repos/deanmalmgren/textract/statuses/4f85428c2a9c42e0bf96b64499eacb067dd08874", "head": {"label": "deanmalmgren:pyup-scheduled-update-2024-08-05", "ref": "pyup-scheduled-update-2024-08-05", "sha": "4f85428c2a9c42e0bf96b64499eacb067dd08874", "user": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "repo": {"id": 21476229, "node_id": "MDEwOlJlcG9zaXRvcnkyMTQ3NjIyOQ==", "name": "textract", "full_name": "deanmalmgren/textract", "private": false, "owner": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/deanmalmgren/textract", "description": "extract text from any document. no muss. no fuss.", "fork": false, "url": "https://api.github.com/repos/deanmalmgren/textract", "forks_url": "https://api.github.com/repos/deanmalmgren/textract/forks", "keys_url": "https://api.github.com/repos/deanmalmgren/textract/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/deanmalmgren/textract/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/deanmalmgren/textract/teams", "hooks_url": "https://api.github.com/repos/deanmalmgren/textract/hooks", "issue_events_url": "https://api.github.com/repos/deanmalmgren/textract/issues/events{/number}", "events_url": "https://api.github.com/repos/deanmalmgren/textract/events", "assignees_url": "https://api.github.com/repos/deanmalmgren/textract/assignees{/user}", "branches_url": "https://api.github.com/repos/deanmalmgren/textract/branches{/branch}", "tags_url": "https://api.github.com/repos/deanmalmgren/textract/tags", "blobs_url": "https://api.github.com/repos/deanmalmgren/textract/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/deanmalmgren/textract/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/deanmalmgren/textract/git/refs{/sha}", "trees_url": "https://api.github.com/repos/deanmalmgren/textract/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/deanmalmgren/textract/statuses/{sha}", "languages_url": "https://api.github.com/repos/deanmalmgren/textract/languages", "stargazers_url": "https://api.github.com/repos/deanmalmgren/textract/stargazers", "contributors_url": "https://api.github.com/repos/deanmalmgren/textract/contributors", "subscribers_url": "https://api.github.com/repos/deanmalmgren/textract/subscribers", "subscription_url": "https://api.github.com/repos/deanmalmgren/textract/subscription", "commits_url": "https://api.github.com/repos/deanmalmgren/textract/commits{/sha}", "git_commits_url": "https://api.github.com/repos/deanmalmgren/textract/git/commits{/sha}", "comments_url": "https://api.github.com/repos/deanmalmgren/textract/comments{/number}", "issue_comment_url": "https://api.github.com/repos/deanmalmgren/textract/issues/comments{/number}", "contents_url": "https://api.github.com/repos/deanmalmgren/textract/contents/{+path}", "compare_url": "https://api.github.com/repos/deanmalmgren/textract/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/deanmalmgren/textract/merges", "archive_url": "https://api.github.com/repos/deanmalmgren/textract/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/deanmalmgren/textract/downloads", "issues_url": "https://api.github.com/repos/deanmalmgren/textract/issues{/number}", "pulls_url": "https://api.github.com/repos/deanmalmgren/textract/pulls{/number}", "milestones_url": "https://api.github.com/repos/deanmalmgren/textract/milestones{/number}", "notifications_url": "https://api.github.com/repos/deanmalmgren/textract/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/deanmalmgren/textract/labels{/name}", "releases_url": "https://api.github.com/repos/deanmalmgren/textract/releases{/id}", "deployments_url": "https://api.github.com/repos/deanmalmgren/textract/deployments", "created_at": "2014-07-03T20:36:59Z", "updated_at": "2024-08-23T16:14:10Z", "pushed_at": "2024-08-19T14:04:13Z", "git_url": "git://github.com/deanmalmgren/textract.git", "ssh_url": "git@github.com:deanmalmgren/textract.git", "clone_url": "https://github.com/deanmalmgren/textract.git", "svn_url": "https://github.com/deanmalmgren/textract", "homepage": "http://textract.readthedocs.io", "size": 4531, "stargazers_count": 3854, "watchers_count": 3854, "language": "HTML", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 589, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 138, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["data-mining", "natural-language-processing", "python", "text-mining"], "visibility": "public", "forks": 589, "open_issues": 138, "watchers": 3854, "default_branch": "master"}}, "base": {"label": "deanmalmgren:master", "ref": "master", "sha": "ec3c0c3c982078d22e51cc2753baeaf48cdf2e19", "user": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "repo": {"id": 21476229, "node_id": "MDEwOlJlcG9zaXRvcnkyMTQ3NjIyOQ==", "name": "textract", "full_name": "deanmalmgren/textract", "private": false, "owner": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/deanmalmgren/textract", "description": "extract text from any document. no muss. no fuss.", "fork": false, "url": "https://api.github.com/repos/deanmalmgren/textract", "forks_url": "https://api.github.com/repos/deanmalmgren/textract/forks", "keys_url": "https://api.github.com/repos/deanmalmgren/textract/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/deanmalmgren/textract/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/deanmalmgren/textract/teams", "hooks_url": "https://api.github.com/repos/deanmalmgren/textract/hooks", "issue_events_url": "https://api.github.com/repos/deanmalmgren/textract/issues/events{/number}", "events_url": "https://api.github.com/repos/deanmalmgren/textract/events", "assignees_url": "https://api.github.com/repos/deanmalmgren/textract/assignees{/user}", "branches_url": "https://api.github.com/repos/deanmalmgren/textract/branches{/branch}", "tags_url": "https://api.github.com/repos/deanmalmgren/textract/tags", "blobs_url": "https://api.github.com/repos/deanmalmgren/textract/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/deanmalmgren/textract/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/deanmalmgren/textract/git/refs{/sha}", "trees_url": "https://api.github.com/repos/deanmalmgren/textract/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/deanmalmgren/textract/statuses/{sha}", "languages_url": "https://api.github.com/repos/deanmalmgren/textract/languages", "stargazers_url": "https://api.github.com/repos/deanmalmgren/textract/stargazers", "contributors_url": "https://api.github.com/repos/deanmalmgren/textract/contributors", "subscribers_url": "https://api.github.com/repos/deanmalmgren/textract/subscribers", "subscription_url": "https://api.github.com/repos/deanmalmgren/textract/subscription", "commits_url": "https://api.github.com/repos/deanmalmgren/textract/commits{/sha}", "git_commits_url": "https://api.github.com/repos/deanmalmgren/textract/git/commits{/sha}", "comments_url": "https://api.github.com/repos/deanmalmgren/textract/comments{/number}", "issue_comment_url": "https://api.github.com/repos/deanmalmgren/textract/issues/comments{/number}", "contents_url": "https://api.github.com/repos/deanmalmgren/textract/contents/{+path}", "compare_url": "https://api.github.com/repos/deanmalmgren/textract/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/deanmalmgren/textract/merges", "archive_url": "https://api.github.com/repos/deanmalmgren/textract/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/deanmalmgren/textract/downloads", "issues_url": "https://api.github.com/repos/deanmalmgren/textract/issues{/number}", "pulls_url": "https://api.github.com/repos/deanmalmgren/textract/pulls{/number}", "milestones_url": "https://api.github.com/repos/deanmalmgren/textract/milestones{/number}", "notifications_url": "https://api.github.com/repos/deanmalmgren/textract/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/deanmalmgren/textract/labels{/name}", "releases_url": "https://api.github.com/repos/deanmalmgren/textract/releases{/id}", "deployments_url": "https://api.github.com/repos/deanmalmgren/textract/deployments", "created_at": "2014-07-03T20:36:59Z", "updated_at": "2024-08-23T16:14:10Z", "pushed_at": "2024-08-19T14:04:13Z", "git_url": "git://github.com/deanmalmgren/textract.git", "ssh_url": "git@github.com:deanmalmgren/textract.git", "clone_url": "https://github.com/deanmalmgren/textract.git", "svn_url": "https://github.com/deanmalmgren/textract", "homepage": "http://textract.readthedocs.io", "size": 4531, "stargazers_count": 3854, "watchers_count": 3854, "language": "HTML", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 589, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 138, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["data-mining", "natural-language-processing", "python", "text-mining"], "visibility": "public", "forks": 589, "open_issues": 138, "watchers": 3854, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/deanmalmgren/textract/pulls/522"}, "html": {"href": "https://github.com/deanmalmgren/textract/pull/522"}, "issue": {"href": "https://api.github.com/repos/deanmalmgren/textract/issues/522"}, "comments": {"href": "https://api.github.com/repos/deanmalmgren/textract/issues/522/comments"}, "review_comments": {"href": "https://api.github.com/repos/deanmalmgren/textract/pulls/522/comments"}, "review_comment": {"href": "https://api.github.com/repos/deanmalmgren/textract/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/deanmalmgren/textract/pulls/522/commits"}, "statuses": {"href": "https://api.github.com/repos/deanmalmgren/textract/statuses/4f85428c2a9c42e0bf96b64499eacb067dd08874"}}, "author_association": "COLLABORATOR", "auto_merge": null, "active_lock_reason": null, "resolved_issues": []}
{"url": "https://api.github.com/repos/deanmalmgren/textract/pulls/518", "id": 1969510785, "node_id": "PR_kwDOAUezhc51ZFmB", "html_url": "https://github.com/deanmalmgren/textract/pull/518", "diff_url": "https://github.com/deanmalmgren/textract/pull/518.diff", "patch_url": "https://github.com/deanmalmgren/textract/pull/518.patch", "issue_url": "https://api.github.com/repos/deanmalmgren/textract/issues/518", "number": 518, "state": "closed", "locked": false, "title": "Scheduled biweekly dependency update for week 28", "user": {"login": "pyup-bot", "id": 16239342, "node_id": "MDQ6VXNlcjE2MjM5MzQy", "avatar_url": "https://avatars.githubusercontent.com/u/16239342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyup-bot", "html_url": "https://github.com/pyup-bot", "followers_url": "https://api.github.com/users/pyup-bot/followers", "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}", "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions", "organizations_url": "https://api.github.com/users/pyup-bot/orgs", "repos_url": "https://api.github.com/users/pyup-bot/repos", "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/pyup-bot/received_events", "type": "User", "site_admin": false}, "body": "\n\n\n\n\n### Update [argcomplete](https://pypi.org/project/argcomplete) from **1.10.3** to **3.4.0**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 3.4.0\n   ```\n   ===============================\n\n-  No stdin for python calls from bash completion functions (488)\n\n   Prevents usage of stdin by (python) executables that are called\n   during completion generation. This prevents the completion locking up\n   the entire shell when the python script is broken i.e.\u00a0it enters an\n   interactive mode (REPL) instead of generating the completions, as\n   expected.\n\n-  Localize shell variable REPLY to avoid overwriting users\u2019 value\n   (489)\n\n   The variable REPLY is used by default by the ``read`` shell builtin\n   to store the return value, and like all bash/zsh variables, is scoped\n   globally. This change allows this variable to be used for other needs\n   by appropriately scoping its internal use by an argcomplete utility\n   function that uses ``read``.\n   ```\n   \n  \n  \n   ### 3.3.0\n   ```\n   ===============================\n\n-  Preserve compatibility with argparse option tuples of length 4. This\n   update is required to use argcomplete on Python 3.11.9+ or 3.12.3+.\n   ```\n   \n  \n  \n   ### 3.2.3\n   ```\n   ===============================\n\n-  Allow register-python-argcomplete output to be used as lazy-loaded\n   zsh completion module (475)\n\n-  Move debug_stream initialization to helper method to allow fd 9\n   behavior to be overridden in subclasses (471)\n   ```\n   \n  \n  \n   ### 3.2.2\n   ```\n   ===============================\n\nExpand tilde in zsh\n   ```\n   \n  \n  \n   ### 3.2.1\n   ```\n   ===============================\n\n-  Allow explicit zsh global completion activation (467)\n   ```\n   \n  \n  \n   ### 3.2.0\n   ```\n   ===============================\n\n-  Fix and test global completion in zsh (463, 466)\n\n-  Add \u2013yes option to activate-global-python-argcomplete (461)\n\n-  Test suite improvements\n   ```\n   \n  \n  \n   ### 3.1.6\n   ```\n   ===============================\n\n-  Respect user choice in activate-global-python-argcomplete\n   ```\n   \n  \n  \n   ### 3.1.5\n   ```\n   ===============================\n\n-  Escape colon in zsh completions. Fixes 456\n   ```\n   \n  \n  \n   ### 3.1.4\n   ```\n   ===============================\n\n-  Call \\_default as a fallback in zsh global completion\n   ```\n   \n  \n  \n   ### 3.1.3\n   ```\n   ===============================\n\n-  Use homebrew prefix by default\n\n-  zsh: Allow to use external script (453)\n\n-  Add support for Python 3.12 and drop EOL 3.6 and 3.7 (449)\n   ```\n   \n  \n  \n   ### 3.1.2\n   ```\n   ===============================\n\n-  Ensure Python 3.12+ compatibility in check_console_script (448)\n   ```\n   \n  \n  \n   ### 3.1.1\n   ```\n   ===============================\n\n-  Search through asdf shims\n\n-  Use \\` as escape character in PowerShell (434)\n   ```\n   \n  \n  \n   ### 3.1.0\n   ```\n   ===============================\n\n-  setup.py -&gt; pyproject.toml migration start (427)\n\n-  Improve user install logic in activate-global-python-argcomplete\n   (437)\n\n-  Ensure Python 3.7 compatibility in check_console_script (436)\n\n-  ZSH implementation fixes (431, 433)\n\n-  Documentation improvements\n   ```\n   \n  \n  \n   ### 3.0.8\n   ```\n   ===============================\n\n-  Test suite shell wrapper: Accept OSError on exit\n   ```\n   \n  \n  \n   ### 3.0.7\n   ```\n   ===============================\n\n-  Test suite: Use general regex to cut zsh reset ANSI sequences (425)\n   ```\n   \n  \n  \n   ### 3.0.6\n   ```\n   ===============================\n\n-  Allow importlib-metadata 6.x; skip test failures on Python 3.7 (420,\n   424)\n\n-  Note completers can return iterables of strings, not just lists\n   (422)\n\n-  Documentation and test improvements\n   ```\n   \n  \n  \n   ### 3.0.5\n   ```\n   ===============================\n\n-  Call \\_default as fallback in zsh global completion hook\n\n-  Begin support for mapping-emitting completers\n   ```\n   \n  \n  \n   ### 3.0.4\n   ```\n   ===============================\n\n-  activate-global-python-argcomplete: do not overwrite existing dotfile\n   in user directory\n\n-  Add NOTICE file\n\n-  Establish long term name for split_line as\n   argcomplete.lexers.split_line\n   ```\n   \n  \n  \n   ### 3.0.3\n   ```\n   ===============================\n\n-  Re-add split_line to API (419)\n   ```\n   \n  \n  \n   ### 3.0.2\n   ```\n   ===============================\n\nFix zsh default completion issues\n   ```\n   \n  \n  \n   ### 3.0.1\n   ```\n   ===============================\n\n-  Fix zsh autoload issues\n   ```\n   \n  \n  \n   ### 3.0.0\n   ```\n   ===============================\n\n-  Fully support zsh. Argcomplete now supports completion descriptions\n   and global completion in zsh.\n\n-  Clean up top level namespace.\n\n-  Documentation and test improvements.\n   ```\n   \n  \n  \n   ### 2.1.2\n   ```\n   ===============================\n\n-  Test infrastructure improvements\n\n-  Indicate that there is no support commitment for fish and tcsh shells\n   ```\n   \n  \n  \n   ### 2.1.1\n   ```\n   ===============================\n\n-  Documentation and test improvements\n   ```\n   \n  \n  \n   ### 2.1.0\n   ```\n   ===============================\n\n-  Remove scripts for contrib-supported shells from global namespace\n   ```\n   \n  \n  \n   ### 2.0.6\n   ```\n   ===============================\n\n-  setup.py: exclude test.\\* subpackages from find_packages (406)\n\n-  Support PowerShell (405)\n\n-  CI updates\n   ```\n   \n  \n  \n   ### 2.0.5\n   ```\n   ===============================\n\n-  Revert \u201cSupport powershell (392)\u201d\n   ```\n   \n  \n  \n   ### 2.0.4\n   ```\n   ===============================\n   ```\n   \n  \n  \n   ### 2.0.3\n   ```\n   ===============================\n   ```\n   \n  \n  \n   ### 2.0.2\n   ```\n   ===============================\n   ```\n   \n  \n  \n   ### 2.0.1\n   ```\n   ===============================\n\n-  Support powershell (392)\n\n-  Update importlib-metadata dependency to include versions 5.x (389)\n\n-  Test and documentation improvements\n   ```\n   \n  \n  \n   ### 2.0.0\n   ```\n   ===============================\n\n-  Truncate input after cursor. Fixes 351 (352)\n\n-  Support of path completion in fish 327 (359)\n\n-  Drop support for Python 2.7 and 3.5 (361)\n\n-  Add support for Python 3.10 (356)\n\n-  Test, documentation, and release infrastructure improvements\n   ```\n   \n  \n  \n   ### 1.12.3\n   ```\n   ================================\n\n-  Update importlib-metadata version pin (345)\n\n-  Display script debug output in tcsh (342)\n\n-  Fish support improvements (338, 339)\n\n-  Print ``warn()`` message from beginning of line (335)\n\n-  Test infrastructure improvements\n   ```\n   \n  \n  \n   ### 1.12.2\n   ```\n   ================================\n\n-  Update importlib-metadata dependency pin (332)\n\n-  Add change log project URL (312)\n\n-  Replace Travis CI with GitHub Actions (323)\n   ```\n   \n  \n  \n   ### 1.12.1\n   ```\n   ================================\n\n-  Update importlib-metadata dependency version range\n\n-  Bash nounset mode fixes (313)\n   ```\n   \n  \n  \n   ### 1.11.1\n   ```\n   ================================\n\n-  Add -o bashdefault to register-python-argcomplete\u2019s output command\n   (284)\n   ```\n   \n  \n  \n   ### 1.11.0\n   ```\n   ================================\n\n-  Use shell builtins where possible (280)\n\n-  Switch from pkg_resources to importlib (283)\n\n-  Remove .sh extension by bash-completion convention (281)\n\n-  Catch exceptions in \\_check_module (269)\n\n-  Documentation and test improvements\n   ```\n   \n  \n  \n   ### 1.10.3\n   ```\n   ================================\n\n-  Do not suggest options after \u2013 (end-of-options delimiter)\n   ```\n   \n  \n  \n   ### 1.10.2\n   ```\n   ================================\n\n-  Include all test directory contents in source distribution\n   ```\n   \n  \n  \n   ### 1.10.1\n   ```\n   ================================\n\n-  Trigger completers on \u2013optional=PARTIAL_VALUE\n\n-  Complete console scripts installed from wheels (241)\n   ```\n   \n  \n  \n   ### 1.10.0\n   ```\n   ================================\n\n-  Fish support 68 (260), thanks to volkov\n   ```\n   \n  \n  \n   ### 1.9.5\n   ```\n   ===============================\n\n-  check_module: Don\u2019t crash, exit with error instead (261)\n\n-  Register completion for multiple commands (246)\n   ```\n   \n  \n  \n   ### 1.9.4\n   ```\n   ===============================\n\n-  Use the correct interpreter when checking wrappers (226)\n\n-  Provide shellcode as a module function (237)\n   ```\n   \n  \n  \n   ### 1.9.3\n   ```\n   ===============================\n\n-  Fix handling of COMP\\_POINT (236)\n\n-  Fix crash when writing unicode to debug\\_stream in Python 2 (230)\n   ```\n   \n  \n  \n   ### 1.9.2\n   ```\n   ===============================\n\n-  Fix release\n   ```\n   \n  \n  \n   ### 1.9.1\n   ```\n   ===============================\n\n-  Fix release\n   ```\n   \n  \n  \n   ### 1.9.0\n   ```\n   ===============================\n\n-  Add SuppressCompleter to skip completion for specific arguments while\n   allowing help text (224)\n\n-  Redirect all output to debug stream in debug mode (206)\n\n-  Complete python -m module (204)\n   ```\n   \n  \n  \n   ### 1.8.2\n   ```\n   ===============================\n\n-  Fix bug introduced in v0.7.1 where completers would not receive the\n   parser keyword argument.\n\n-  Documentation improvements.\n   ```\n   \n  \n  \n   ### 1.8.1\n   ```\n   ===============================\n\n-  Fix completion after tokens with wordbreak chars (197)\n   ```\n   \n  \n  \n   ### 1.8.0\n   ```\n   ===============================\n\nThis release contains work by evanunderscore with numerous improvements\nto the handling of special characters in completions.\n\n-  Simplify nospace handling in global completion (195)\n\n-  Specially handle all characters in COMP\\_WORDBREAKS (187)\n\n-  Use setuptools tests-require directive, fixes 186\n\n-  Complete files using the specified interpreter (192)\n\n-  Fix completion for scripts run via python (191)\n\n-  Clarify argument to register-python-argcomplete (190)\n\n-  Fix handling of commas and other special chars (172); handle more\n   special characters (189)\n\n-  Fix handling of special characters in tcsh (188)\n\n-  Update my\\_shlex to Python 3.6 version (184)\n\n-  Fix additional trailing space in exact matches (183)\n\n-  Adjust tests to handle development environments (180)\n\n-  Fix tcsh tests on OSX (177); Update bash on OSX (176); Check output\n   of test setup command (179)\n\n-  Optionally disable duplicated flags (143)\n\n-  Add default\\_completer option to CompletionFinder.\\ **call** (167)\n\n-  Let bash add or suppress trailing space (159)\n   ```\n   \n  \n  \n   ### 1.7.0\n   ```\n   ===============================\n\n-  Restore parser to its original state to allow reuse after completion\n   (150).\n\n-  Expose COMP\\_TYPE environment variable (157). Thanks to Matt Clay\n   (mattclay).\n\n-  Test infrastructure and documentation improvements.\n   ```\n   \n  \n  \n   ### 1.6.0\n   ```\n   ===============================\n\n-  Add support for tcsh (155)\n\n-  Fix handling of unquoted completions containing $ (154)\n\n-  Don&#x27;t insert unnecessary leading quote char in completions (152)\n\n-  Fix parser reuse with positional arguments (149)\n\n-  Tests: Add simple pexpect tests for bash (153); Add test case to\n   verify 20 is fixed (148)\n\n-  Thanks to davvid and evanunderscore for their work on this release.\n   ```\n   \n  \n  \n   ### 1.5.1\n   ```\n   ===============================\n\n-  Packaging fix\n   ```\n   \n  \n  \n   ### 1.5.0\n   ```\n   ===============================\n\n-  Do not suggest options from mutually exclusive groups (145).\n   ```\n   \n  \n  \n   ### 1.4.1\n   ```\n   ==========================\n- activate-global-python-argcomplete runs on Homebrew out of the box\n   ```\n   \n  \n  \n   ### 1.4.0\n   ```\n   ==========================\n- Correctly handle suggestions for positionals with variable-length nargs. Thanks to evanunderscore (132, 133).\n   ```\n   \n  \n  \n   ### 1.3.0\n   ```\n   ==========================\n- Correctly handle suggestions with custom nargs for optionals. Thanks to evanunderscore (131).\n   ```\n   \n  \n  \n   ### 1.2.0\n   ```\n   ==========================\n- Fix propagation of partially parsed subparser namespace into parent parser namespace upon subparser failure due to\n  partial args. This allows completers to access partial parse results for subparser optionals in parsed_args (114).\n- The default completer can now be specified when manually instantiating CompletionFinder. Thanks to avylove (130).\n   ```\n   \n  \n  \n   ### 1.1.1\n   ```\n   ==========================\n- Use FilesCompleter as default completer fallback (120).\n   ```\n   \n  \n  \n   ### 1.1.0\n   ```\n   ==========================\n- Recognize subclasses of argparse._SubParsersAction. Thanks to Stephen Koo (118).\n- Support parsed_args in custom completers with missing args. Thanks to Dan Kilman (124).\n- Non-ASCII support in FilesCompleter.\n- Automatically enable FilesCompleter for argparse.FileType arguments.\n   ```\n   \n  \n  \n   ### 1.0.0\n   ```\n   ==========================\n- Don&#x27;t print args with suppressed help by default; add\n  ``argcomplete.autocomplete(print_suppressed=True)`` to control this\n  behavior (113).\n   ```\n   \n  \n  \n   ### 0.9.0\n   ```\n   ==========================\n- Fix always_complete_options=False support (115).\n   ```\n   \n  \n  \n   ### 0.8.9\n   ```\n   ==========================\n- Correct doc filename in setup.cfg (fixes bdist_rpm failure, Issue 111).\n- Make context managers exception-safe. Thanks to Miko\u0142aj Siedlarek (pull request 110).\n   ```\n   \n  \n  \n   ### 0.8.8\n   ```\n   ==========================\n- Build and upload universal wheel packages in release.\n- Fix issue with non-string choices for arguments. Thanks to neizod (pull request 107).\n- Improve non-ascii argparse argument support on Python 2.7.\n   ```\n   \n  \n  \n   ### 0.8.7\n   ```\n   ==========================\n- register-python-argcomplete: add option to avoid default readline completion. Thanks to drmalex07 (pull request 99).\n   ```\n   \n  \n  \n   ### 0.8.6\n   ```\n   ==========================\n- Expand tilde in script name, allowing argcomplete to work when invoking scripts from one&#x27;s home directory. Thanks to VorpalBlade (Issue 104).\n   ```\n   \n  \n  \n   ### 0.8.5\n   ```\n   ==========================\n- Fix issues related to using argcomplete in a REPL environment.\n- New helper method for custom completion display.\n- Expand test suite; formatting cleanup.\n   ```\n   \n  \n  \n   ### 0.8.4\n   ```\n   ==========================\n- Fix issue related to using argcomplete in a REPL environment. Thanks to wapiflapi (pull request 91).\n   ```\n   \n  \n  \n   ### 0.8.3\n   ```\n   ==========================\n- Fix multiple issues related to using argcomplete in a REPL environment. Thanks to wapiflapi (pull request 90).\n   ```\n   \n  \n  \n   ### 0.8.2\n   ```\n   ==========================\n- Don&#x27;t strip colon prefix in completion results if COMP_WORDBREAKS does not contain a colon. Thanks to berezv (pull request 88).\n   ```\n   \n  \n  \n   ### 0.8.1\n   ```\n   ==========================\n- Use complete --nospace to avoid issues with directory completion.\n   ```\n   \n  \n  \n   ### 0.8.0\n   ```\n   ==========================\n- Refactor main body of code into a class to enable subclassing and overriding of functionality (Issue 78).\n   ```\n   \n  \n  \n   ### 0.7.1\n   ```\n   ==========================\n- New keyword option &quot;argcomplete.autocomplete(validator=...)&quot; to supply a custom validator or bypass default validation. Thanks to thijsdezoete (Issue 77).\n- Document debug options.\n   ```\n   \n  \n  \n   ### 0.7.0\n   ```\n   ==========================\n- New keyword option &quot;argcomplete.autocomplete(exclude=[...])&quot; to suppress options (Issue 74).\n- More speedups to code path for global completion hook negative result.\n   ```\n   \n  \n  \n   ### 0.6.9\n   ```\n   ==========================\n- Fix handling of development mode script wrappers. Thanks to jmlopez-rod and dcosson (Issue 69).\n- Speed up code path for global completion hook negative result by loading pkg_resources on demand.\n   ```\n   \n  \n  \n   ### 0.6.8\n   ```\n   ==========================\n- Begin tracking changes in changelog.\n- Add completion support for PBR installed scripts (PR 71).\n- Detect easy-install shims with shebang lines that contain Py instead of py (Issue 69).\n   ```\n   \n  \n</details>\n\n\n \n\n<details>\n  <summary>Links</summary>\n  \n  - PyPI: https://pypi.org/project/argcomplete\n  - Changelog: https://data.safetycli.com/changelogs/argcomplete/\n  - Repo: https://github.com/kislyuk/argcomplete\n</details>\n\n\n\n\n\n### Update [beautifulsoup4](https://pypi.org/project/beautifulsoup4) from **4.8.2** to **4.12.3**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 4.11.1\n   ```\n   This release was done to ensure that the unit tests are packaged along\nwith the released source. There are no functionality changes in this\nrelease, but there are a few other packaging changes:\n\n* The Japanese and Korean translations of the documentation are included.\n* The changelog is now packaged as CHANGELOG, and the license file is\n  packaged as LICENSE. NEWS.txt and COPYING.txt are still present,\n  but may be removed in the future.\n* TODO.txt is no longer packaged, since a TODO is not relevant for released\n  code.\n   ```\n   \n  \n  \n   ### 4.11.0\n   ```\n   * Ported unit tests to use pytest.\n\n* Added special string classes, RubyParenthesisString and RubyTextString,\n  to make it possible to treat ruby text specially in get_text() calls.\n  [bug=1941980]\n\n* It&#x27;s now possible to customize the way output is indented by\n  providing a value for the &#x27;indent&#x27; argument to the Formatter\n  constructor. The &#x27;indent&#x27; argument works very similarly to the\n  argument of the same name in the Python standard library&#x27;s\n  json.dump() function. [bug=1955497]\n\n* If the charset-normalizer Python module\n  (https://pypi.org/project/charset-normalizer/) is installed, Beautiful\n  Soup will use it to detect the character sets of incoming documents.\n  This is also the module used by newer versions of the Requests library.\n  For the sake of backwards compatibility, chardet and cchardet both take\n  precedence if installed. [bug=1955346]\n\n* Added a workaround for an lxml bug\n  (https://bugs.launchpad.net/lxml/+bug/1948551) that causes\n  problems when parsing a Unicode string beginning with BYTE ORDER MARK.\n  [bug=1947768]\n\n* Issue a warning when an HTML parser is used to parse a document that\n  looks like XML but not XHTML. [bug=1939121]\n\n* Do a better job of keeping track of namespaces as an XML document is\n  parsed, so that CSS selectors that use namespaces will do the right\n  thing more often. [bug=1946243]\n\n* Some time ago, the misleadingly named &quot;text&quot; argument to find-type\n  methods was renamed to the more accurate &quot;string.&quot; But this supposed\n  &quot;renaming&quot; didn&#x27;t make it into important places like the method\n  signatures or the docstrings. That&#x27;s corrected in this\n  version. &quot;text&quot; still works, but will give a DeprecationWarning.\n  [bug=1947038]\n\n* Fixed a crash when pickling a BeautifulSoup object that has no\n  tree builder. [bug=1934003]\n\n* Fixed a crash when overriding multi_valued_attributes and using the\n  html5lib parser. [bug=1948488]\n\n* Standardized the wording of the MarkupResemblesLocatorWarning\n  warnings to omit untrusted input and make the warnings less\n  judgmental about what you ought to be doing. [bug=1955450]\n\n* Removed support for the iconv_codec library, which doesn&#x27;t seem\n  to exist anymore and was never put up on PyPI. (The closest\n  replacement on PyPI, iconv_codecs, is GPL-licensed, so we can&#x27;t use\n  it--it&#x27;s also quite old.)\n   ```\n   \n  \n  \n   ### 4.10.0\n   ```\n   * This is the first release of Beautiful Soup to only support Python\n  3. I dropped Python 2 support to maintain support for newer versions\n  (58 and up) of setuptools. See:\n  https://github.com/pypa/setuptools/issues/2769 [bug=1942919]\n\n* The behavior of methods like .get_text() and .strings now differs\n  depending on the type of tag. The change is visible with HTML tags\n  like &lt;script&gt;, &lt;style&gt;, and &lt;template&gt;. Starting in 4.9.0, methods\n  like get_text() returned no results on such tags, because the\n  contents of those tags are not considered &#x27;text&#x27; within the document\n  as a whole.\n\n  But a user who calls script.get_text() is working from a different\n  definition of &#x27;text&#x27; than a user who calls div.get_text()--otherwise\n  there would be no need to call script.get_text() at all. In 4.10.0,\n  the contents of (e.g.) a &lt;script&gt; tag are considered &#x27;text&#x27; during a\n  get_text() call on the tag itself, but not considered &#x27;text&#x27; during\n  a get_text() call on the tag&#x27;s parent.\n\n  Because of this change, calling get_text() on each child of a tag\n  may now return a different result than calling get_text() on the tag\n  itself. That&#x27;s because different tags now have different\n  understandings of what counts as &#x27;text&#x27;. [bug=1906226] [bug=1868861]\n\n* NavigableString and its subclasses now implement the get_text()\n  method, as well as the properties .strings and\n  .stripped_strings. These methods will either return the string\n  itself, or nothing, so the only reason to use this is when iterating\n  over a list of mixed Tag and NavigableString objects. [bug=1904309]\n\n* The &#x27;html5&#x27; formatter now treats attributes whose values are the\n  empty string as HTML boolean attributes. Previously (and in other\n  formatters), an attribute value must be set as None to be treated as\n  a boolean attribute. In a future release, I plan to also give this\n  behavior to the &#x27;html&#x27; formatter. Patch by Isaac Muse. [bug=1915424]\n\n* The &#x27;replace_with()&#x27; method now takes a variable number of arguments,\n  and can be used to replace a single element with a sequence of elements.\n  Patch by Bill Chandos. [rev=605]\n\n* Corrected output when the namespace prefix associated with a\n  namespaced attribute is the empty string, as opposed to\n  None. [bug=1915583]\n\n* Performance improvement when processing tags that speeds up overall\n  tree construction by 2%. Patch by Morotti. [bug=1899358]\n\n* Corrected the use of special string container classes in cases when a\n  single tag may contain strings with different containers; such as\n  the &lt;template&gt; tag, which may contain both TemplateString objects\n  and Comment objects. [bug=1913406]\n\n* The html.parser tree builder can now handle named entities\n  found in the HTML5 spec in much the same way that the html5lib\n  tree builder does. Note that the lxml HTML tree builder doesn&#x27;t handle\n  named entities this way. [bug=1924908]\n\n* Added a second way to pass specify encodings to UnicodeDammit and\n  EncodingDetector, based on the order of precedence defined in the\n  HTML5 spec, starting at:\n  https://html.spec.whatwg.org/multipage/parsing.html#parsing-with-a-known-character-encoding\n\n  Encodings in &#x27;known_definite_encodings&#x27; are tried first, then\n  byte-order-mark sniffing is run, then encodings in &#x27;user_encodings&#x27;\n  are tried. The old argument, &#x27;override_encodings&#x27;, is now a\n  deprecated alias for &#x27;known_definite_encodings&#x27;.\n\n  This changes the default behavior of the html.parser and lxml tree\n  builders, in a way that may slightly improve encoding\n  detection but will probably have no effect. [bug=1889014]\n\n* Improve the warning issued when a directory name (as opposed to\n  the name of a regular file) is passed as markup into the BeautifulSoup\n  constructor. [bug=1913628]\n   ```\n   \n  \n  \n   ### 4.9.3\n   ```\n   * Implemented a significant performance optimization to the process of\n  searching the parse tree. Patch by Morotti. [bug=1898212]\n   ```\n   \n  \n  \n   ### 4.9.2\n   ```\n   * Fixed a bug that caused too many tags to be popped from the tag\n  stack during tree building, when encountering a closing tag that had\n  no matching opening tag. [bug=1880420]\n\n* Fixed a bug that inconsistently moved elements over when passing\n  a Tag, rather than a list, into Tag.extend(). [bug=1885710]\n\n* Specify the soupsieve dependency in a way that complies with\n  PEP 508. Patch by Mike Nerone. [bug=1893696]\n\n* Change the signatures for BeautifulSoup.insert_before and insert_after\n  (which are not implemented) to match PageElement.insert_before and\n  insert_after, quieting warnings in some IDEs. [bug=1897120]\n   ```\n   \n  \n  \n   ### 4.9.1\n   ```\n   * Added a keyword argument &#x27;on_duplicate_attribute&#x27; to the\n  BeautifulSoupHTMLParser constructor (used by the html.parser tree\n  builder) which lets you customize the handling of markup that\n  contains the same attribute more than once, as in:\n  &lt;a href=&quot;url1&quot; href=&quot;url2&quot;&gt; [bug=1878209]\n\n* Added a distinct subclass, GuessedAtParserWarning, for the warning\n  issued when BeautifulSoup is instantiated without a parser being\n  specified. [bug=1873787]\n\n* Added a distinct subclass, MarkupResemblesLocatorWarning, for the\n  warning issued when BeautifulSoup is instantiated with &#x27;markup&#x27; that\n  actually seems to be a URL or the path to a file on\n  disk. [bug=1873787]\n\n* The new NavigableString subclasses (Stylesheet, Script, and\n  TemplateString) can now be imported directly from the bs4 package.\n\n* If you encode a document with a Python-specific encoding like\n  &#x27;unicode_escape&#x27;, that encoding is no longer mentioned in the final\n  XML or HTML document. Instead, encoding information is omitted or\n  left blank. [bug=1874955]\n\n* Fixed test failures when run against soupselect 2.0. Patch by Tom\u00e1\u0161\n  Chv\u00e1tal. [bug=1872279]\n   ```\n   \n  \n  \n   ### 4.9.0\n   ```\n   * Added PageElement.decomposed, a new property which lets you\n  check whether you&#x27;ve already called decompose() on a Tag or\n  NavigableString.\n\n* Embedded CSS and Javascript is now stored in distinct Stylesheet and\n  Script tags, which are ignored by methods like get_text() since most\n  people don&#x27;t consider this sort of content to be &#x27;text&#x27;. This\n  feature is not supported by the html5lib treebuilder. [bug=1868861]\n\n* Added a Russian translation by &#x27;authoress&#x27; to the repository.\n\n* Fixed an unhandled exception when formatting a Tag that had been\n  decomposed.[bug=1857767]\n\n* Fixed a bug that happened when passing a Unicode filename containing\n  non-ASCII characters as markup into Beautiful Soup, on a system that\n  allows Unicode filenames. [bug=1866717]\n\n* Added a performance optimization to PageElement.extract(). Patch by\n  Arthur Darcet.\n   ```\n   \n  \n  \n   ### 4.8.2\n   ```\n   * Added Python docstrings to all public methods of the most commonly\n  used classes.\n\n* Added a Chinese translation by Deron Wang and a Brazilian Portuguese\n  translation by Cezar Peixeiro to the repository.\n\n* Fixed two deprecation warnings. Patches by Colin\n  Watson and Nicholas Neumann. [bug=1847592] [bug=1855301]\n\n* The html.parser tree builder now correctly handles DOCTYPEs that are\n  not uppercase. [bug=1848401]\n\n* PageElement.select() now returns a ResultSet rather than a regular\n  list, making it consistent with methods like find_all().\n   ```\n   \n  \n  \n   ### 4.8.1\n   ```\n   * When the html.parser or html5lib parsers are in use, Beautiful Soup\n  will, by default, record the position in the original document where\n  each tag was encountered. This includes line number (Tag.sourceline)\n  and position within a line (Tag.sourcepos).  Based on code by Chris\n  Mayo. [bug=1742921]\n\n* When instantiating a BeautifulSoup object, it&#x27;s now possible to\n   provide a dictionary (&#x27;element_classes&#x27;) of the classes you&#x27;d like to be\n   instantiated instead of Tag, NavigableString, etc.\n\n* Fixed the definition of the default XML namespace when using\n   lxml 4.4. Patch by Isaac Muse. [bug=1840141]\n\n* Fixed a crash when pretty-printing tags that were not created\n   during initial parsing. [bug=1838903]\n\n* Copying a Tag preserves information that was originally obtained from\n   the TreeBuilder used to build the original Tag. [bug=1838903]\n\n* Raise an explanatory exception when the underlying parser\n   completely rejects the incoming markup. [bug=1838877]\n\n* Avoid a crash when trying to detect the declared encoding of a\n   Unicode document. [bug=1838877]\n\n* Avoid a crash when unpickling certain parse trees generated\n   using html5lib on Python 3. [bug=1843545]\n   ```\n   \n  \n  \n   ### 4.8.0\n   ```\n   This release focuses on making it easier to customize Beautiful Soup&#x27;s\ninput mechanism (the TreeBuilder) and output mechanism (the Formatter).\n\n* You can customize the TreeBuilder object by passing keyword\n  arguments into the BeautifulSoup constructor. Those keyword\n  arguments will be passed along into the TreeBuilder constructor.\n\n  The main reason to do this right now is to change how which\n  attributes are treated as multi-valued attributes (the way &#x27;class&#x27;\n  is treated by default). You can do this with the\n  &#x27;multi_valued_attributes&#x27; argument. [bug=1832978]\n\n* The role of Formatter objects has been greatly expanded. The Formatter\n  class now controls the following:\n\n  - The function to call to perform entity substitution. (This was\n    previously Formatter&#x27;s only job.)\n  - Which tags should be treated as containing CDATA and have their\n    contents exempt from entity substitution.\n  - The order in which a tag&#x27;s attributes are output. [bug=1812422]\n  - Whether or not to put a &#x27;/&#x27; inside a void element, e.g. &#x27;&lt;br/&gt;&#x27; vs &#x27;&lt;br&gt;&#x27;\n\n  All preexisting code should work as before.\n\n* Added a new method to the API, Tag.smooth(), which consolidates\n  multiple adjacent NavigableString elements. [bug=1697296]\n\n* &amp;apos; (which is valid in XML, XHTML, and HTML 5, but not HTML 4) is always\n  recognized as a named entity and converted to a single quote. [bug=1818721]\n   ```\n   \n  \n  \n   ### 4.7.1\n   ```\n   * Fixed a significant performance problem introduced in 4.7.0. [bug=1810617]\n\n* Fixed an incorrectly raised exception when inserting a tag before or\n  after an identical tag. [bug=1810692]\n\n* Beautiful Soup will no longer try to keep track of namespaces that\n  are not defined with a prefix; this can confuse soupselect. [bug=1810680]\n\n* Tried even harder to avoid the deprecation warning originally fixed in\n   4.6.1. [bug=1778909]\n   ```\n   \n  \n  \n   ### 4.7.0\n   ```\n   * Beautiful Soup&#x27;s CSS Selector implementation has been replaced by a\n  dependency on Isaac Muse&#x27;s SoupSieve project (the soupsieve package\n  on PyPI). The good news is that SoupSieve has a much more robust and\n  complete implementation of CSS selectors, resolving a large number\n  of longstanding issues. The bad news is that from this point onward,\n  SoupSieve must be installed if you want to use the select() method.\n\n  You don&#x27;t have to change anything lf you installed Beautiful Soup\n  through pip (SoupSieve will be automatically installed when you\n  upgrade Beautiful Soup) or if you don&#x27;t use CSS selectors from\n  within Beautiful Soup.\n\n  SoupSieve documentation: https://facelessuser.github.io/soupsieve/\n\n* Added the PageElement.extend() method, which works like list.append().\n   [bug=1514970]\n\n* PageElement.insert_before() and insert_after() now take a variable\n   number of arguments. [bug=1514970]\n\n* Fix a number of problems with the tree builder that caused\n  trees that were superficially okay, but which fell apart when bits\n  were extracted. Patch by Isaac Muse. [bug=1782928,1809910]\n\n* Fixed a problem with the tree builder in which elements that\n  contained no content (such as empty comments and all-whitespace\n  elements) were not being treated as part of the tree. Patch by Isaac\n  Muse. [bug=1798699]\n\n* Fixed a problem with multi-valued attributes where the value\n  contained whitespace. Thanks to Jens Svalgaard for the\n  fix. [bug=1787453]\n\n* Clarified ambiguous license statements in the source code. Beautiful\n  Soup is released under the MIT license, and has been since 4.4.0.\n\n* This file has been renamed from NEWS.txt to CHANGELOG.\n   ```\n   \n  \n  \n   ### 4.6.3\n   ```\n   * Exactly the same as 4.6.2. Re-released to make the README file\n  render properly on PyPI.\n   ```\n   \n  \n  \n   ### 4.6.2\n   ```\n   * Fix an exception when a custom formatter was asked to format a void\n  element. [bug=1784408]\n   ```\n   \n  \n  \n   ### 4.6.1\n   ```\n   * Stop data loss when encountering an empty numeric entity, and\n  possibly in other cases.  Thanks to tos.kamiya for the fix. [bug=1698503]\n\n* Preserve XML namespaces introduced inside an XML document, not just\n   the ones introduced at the top level. [bug=1718787]\n\n* Added a new formatter, &quot;html5&quot;, which represents void elements\n   as &quot;&lt;element&gt;&quot; rather than &quot;&lt;element/&gt;&quot;.  [bug=1716272]\n\n* Fixed a problem where the html.parser tree builder interpreted\n  a string like &quot;&amp;foo &quot; as the character entity &quot;&amp;foo;&quot;  [bug=1728706]\n\n* Correctly handle invalid HTML numeric character entities like &amp;147;\n  which reference code points that are not Unicode code points. Note\n  that this is only fixed when Beautiful Soup is used with the\n  html.parser parser -- html5lib already worked and I couldn&#x27;t fix it\n  with lxml.  [bug=1782933]\n\n* Improved the warning given when no parser is specified. [bug=1780571]\n\n* When markup contains duplicate elements, a select() call that\n  includes multiple match clauses will match all relevant\n  elements. [bug=1770596]\n\n* Fixed code that was causing deprecation warnings in recent Python 3\n  versions. Includes a patch from Ville Skytt\u00e4. [bug=1778909] [bug=1689496]\n\n* Fixed a Windows crash in diagnose() when checking whether a long\n  markup string is a filename. [bug=1737121]\n\n* Stopped HTMLParser from raising an exception in very rare cases of\n  bad markup. [bug=1708831]\n\n* Fixed a bug where find_all() was not working when asked to find a\n  tag with a namespaced name in an XML document that was parsed as\n  HTML. [bug=1723783]\n\n* You can get finer control over formatting by subclassing\n  bs4.element.Formatter and passing a Formatter instance into (e.g.)\n  encode(). [bug=1716272]\n\n* You can pass a dictionary of `attrs` into\n  BeautifulSoup.new_tag. This makes it possible to create a tag with\n  an attribute like &#x27;name&#x27; that would otherwise be masked by another\n  argument of new_tag. [bug=1779276]\n\n* Clarified the deprecation warning when accessing tag.fooTag, to cover\n  the possibility that you might really have been looking for a tag\n  called &#x27;fooTag&#x27;.\n   ```\n   \n  \n  \n   ### 4.6.0\n   ```\n   * Added the `Tag.get_attribute_list` method, which acts like `Tag.get` for\n  getting the value of an attribute, but which always returns a list,\n  whether or not the attribute is a multi-value attribute. [bug=1678589]\n\n* It&#x27;s now possible to use a tag&#x27;s namespace prefix when searching,\n  e.g. soup.find(&#x27;namespace:tag&#x27;) [bug=1655332]\n\n* Improved the handling of empty-element tags like &lt;br&gt; when using the\n  html.parser parser. [bug=1676935]\n\n* HTML parsers treat all HTML4 and HTML5 empty element tags (aka void\n  element tags) correctly. [bug=1656909]\n\n* Namespace prefix is preserved when an XML tag is copied. Thanks\n  to Vikas for a patch and test. [bug=1685172]\n   ```\n   \n  \n  \n   ### 4.5.3\n   ```\n   * Fixed foster parenting when html5lib is the tree builder. Thanks to\n  Geoffrey Sneddon for a patch and test.\n  \n* Fixed yet another problem that caused the html5lib tree builder to\n  create a disconnected parse tree. [bug=1629825]\n   ```\n   \n  \n  \n   ### 4.5.2\n   ```\n   * Apart from the version number, this release is identical to\n  4.5.3. Due to user error, it could not be completely uploaded to\n  PyPI. Use 4.5.3 instead.\n   ```\n   \n  \n  \n   ### 4.5.1\n   ```\n   * Fixed a crash when passing Unicode markup that contained a\n  processing instruction into the lxml HTML parser on Python\n  3. [bug=1608048]\n   ```\n   \n  \n  \n   ### 4.5.0\n   ```\n   * Beautiful Soup is no longer compatible with Python 2.6. This\n  actually happened a few releases ago, but it&#x27;s now official.\n\n* Beautiful Soup will now work with versions of html5lib greater than\n  0.99999999. [bug=1603299]\n\n* If a search against each individual value of a multi-valued\n  attribute fails, the search will be run one final time against the\n  complete attribute value considered as a single string. That is, if\n  a tag has class=&quot;foo bar&quot; and neither &quot;foo&quot; nor &quot;bar&quot; matches, but\n  &quot;foo bar&quot; does, the tag is now considered a match.\n\n  This happened in previous versions, but only when the value being\n  searched for was a string. Now it also works when that value is\n  a regular expression, a list of strings, etc. [bug=1476868]\n\n* Fixed a bug that deranged the tree when a whitespace element was\n  reparented into a tag that contained an identical whitespace\n  element. [bug=1505351]\n\n* Added support for CSS selector values that contain quoted spaces,\n  such as tag[style=&quot;display: foo&quot;]. [bug=1540588]\n\n* Corrected handling of XML processing instructions. [bug=1504393]\n\n* Corrected an encoding error that happened when a BeautifulSoup\n  object was copied. [bug=1554439]\n\n* The contents of &lt;textarea&gt; tags will no longer be modified when the\n  tree is prettified. [bug=1555829]\n\n* When a BeautifulSoup object is pickled but its tree builder cannot\n  be pickled, its .builder attribute is set to None instead of being\n  destroyed. This avoids a performance problem once the object is\n  unpickled. [bug=1523629]\n\n* Specify the file and line number when warning about a\n  BeautifulSoup object being instantiated without a parser being\n  specified. [bug=1574647]\n\n* The `limit` argument to `select()` now works correctly, though it&#x27;s\n  not implemented very efficiently. [bug=1520530]\n\n* Fixed a Python 3 ByteWarning when a URL was passed in as though it\n  were markup. Thanks to James Salter for a patch and\n  test. [bug=1533762]\n\n* We don&#x27;t run the check for a filename passed in as markup if the\n  &#x27;filename&#x27; contains a less-than character; the less-than character\n  indicates it&#x27;s most likely a very small document. [bug=1577864]\n   ```\n   \n  \n  \n   ### 4.4.1\n   ```\n   * Fixed a bug that deranged the tree when part of it was\n  removed. Thanks to Eric Weiser for the patch and John Wiseman for a\n  test. [bug=1481520]\n\n* Fixed a parse bug with the html5lib tree-builder. Thanks to Roel\n  Kramer for the patch. [bug=1483781]\n\n* Improved the implementation of CSS selector grouping. Thanks to\n  Orangain for the patch. [bug=1484543]\n\n* Fixed the test_detect_utf8 test so that it works when chardet is\n  installed. [bug=1471359]\n\n* Corrected the output of Declaration objects. [bug=1477847]\n   ```\n   \n  \n  \n   ### 4.4.0\n   ```\n   Especially important changes:\n\n* Added a warning when you instantiate a BeautifulSoup object without\n  explicitly naming a parser. [bug=1398866]\n\n* __repr__ now returns an ASCII bytestring in Python 2, and a Unicode\n  string in Python 3, instead of a UTF8-encoded bytestring in both\n  versions. In Python 3, __str__ now returns a Unicode string instead\n  of a bytestring. [bug=1420131]\n\n* The `text` argument to the find_* methods is now called `string`,\n  which is more accurate. `text` still works, but `string` is the\n  argument described in the documentation. `text` may eventually\n  change its meaning, but not for a very long time. [bug=1366856]\n\n* Changed the way soup objects work under copy.copy(). Copying a\n  NavigableString or a Tag will give you a new NavigableString that&#x27;s\n  equal to the old one but not connected to the parse tree. Patch by\n  Martijn Peters. [bug=1307490]\n\n* Started using a standard MIT license. [bug=1294662]\n\n* Added a Chinese translation of the documentation by Delong .w.\n\nNew features:\n\n* Introduced the select_one() method, which uses a CSS selector but\n  only returns the first match, instead of a list of\n  matches. [bug=1349367]\n\n* You can now create a Tag object without specifying a\n  TreeBuilder. Patch by Martijn Pieters. [bug=1307471]\n\n* You can now create a NavigableString or a subclass just by invoking\n  the constructor. [bug=1294315]\n\n* Added an `exclude_encodings` argument to UnicodeDammit and to the\n  Beautiful Soup constructor, which lets you prohibit the detection of\n  an encoding that you know is wrong. [bug=1469408]\n\n* The select() method now supports selector grouping. Patch by\n  Francisco Canas [bug=1191917]\n\nBug fixes:\n\n* Fixed yet another problem that caused the html5lib tree builder to\n  create a disconnected parse tree. [bug=1237763]\n\n* Force object_was_parsed() to keep the tree intact even when an element\n  from later in the document is moved into place. [bug=1430633]\n\n* Fixed yet another bug that caused a disconnected tree when html5lib\n  copied an element from one part of the tree to another. [bug=1270611]\n\n* Fixed a bug where Element.extract() could create an infinite loop in\n  the remaining tree.\n\n* The select() method can now find tags whose names contain\n  dashes. Patch by Francisco Canas. [bug=1276211]\n\n* The select() method can now find tags with attributes whose names\n  contain dashes. Patch by Marek Kapolka. [bug=1304007]\n\n* Improved the lxml tree builder&#x27;s handling of processing\n  instructions. [bug=1294645]\n\n* Restored the helpful syntax error that happens when you try to\n  import the Python 2 edition of Beautiful Soup under Python\n  3. [bug=1213387]\n\n* In Python 3.4 and above, set the new convert_charrefs argument to\n  the html.parser constructor to avoid a warning and future\n  failures. Patch by Stefano Revera. [bug=1375721]\n\n* The warning when you pass in a filename or URL as markup will now be\n  displayed correctly even if the filename or URL is a Unicode\n  string. [bug=1268888]\n\n* If the initial &lt;html&gt; tag contains a CDATA list attribute such as\n  &#x27;class&#x27;, the html5lib tree builder will now turn its value into a\n  list, as it would with any other tag. [bug=1296481]\n\n* Fixed an import error in Python 3.5 caused by the removal of the\n  HTMLParseError class. [bug=1420063]\n\n* Improved docstring for encode_contents() and\n  decode_contents(). [bug=1441543]\n\n* Fixed a crash in Unicode, Dammit&#x27;s encoding detector when the name\n  of the encoding itself contained invalid bytes. [bug=1360913]\n\n* Improved the exception raised when you call .unwrap() or\n  .replace_with() on an element that&#x27;s not attached to a tree.\n\n* Raise a NotImplementedError whenever an unsupported CSS pseudoclass\n  is used in select(). Previously some cases did not result in a\n  NotImplementedError.\n\n* It&#x27;s now possible to pickle a BeautifulSoup object no matter which\n  tree builder was used to create it. However, the only tree builder\n  that survives the pickling process is the HTMLParserTreeBuilder\n  (&#x27;html.parser&#x27;). If you unpickle a BeautifulSoup object created with\n  some other tree builder, soup.builder will be None. [bug=1231545]\n   ```\n   \n  \n  \n   ### 4.3.2\n   ```\n   * Fixed a bug in which short Unicode input was improperly encoded to\n  ASCII when checking whether or not it was the name of a file on\n  disk. [bug=1227016]\n\n* Fixed a crash when a short input contains data not valid in\n  filenames. [bug=1232604]\n\n* Fixed a bug that caused Unicode data put into UnicodeDammit to\n  return None instead of the original data. [bug=1214983]\n\n* Combined two tests to stop a spurious test failure when tests are\n  run by nosetests. [bug=1212445]\n   ```\n   \n  \n  \n   ### 4.3.1\n   ```\n   * Fixed yet another problem with the html5lib tree builder, caused by\n  html5lib&#x27;s tendency to rearrange the tree during\n  parsing. [bug=1189267]\n\n* Fixed a bug that caused the optimized version of find_all() to\n  return nothing. [bug=1212655]\n   ```\n   \n  \n  \n   ### 4.3.0\n   ```\n   * Instead of converting incoming data to Unicode and feeding it to the\n  lxml tree builder in chunks, Beautiful Soup now makes successive\n  guesses at the encoding of the incoming data, and tells lxml to\n  parse the data as that encoding. Giving lxml more control over the\n  parsing process improves performance and avoids a number of bugs and\n  issues with the lxml parser which had previously required elaborate\n  workarounds:\n\n  - An issue in which lxml refuses to parse Unicode strings on some\n    systems. [bug=1180527]\n\n  - A returning bug that truncated documents longer than a (very\n    small) size. [bug=963880]\n\n  - A returning bug in which extra spaces were added to a document if\n    the document defined a charset other than UTF-8. [bug=972466]\n\n  This required a major overhaul of the tree builder architecture. If\n  you wrote your own tree builder and didn&#x27;t tell me, you&#x27;ll need to\n  modify your prepare_markup() method.\n\n* The UnicodeDammit code that makes guesses at encodings has been\n  split into its own class, EncodingDetector. A lot of apparently\n  redundant code has been removed from Unicode, Dammit, and some\n  undocumented features have also been removed.\n\n* Beautiful Soup will issue a warning if instead of markup you pass it\n  a URL or the name of a file on disk (a common beginner&#x27;s mistake).\n\n* A number of optimizations improve the performance of the lxml tree\n  builder by about 33%, the html.parser tree builder by about 20%, and\n  the html5lib tree builder by about 15%.\n\n* All find_all calls should now return a ResultSet object. Patch by\n  Aaron DeVore. [bug=1194034]\n   ```\n   \n  \n  \n   ### 4.2.1\n   ```\n   * The default XML formatter will now replace ampersands even if they\n  appear to be part of entities. That is, &quot;&amp;lt;&quot; will become\n  &quot;&amp;amp;lt;&quot;. The old code was left over from Beautiful Soup 3, which\n  didn&#x27;t always turn entities into Unicode characters.\n\n  If you really want the old behavior (maybe because you add new\n  strings to the tree, those strings include entities, and you want\n  the formatter to leave them alone on output), it can be found in\n  EntitySubstitution.substitute_xml_containing_entities(). [bug=1182183]\n\n* Gave new_string() the ability to create subclasses of\n  NavigableString. [bug=1181986]\n\n* Fixed another bug by which the html5lib tree builder could create a\n  disconnected tree. [bug=1182089]\n\n* The .previous_element of a BeautifulSoup object is now always None,\n  not the last element to be parsed. [bug=1182089]\n\n* Fixed test failures when lxml is not installed. [bug=1181589]\n\n* html5lib now supports Python 3. Fixed some Python 2-specific\n  code in the html5lib test suite. [bug=1181624]\n\n* The html.parser treebuilder can now handle numeric attributes in\n  text when the hexidecimal name of the attribute starts with a\n  capital X. Patch by Tim Shirley. [bug=1186242]\n   ```\n   \n  \n  \n   ### 4.2.0\n   ```\n   * The Tag.select() method now supports a much wider variety of CSS\n  selectors.\n\n - Added support for the adjacent sibling combinator (+) and the\n   general sibling combinator (~). Tests by &quot;liquider&quot;. [bug=1082144]\n\n - The combinators (&gt;, +, and ~) can now combine with any supported\n   selector, not just one that selects based on tag name.\n\n - Added limited support for the &quot;nth-of-type&quot; pseudo-class. Code\n   by Sven Slootweg. [bug=1109952]\n\n* The BeautifulSoup class is now aliased to &quot;_s&quot; and &quot;_soup&quot;, making\n  it quicker to type the import statement in an interactive session:\n\n  from bs4 import _s\n   or\n  from bs4 import _soup\n\n  The alias may change in the future, so don&#x27;t use this in code you&#x27;re\n  going to run more than once.\n\n* Added the &#x27;diagnose&#x27; submodule, which includes several useful\n  functions for reporting problems and doing tech support.\n\n  - diagnose(data) tries the given markup on every installed parser,\n    reporting exceptions and displaying successes. If a parser is not\n    installed, diagnose() mentions this fact.\n\n  - lxml_trace(data, html=True) runs the given markup through lxml&#x27;s\n    XML parser or HTML parser, and prints out the parser events as\n    they happen. This helps you quickly determine whether a given\n    problem occurs in lxml code or Beautiful Soup code.\n\n  - htmlparser_trace(data) is the same thing, but for Python&#x27;s\n    built-in HTMLParser class.\n\n* In an HTML document, the contents of a &lt;script&gt; or &lt;style&gt; tag will\n  no longer undergo entity substitution by default. XML documents work\n  the same way they did before. [bug=1085953]\n\n* Methods like get_text() and properties like .strings now only give\n  you strings that are visible in the document--no comments or\n  processing commands. [bug=1050164]\n\n* The prettify() method now leaves the contents of &lt;pre&gt; tags\n  alone. [bug=1095654]\n\n* Fix a bug in the html5lib treebuilder which sometimes created\n  disconnected trees. [bug=1039527]\n\n* Fix a bug in the lxml treebuilder which crashed when a tag included\n  an attribute from the predefined &quot;xml:&quot; namespace. [bug=1065617]\n\n* Fix a bug by which keyword arguments to find_parent() were not\n  being passed on. [bug=1126734]\n\n* Stop a crash when unwisely messing with a tag that&#x27;s been\n  decomposed. [bug=1097699]\n\n* Now that lxml&#x27;s segfault on invalid doctype has been fixed, fixed a\n  corresponding problem on the Beautiful Soup end that was previously\n  invisible. [bug=984936]\n\n* Fixed an exception when an overspecified CSS selector didn&#x27;t match\n  anything. Code by Stefaan Lippens. [bug=1168167]\n   ```\n   \n  \n  \n   ### 4.1.3\n   ```\n   * Skipped a test under Python 2.6 and Python 3.1 to avoid a spurious\n  test failure caused by the lousy HTMLParser in those\n  versions. [bug=1038503]\n\n* Raise a more specific error (FeatureNotFound) when a requested\n  parser or parser feature is not installed. Raise NotImplementedError\n  instead of ValueError when the user calls insert_before() or\n  insert_after() on the BeautifulSoup object itself. Patch by Aaron\n  Devore. [bug=1038301]\n   ```\n   \n  \n  \n   ### 4.1.2\n   ```\n   * As per PEP-8, allow searching by CSS class using the &#x27;class_&#x27;\n  keyword argument. [bug=1037624]\n\n* Display namespace prefixes for namespaced attribute names, instead of\n  the fully-qualified names given by the lxml parser. [bug=1037597]\n\n* Fixed a crash on encoding when an attribute name contained\n  non-ASCII characters.\n\n* When sniffing encodings, if the cchardet library is installed,\n  Beautiful Soup uses it instead of chardet. cchardet is much\n  faster. [bug=1020748]\n\n* Use logging.warning() instead of warning.warn() to notify the user\n  that characters were replaced with REPLACEMENT\n  CHARACTER. [bug=1013862]\n   ```\n   \n  \n  \n   ### 4.1.1\n   ```\n   * Fixed an html5lib tree builder crash which happened when html5lib\n  moved a tag with a multivalued attribute from one part of the tree\n  to another. [bug=1019603]\n\n* Correctly display closing tags with an XML namespace declared. Patch\n  by Andreas Kostyrka. [bug=1019635]\n\n* Fixed a typo that made parsing significantly slower than it should\n  have been, and also waited too long to close tags with XML\n  namespaces. [bug=1020268]\n\n* get_text() now returns an empty Unicode string if there is no text,\n  rather than an empty bytestring. [bug=1020387]\n   ```\n   \n  \n  \n   ### 4.1.0\n   ```\n   * Added experimental support for fixing Windows-1252 characters\n  embedded in UTF-8 documents. (UnicodeDammit.detwingle())\n\n* Fixed the handling of &amp;quot; with the built-in parser. [bug=993871]\n\n* Comments, processing instructions, document type declarations, and\n  markup declarations are now treated as preformatted strings, the way\n  CData blocks are. [bug=1001025]\n\n* Fixed a bug with the lxml treebuilder that prevented the user from\n  adding attributes to a tag that didn&#x27;t originally have\n  attributes. [bug=1002378] Thanks to Oliver Beattie for the patch.\n\n* Fixed some edge-case bugs having to do with inserting an element\n  into a tag it&#x27;s already inside, and replacing one of a tag&#x27;s\n  children with another. [bug=997529]\n\n* Added the ability to search for attribute values specified in UTF-8. [bug=1003974]\n\n  This caused a major refactoring of the search code. All the tests\n  pass, but it&#x27;s possible that some searches will behave differently.\n   ```\n   \n  \n  \n   ### 4.0.5\n   ```\n   * Added a new method, wrap(), which wraps an element in a tag.\n\n* Renamed replace_with_children() to unwrap(), which is easier to\n  understand and also the jQuery name of the function.\n\n* Made encoding substitution in &lt;meta&gt; tags completely transparent (no\n  more %SOUP-ENCODING%).\n\n* Fixed a bug in decoding data that contained a byte-order mark, such\n  as data encoded in UTF-16LE. [bug=988980]\n\n* Fixed a bug that made the HTMLParser treebuilder generate XML\n  definitions ending with two question marks instead of\n  one. [bug=984258]\n\n* Upon document generation, CData objects are no longer run through\n  the formatter. [bug=988905]\n\n* The test suite now passes when lxml is not installed, whether or not\n  html5lib is installed. [bug=987004]\n\n* Print a warning on HTMLParseErrors to let people know they should\n  install a better parser library.\n   ```\n   \n  \n  \n   ### 4.0.4\n   ```\n   * Fixed a bug that sometimes created disconnected trees.\n\n* Fixed a bug with the string setter that moved a string around the\n  tree instead of copying it. [bug=983050]\n\n* Attribute values are now run through the provided output formatter.\n  Previously they were always run through the &#x27;minimal&#x27; formatter. In\n  the future I may make it possible to specify different formatters\n  for attribute values and strings, but for now, consistent behavior\n  is better than inconsistent behavior. [bug=980237]\n\n* Added the missing renderContents method from Beautiful Soup 3. Also\n  added an encode_contents() method to go along with decode_contents().\n\n* Give a more useful error when the user tries to run the Python 2\n  version of BS under Python 3.\n\n* UnicodeDammit can now convert Microsoft smart quotes to ASCII with\n  UnicodeDammit(markup, smart_quotes_to=&quot;ascii&quot;).\n   ```\n   \n  \n  \n   ### 4.0.3\n   ```\n   * Fixed a typo that caused some versions of Python 3 to convert the\n  Beautiful Soup codebase incorrectly.\n\n* Got rid of the 4.0.2 workaround for HTML documents--it was\n  unnecessary and the workaround was triggering a (possibly different,\n  but related) bug in lxml. [bug=972466]\n   ```\n   \n  \n  \n   ### 4.0.2\n   ```\n   * Worked around a possible bug in lxml that prevents non-tiny XML\n  documents from being parsed. [bug=963880, bug=963936]\n\n* Fixed a bug where specifying `text` while also searching for a tag\n  only worked if `text` wanted an exact string match. [bug=955942]\n   ```\n   \n  \n  \n   ### 4.0.1\n   ```\n   * This is the first official release of Beautiful Soup 4. There is no\n   ```\n   \n  \n  \n   ### 4.0.0\n   ```\n   might treat &quot;4.0.0&quot; as being an earlier version than &quot;4.0.0b10&quot;.\n\n* Brought BS up to date with the latest release of soupselect, adding\n  CSS selector support for direct descendant matches and multiple CSS\n  class matches.\n   ```\n   \n  \n  \n   ### 4.0.0b10\n   ```\n   * Added support for simple CSS selectors, taken from the soupselect project.\n\n* Fixed a crash when using html5lib. [bug=943246]\n\n* In HTML5-style &lt;meta charset=&quot;foo&quot;&gt; tags, the value of the &quot;charset&quot;\n  attribute is now replaced with the appropriate encoding on\n  output. [bug=942714]\n\n* Fixed a bug that caused calling a tag to sometimes call find_all()\n  with the wrong arguments. [bug=944426]\n\n* For backwards compatibility, brought back the BeautifulStoneSoup\n  class as a deprecated wrapper around BeautifulSoup.\n   ```\n   \n  \n  \n   ### 4.0.0b9\n   ```\n   * Fixed the string representation of DOCTYPEs that have both a public\n  ID and a system ID.\n\n* Fixed the generated XML declaration.\n\n* Renamed Tag.nsprefix to Tag.prefix, for consistency with\n  NamespacedAttribute.\n\n* Fixed a test failure that occurred on Python 3.x when chardet was\n  installed.\n\n* Made prettify() return Unicode by default, so it will look nice on\n  Python 3 when passed into print().\n   ```\n   \n  \n  \n   ### 4.0.0b8\n   ```\n   * All tree builders now preserve namespace information in the\n  documents they parse. If you use the html5lib parser or lxml&#x27;s XML\n  parser, you can access the namespace URL for a tag as tag.namespace.\n\n  However, there is no special support for namespace-oriented\n  searching or tree manipulation. When you search the tree, you need\n  to use namespace prefixes exactly as they&#x27;re used in the original\n  document.\n\n* The string representation of a DOCTYPE always ends in a newline.\n\n* Issue a warning if the user tries to use a SoupStrainer in\n  conjunction with the html5lib tree builder, which doesn&#x27;t support\n  them.\n   ```\n   \n  \n  \n   ### 4.0.0b7\n   ```\n   * Upon decoding to string, any characters that can&#x27;t be represented in\n  your chosen encoding will be converted into numeric XML entity\n  references.\n\n* Issue a warning if characters were replaced with REPLACEMENT\n  CHARACTER during Unicode conversion.\n\n* Restored compatibility with Python 2.6.\n\n* The install process no longer installs docs or auxiliary text files.\n\n* It&#x27;s now possible to deepcopy a BeautifulSoup object created with\n  Python&#x27;s built-in HTML parser.\n\n* About 100 unit tests that &quot;test&quot; the behavior of various parsers on\n  invalid markup have been removed. Legitimate changes to those\n  parsers caused these tests to fail, indicating that perhaps\n  Beautiful Soup should not test the behavior of foreign\n  libraries.\n\n  The problematic unit tests have been reformulated as informational\n  comparisons generated by the script\n  scripts/demonstrate_parser_differences.py.\n\n  This makes Beautiful Soup compatible with html5lib version 0.95 and\n  future versions of HTMLParser.\n   ```\n   \n  \n  \n   ### 4.0.0b6\n   ```\n   * Multi-valued attributes like &quot;class&quot; always have a list of values,\n  even if there&#x27;s only one value in the list.\n\n* Added a number of multi-valued attributes defined in HTML5.\n\n* Stopped generating a space before the slash that closes an\n  empty-element tag. This may come back if I add a special XHTML mode\n  (http://www.w3.org/TR/xhtml1/#C_2), but right now it&#x27;s pretty\n  useless.\n\n* Passing text along with tag-specific arguments to a find* method:\n\n   find(&quot;a&quot;, text=&quot;Click here&quot;)\n\n  will find tags that contain the given text as their\n  .string. Previously, the tag-specific arguments were ignored and\n  only strings were searched.\n\n* Fixed a bug that caused the html5lib tree builder to build a\n  partially disconnected tree. Generally cleaned up the html5lib tree\n  builder.\n\n* If you restrict a multi-valued attribute like &quot;class&quot; to a string\n  that contains spaces, Beautiful Soup will only consider it a match\n  if the values correspond to that specific string.\n   ```\n   \n  \n  \n   ### 4.0.0b5\n   ```\n   * Rationalized Beautiful Soup&#x27;s treatment of CSS class. A tag\n  belonging to multiple CSS classes is treated as having a list of\n  values for the &#x27;class&#x27; attribute. Searching for a CSS class will\n  match *any* of the CSS classes.\n\n  This actually affects all attributes that the HTML standard defines\n  as taking multiple values (class, rel, rev, archive, accept-charset,\n  and headers), but &#x27;class&#x27; is by far the most common. [bug=41034]\n\n* If you pass anything other than a dictionary as the second argument\n  to one of the find* methods, it&#x27;ll assume you want to use that\n  object to search against a tag&#x27;s CSS classes. Previously this only\n  worked if you passed in a string.\n\n* Fixed a bug that caused a crash when you passed a dictionary as an\n  attribute value (possibly because you mistyped &quot;attrs&quot;). [bug=842419]\n\n* Unicode, Dammit now detects the encoding in HTML 5-style &lt;meta&gt; tags\n  like &lt;meta charset=&quot;utf-8&quot; /&gt;. [bug=837268]\n\n* If Unicode, Dammit can&#x27;t figure out a consistent encoding for a\n  page, it will try each of its guesses again, with errors=&quot;replace&quot;\n  instead of errors=&quot;strict&quot;. This may mean that some data gets\n  replaced with REPLACEMENT CHARACTER, but at least most of it will\n  get turned into Unicode. [bug=754903]\n\n* Patched over a bug in html5lib (?) that was crashing Beautiful Soup\n  on certain kinds of markup. [bug=838800]\n\n* Fixed a bug that wrecked the tree if you replaced an element with an\n  empty string. [bug=728697]\n\n* Improved Unicode, Dammit&#x27;s behavior when you give it Unicode to\n  begin with.\n   ```\n   \n  \n  \n   ### 4.0.0b4\n   ```\n   * Added BeautifulSoup.new_string() to go along with BeautifulSoup.new_tag()\n\n* BeautifulSoup.new_tag() will follow the rules of whatever\n  tree-builder was used to create the original BeautifulSoup object. A\n  new &lt;p&gt; tag will look like &quot;&lt;p /&gt;&quot; if the soup object was created to\n  parse XML, but it will look like &quot;&lt;p&gt;&lt;/p&gt;&quot; if the soup object was\n  created to parse HTML.\n\n* We pass in strict=False to html.parser on Python 3, greatly\n  improving html.parser&#x27;s ability to handle bad HTML.\n\n* We also monkeypatch a serious bug in html.parser that made\n  strict=False disastrous on Python 3.2.2.\n\n* Replaced the &quot;substitute_html_entities&quot; argument with the\n  more general &quot;formatter&quot; argument.\n\n* Bare ampersands and angle brackets are always converted to XML\n  entities unless the user prevents it.\n\n* Added PageElement.insert_before() and PageElement.insert_after(),\n  which let you put an element into the parse tree with respect to\n  some other element.\n\n* Raise an exception when the user tries to do something nonsensical\n  like insert a tag into itself.\n   ```\n   \n  \n  \n   ### 4.0.0b3\n   ```\n   Beautiful Soup 4 is a nearly-complete rewrite that removes Beautiful\nSoup&#x27;s custom HTML parser in favor of a system that lets you write a\nlittle glue code and plug in any HTML or XML parser you want.\n\nBeautiful Soup 4.0 comes with glue code for four parsers:\n\n * Python&#x27;s standard HTMLParser (html.parser in Python 3)\n * lxml&#x27;s HTML and XML parsers\n * html5lib&#x27;s HTML parser\n\nHTMLParser is the default, but I recommend you install lxml if you\ncan.\n\nFor complete documentation, see the Sphinx documentation in\nbs4/doc/source/. What follows is a summary of the changes from\nBeautiful Soup 3.\n\n=== The module name has changed ===\n\nPreviously you imported the BeautifulSoup class from a module also\ncalled BeautifulSoup. To save keystrokes and make it clear which\nversion of the API is in use, the module is now called &#x27;bs4&#x27;:\n\n    &gt;&gt;&gt; from bs4 import BeautifulSoup\n\n=== It works with Python 3 ===\n\nBeautiful Soup 3.1.0 worked with Python 3, but the parser it used was\nso bad that it barely worked at all. Beautiful Soup 4 works with\nPython 3, and since its parser is pluggable, you don&#x27;t sacrifice\nquality.\n\nSpecial thanks to Thomas Kluyver and Ezio Melotti for getting Python 3\nsupport to the finish line. Ezio Melotti is also to thank for greatly\nimproving the HTML parser that comes with Python 3.2.\n\n=== CDATA sections are normal text, if they&#x27;re understood at all. ===\n\nCurrently, the lxml and html5lib HTML parsers ignore CDATA sections in\nmarkup:\n\n &lt;p&gt;&lt;![CDATA[foo]]&gt;&lt;/p&gt; =&gt; &lt;p&gt;&lt;/p&gt;\n\nA future version of html5lib will turn CDATA sections into text nodes,\nbut only within tags like &lt;svg&gt; and &lt;math&gt;:\n\n &lt;svg&gt;&lt;![CDATA[foo]]&gt;&lt;/svg&gt; =&gt; &lt;p&gt;foo&lt;/p&gt;\n\nThe default XML parser (which uses lxml behind the scenes) turns CDATA\nsections into ordinary text elements:\n\n &lt;p&gt;&lt;![CDATA[foo]]&gt;&lt;/p&gt; =&gt; &lt;p&gt;foo&lt;/p&gt;\n\nIn theory it&#x27;s possible to preserve the CDATA sections when using the\nXML parser, but I don&#x27;t see how to get it to work in practice.\n\n=== Miscellaneous other stuff ===\n\nIf the BeautifulSoup instance has .is_xml set to True, an appropriate\nXML declaration will be emitted when the tree is transformed into a\nstring:\n\n    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;&gt;\n    &lt;markup&gt;\n     ...\n    &lt;/markup&gt;\n\nThe [&#x27;lxml&#x27;, &#x27;xml&#x27;] tree builder sets .is_xml to True; the other tree\nbuilders set it to False. If you want to parse XHTML with an HTML\nparser, you can set it manually.\n   ```\n   \n  \n  \n   ### 3.2\n   ```\n   to make it obvious which one you should use.\n   ```\n   \n  \n  \n  \n  \n   ### 3.1.0\n   ```\n   A hybrid version that supports 2.4 and can be automatically converted\nto run under Python 3.0. There are three backwards-incompatible\nchanges you should be aware of, but no new features or deliberate\nbehavior changes.\n\n1. str() may no longer do what you want. This is because the meaning\nof str() inverts between Python 2 and 3; in Python 2 it gives you a\nbyte string, in Python 3 it gives you a Unicode string.\n\nThe effect of this is that you can&#x27;t pass an encoding to .__str__\nanymore. Use encode() to get a string and decode() to get Unicode, and\nyou&#x27;ll be ready (well, readier) for Python 3.\n\n2. Beautiful Soup is now based on HTMLParser rather than SGMLParser,\nwhich is gone in Python 3. There&#x27;s some bad HTML that SGMLParser\nhandled but HTMLParser doesn&#x27;t, usually to do with attribute values\nthat aren&#x27;t closed or have brackets inside them:\n\n  &lt;a href=&quot;foo&lt;/a&gt;, &lt;/a&gt;&lt;a href=&quot;bar&quot;&gt;baz&lt;/a&gt;\n  &lt;a b=&quot;&lt;a&gt;&quot;&gt;&#x27;, &#x27;&lt;a b=&quot;&amp;lt;a&amp;gt;&quot;&gt;&lt;/a&gt;&lt;a&gt;&quot;&gt;&lt;/a&gt;\n\nA later version of Beautiful Soup will allow you to plug in different\nparsers to make tradeoffs ", "created_at": "2024-07-15T14:04:09Z", "updated_at": "2024-08-05T14:04:14Z", "closed_at": "2024-08-05T14:04:12Z", "merged_at": null, "merge_commit_sha": "a854e81f0099c79fd9b7b8f5ce32d73c8897382d", "assignee": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/deanmalmgren/textract/pulls/518/commits", "review_comments_url": "https://api.github.com/repos/deanmalmgren/textract/pulls/518/comments", "review_comment_url": "https://api.github.com/repos/deanmalmgren/textract/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/deanmalmgren/textract/issues/518/comments", "statuses_url": "https://api.github.com/repos/deanmalmgren/textract/statuses/12be735662997aa09d5e1944f4e166f80ed80b27", "head": {"label": "deanmalmgren:pyup-scheduled-update-2024-07-15", "ref": "pyup-scheduled-update-2024-07-15", "sha": "12be735662997aa09d5e1944f4e166f80ed80b27", "user": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "repo": {"id": 21476229, "node_id": "MDEwOlJlcG9zaXRvcnkyMTQ3NjIyOQ==", "name": "textract", "full_name": "deanmalmgren/textract", "private": false, "owner": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/deanmalmgren/textract", "description": "extract text from any document. no muss. no fuss.", "fork": false, "url": "https://api.github.com/repos/deanmalmgren/textract", "forks_url": "https://api.github.com/repos/deanmalmgren/textract/forks", "keys_url": "https://api.github.com/repos/deanmalmgren/textract/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/deanmalmgren/textract/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/deanmalmgren/textract/teams", "hooks_url": "https://api.github.com/repos/deanmalmgren/textract/hooks", "issue_events_url": "https://api.github.com/repos/deanmalmgren/textract/issues/events{/number}", "events_url": "https://api.github.com/repos/deanmalmgren/textract/events", "assignees_url": "https://api.github.com/repos/deanmalmgren/textract/assignees{/user}", "branches_url": "https://api.github.com/repos/deanmalmgren/textract/branches{/branch}", "tags_url": "https://api.github.com/repos/deanmalmgren/textract/tags", "blobs_url": "https://api.github.com/repos/deanmalmgren/textract/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/deanmalmgren/textract/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/deanmalmgren/textract/git/refs{/sha}", "trees_url": "https://api.github.com/repos/deanmalmgren/textract/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/deanmalmgren/textract/statuses/{sha}", "languages_url": "https://api.github.com/repos/deanmalmgren/textract/languages", "stargazers_url": "https://api.github.com/repos/deanmalmgren/textract/stargazers", "contributors_url": "https://api.github.com/repos/deanmalmgren/textract/contributors", "subscribers_url": "https://api.github.com/repos/deanmalmgren/textract/subscribers", "subscription_url": "https://api.github.com/repos/deanmalmgren/textract/subscription", "commits_url": "https://api.github.com/repos/deanmalmgren/textract/commits{/sha}", "git_commits_url": "https://api.github.com/repos/deanmalmgren/textract/git/commits{/sha}", "comments_url": "https://api.github.com/repos/deanmalmgren/textract/comments{/number}", "issue_comment_url": "https://api.github.com/repos/deanmalmgren/textract/issues/comments{/number}", "contents_url": "https://api.github.com/repos/deanmalmgren/textract/contents/{+path}", "compare_url": "https://api.github.com/repos/deanmalmgren/textract/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/deanmalmgren/textract/merges", "archive_url": "https://api.github.com/repos/deanmalmgren/textract/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/deanmalmgren/textract/downloads", "issues_url": "https://api.github.com/repos/deanmalmgren/textract/issues{/number}", "pulls_url": "https://api.github.com/repos/deanmalmgren/textract/pulls{/number}", "milestones_url": "https://api.github.com/repos/deanmalmgren/textract/milestones{/number}", "notifications_url": "https://api.github.com/repos/deanmalmgren/textract/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/deanmalmgren/textract/labels{/name}", "releases_url": "https://api.github.com/repos/deanmalmgren/textract/releases{/id}", "deployments_url": "https://api.github.com/repos/deanmalmgren/textract/deployments", "created_at": "2014-07-03T20:36:59Z", "updated_at": "2024-08-23T16:14:10Z", "pushed_at": "2024-08-19T14:04:13Z", "git_url": "git://github.com/deanmalmgren/textract.git", "ssh_url": "git@github.com:deanmalmgren/textract.git", "clone_url": "https://github.com/deanmalmgren/textract.git", "svn_url": "https://github.com/deanmalmgren/textract", "homepage": "http://textract.readthedocs.io", "size": 4531, "stargazers_count": 3854, "watchers_count": 3854, "language": "HTML", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 589, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 138, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["data-mining", "natural-language-processing", "python", "text-mining"], "visibility": "public", "forks": 589, "open_issues": 138, "watchers": 3854, "default_branch": "master"}}, "base": {"label": "deanmalmgren:master", "ref": "master", "sha": "ec3c0c3c982078d22e51cc2753baeaf48cdf2e19", "user": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "repo": {"id": 21476229, "node_id": "MDEwOlJlcG9zaXRvcnkyMTQ3NjIyOQ==", "name": "textract", "full_name": "deanmalmgren/textract", "private": false, "owner": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/deanmalmgren/textract", "description": "extract text from any document. no muss. no fuss.", "fork": false, "url": "https://api.github.com/repos/deanmalmgren/textract", "forks_url": "https://api.github.com/repos/deanmalmgren/textract/forks", "keys_url": "https://api.github.com/repos/deanmalmgren/textract/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/deanmalmgren/textract/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/deanmalmgren/textract/teams", "hooks_url": "https://api.github.com/repos/deanmalmgren/textract/hooks", "issue_events_url": "https://api.github.com/repos/deanmalmgren/textract/issues/events{/number}", "events_url": "https://api.github.com/repos/deanmalmgren/textract/events", "assignees_url": "https://api.github.com/repos/deanmalmgren/textract/assignees{/user}", "branches_url": "https://api.github.com/repos/deanmalmgren/textract/branches{/branch}", "tags_url": "https://api.github.com/repos/deanmalmgren/textract/tags", "blobs_url": "https://api.github.com/repos/deanmalmgren/textract/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/deanmalmgren/textract/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/deanmalmgren/textract/git/refs{/sha}", "trees_url": "https://api.github.com/repos/deanmalmgren/textract/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/deanmalmgren/textract/statuses/{sha}", "languages_url": "https://api.github.com/repos/deanmalmgren/textract/languages", "stargazers_url": "https://api.github.com/repos/deanmalmgren/textract/stargazers", "contributors_url": "https://api.github.com/repos/deanmalmgren/textract/contributors", "subscribers_url": "https://api.github.com/repos/deanmalmgren/textract/subscribers", "subscription_url": "https://api.github.com/repos/deanmalmgren/textract/subscription", "commits_url": "https://api.github.com/repos/deanmalmgren/textract/commits{/sha}", "git_commits_url": "https://api.github.com/repos/deanmalmgren/textract/git/commits{/sha}", "comments_url": "https://api.github.com/repos/deanmalmgren/textract/comments{/number}", "issue_comment_url": "https://api.github.com/repos/deanmalmgren/textract/issues/comments{/number}", "contents_url": "https://api.github.com/repos/deanmalmgren/textract/contents/{+path}", "compare_url": "https://api.github.com/repos/deanmalmgren/textract/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/deanmalmgren/textract/merges", "archive_url": "https://api.github.com/repos/deanmalmgren/textract/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/deanmalmgren/textract/downloads", "issues_url": "https://api.github.com/repos/deanmalmgren/textract/issues{/number}", "pulls_url": "https://api.github.com/repos/deanmalmgren/textract/pulls{/number}", "milestones_url": "https://api.github.com/repos/deanmalmgren/textract/milestones{/number}", "notifications_url": "https://api.github.com/repos/deanmalmgren/textract/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/deanmalmgren/textract/labels{/name}", "releases_url": "https://api.github.com/repos/deanmalmgren/textract/releases{/id}", "deployments_url": "https://api.github.com/repos/deanmalmgren/textract/deployments", "created_at": "2014-07-03T20:36:59Z", "updated_at": "2024-08-23T16:14:10Z", "pushed_at": "2024-08-19T14:04:13Z", "git_url": "git://github.com/deanmalmgren/textract.git", "ssh_url": "git@github.com:deanmalmgren/textract.git", "clone_url": "https://github.com/deanmalmgren/textract.git", "svn_url": "https://github.com/deanmalmgren/textract", "homepage": "http://textract.readthedocs.io", "size": 4531, "stargazers_count": 3854, "watchers_count": 3854, "language": "HTML", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 589, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 138, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["data-mining", "natural-language-processing", "python", "text-mining"], "visibility": "public", "forks": 589, "open_issues": 138, "watchers": 3854, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/deanmalmgren/textract/pulls/518"}, "html": {"href": "https://github.com/deanmalmgren/textract/pull/518"}, "issue": {"href": "https://api.github.com/repos/deanmalmgren/textract/issues/518"}, "comments": {"href": "https://api.github.com/repos/deanmalmgren/textract/issues/518/comments"}, "review_comments": {"href": "https://api.github.com/repos/deanmalmgren/textract/pulls/518/comments"}, "review_comment": {"href": "https://api.github.com/repos/deanmalmgren/textract/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/deanmalmgren/textract/pulls/518/commits"}, "statuses": {"href": "https://api.github.com/repos/deanmalmgren/textract/statuses/12be735662997aa09d5e1944f4e166f80ed80b27"}}, "author_association": "COLLABORATOR", "auto_merge": null, "active_lock_reason": null, "resolved_issues": []}
{"url": "https://api.github.com/repos/deanmalmgren/textract/pulls/517", "id": 1947443900, "node_id": "PR_kwDOAUezhc50E6K8", "html_url": "https://github.com/deanmalmgren/textract/pull/517", "diff_url": "https://github.com/deanmalmgren/textract/pull/517.diff", "patch_url": "https://github.com/deanmalmgren/textract/pull/517.patch", "issue_url": "https://api.github.com/repos/deanmalmgren/textract/issues/517", "number": 517, "state": "closed", "locked": false, "title": "Scheduled biweekly dependency update for week 26", "user": {"login": "pyup-bot", "id": 16239342, "node_id": "MDQ6VXNlcjE2MjM5MzQy", "avatar_url": "https://avatars.githubusercontent.com/u/16239342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyup-bot", "html_url": "https://github.com/pyup-bot", "followers_url": "https://api.github.com/users/pyup-bot/followers", "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}", "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions", "organizations_url": "https://api.github.com/users/pyup-bot/orgs", "repos_url": "https://api.github.com/users/pyup-bot/repos", "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/pyup-bot/received_events", "type": "User", "site_admin": false}, "body": "\n\n\n\n\n### Update [argcomplete](https://pypi.org/project/argcomplete) from **1.10.3** to **3.4.0**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 3.4.0\n   ```\n   ===============================\n\n-  No stdin for python calls from bash completion functions (488)\n\n   Prevents usage of stdin by (python) executables that are called\n   during completion generation. This prevents the completion locking up\n   the entire shell when the python script is broken i.e.\u00a0it enters an\n   interactive mode (REPL) instead of generating the completions, as\n   expected.\n\n-  Localize shell variable REPLY to avoid overwriting users\u2019 value\n   (489)\n\n   The variable REPLY is used by default by the ``read`` shell builtin\n   to store the return value, and like all bash/zsh variables, is scoped\n   globally. This change allows this variable to be used for other needs\n   by appropriately scoping its internal use by an argcomplete utility\n   function that uses ``read``.\n   ```\n   \n  \n  \n   ### 3.3.0\n   ```\n   ===============================\n\n-  Preserve compatibility with argparse option tuples of length 4. This\n   update is required to use argcomplete on Python 3.11.9+ or 3.12.3+.\n   ```\n   \n  \n  \n   ### 3.2.3\n   ```\n   ===============================\n\n-  Allow register-python-argcomplete output to be used as lazy-loaded\n   zsh completion module (475)\n\n-  Move debug_stream initialization to helper method to allow fd 9\n   behavior to be overridden in subclasses (471)\n   ```\n   \n  \n  \n   ### 3.2.2\n   ```\n   ===============================\n\nExpand tilde in zsh\n   ```\n   \n  \n  \n   ### 3.2.1\n   ```\n   ===============================\n\n-  Allow explicit zsh global completion activation (467)\n   ```\n   \n  \n  \n   ### 3.2.0\n   ```\n   ===============================\n\n-  Fix and test global completion in zsh (463, 466)\n\n-  Add \u2013yes option to activate-global-python-argcomplete (461)\n\n-  Test suite improvements\n   ```\n   \n  \n  \n   ### 3.1.6\n   ```\n   ===============================\n\n-  Respect user choice in activate-global-python-argcomplete\n   ```\n   \n  \n  \n   ### 3.1.5\n   ```\n   ===============================\n\n-  Escape colon in zsh completions. Fixes 456\n   ```\n   \n  \n  \n   ### 3.1.4\n   ```\n   ===============================\n\n-  Call \\_default as a fallback in zsh global completion\n   ```\n   \n  \n  \n   ### 3.1.3\n   ```\n   ===============================\n\n-  Use homebrew prefix by default\n\n-  zsh: Allow to use external script (453)\n\n-  Add support for Python 3.12 and drop EOL 3.6 and 3.7 (449)\n   ```\n   \n  \n  \n   ### 3.1.2\n   ```\n   ===============================\n\n-  Ensure Python 3.12+ compatibility in check_console_script (448)\n   ```\n   \n  \n  \n   ### 3.1.1\n   ```\n   ===============================\n\n-  Search through asdf shims\n\n-  Use \\` as escape character in PowerShell (434)\n   ```\n   \n  \n  \n   ### 3.1.0\n   ```\n   ===============================\n\n-  setup.py -&gt; pyproject.toml migration start (427)\n\n-  Improve user install logic in activate-global-python-argcomplete\n   (437)\n\n-  Ensure Python 3.7 compatibility in check_console_script (436)\n\n-  ZSH implementation fixes (431, 433)\n\n-  Documentation improvements\n   ```\n   \n  \n  \n   ### 3.0.8\n   ```\n   ===============================\n\n-  Test suite shell wrapper: Accept OSError on exit\n   ```\n   \n  \n  \n   ### 3.0.7\n   ```\n   ===============================\n\n-  Test suite: Use general regex to cut zsh reset ANSI sequences (425)\n   ```\n   \n  \n  \n   ### 3.0.6\n   ```\n   ===============================\n\n-  Allow importlib-metadata 6.x; skip test failures on Python 3.7 (420,\n   424)\n\n-  Note completers can return iterables of strings, not just lists\n   (422)\n\n-  Documentation and test improvements\n   ```\n   \n  \n  \n   ### 3.0.5\n   ```\n   ===============================\n\n-  Call \\_default as fallback in zsh global completion hook\n\n-  Begin support for mapping-emitting completers\n   ```\n   \n  \n  \n   ### 3.0.4\n   ```\n   ===============================\n\n-  activate-global-python-argcomplete: do not overwrite existing dotfile\n   in user directory\n\n-  Add NOTICE file\n\n-  Establish long term name for split_line as\n   argcomplete.lexers.split_line\n   ```\n   \n  \n  \n   ### 3.0.3\n   ```\n   ===============================\n\n-  Re-add split_line to API (419)\n   ```\n   \n  \n  \n   ### 3.0.2\n   ```\n   ===============================\n\nFix zsh default completion issues\n   ```\n   \n  \n  \n   ### 3.0.1\n   ```\n   ===============================\n\n-  Fix zsh autoload issues\n   ```\n   \n  \n  \n   ### 3.0.0\n   ```\n   ===============================\n\n-  Fully support zsh. Argcomplete now supports completion descriptions\n   and global completion in zsh.\n\n-  Clean up top level namespace.\n\n-  Documentation and test improvements.\n   ```\n   \n  \n  \n   ### 2.1.2\n   ```\n   ===============================\n\n-  Test infrastructure improvements\n\n-  Indicate that there is no support commitment for fish and tcsh shells\n   ```\n   \n  \n  \n   ### 2.1.1\n   ```\n   ===============================\n\n-  Documentation and test improvements\n   ```\n   \n  \n  \n   ### 2.1.0\n   ```\n   ===============================\n\n-  Remove scripts for contrib-supported shells from global namespace\n   ```\n   \n  \n  \n   ### 2.0.6\n   ```\n   ===============================\n\n-  setup.py: exclude test.\\* subpackages from find_packages (406)\n\n-  Support PowerShell (405)\n\n-  CI updates\n   ```\n   \n  \n  \n   ### 2.0.5\n   ```\n   ===============================\n\n-  Revert \u201cSupport powershell (392)\u201d\n   ```\n   \n  \n  \n   ### 2.0.4\n   ```\n   ===============================\n   ```\n   \n  \n  \n   ### 2.0.3\n   ```\n   ===============================\n   ```\n   \n  \n  \n   ### 2.0.2\n   ```\n   ===============================\n   ```\n   \n  \n  \n   ### 2.0.1\n   ```\n   ===============================\n\n-  Support powershell (392)\n\n-  Update importlib-metadata dependency to include versions 5.x (389)\n\n-  Test and documentation improvements\n   ```\n   \n  \n  \n   ### 2.0.0\n   ```\n   ===============================\n\n-  Truncate input after cursor. Fixes 351 (352)\n\n-  Support of path completion in fish 327 (359)\n\n-  Drop support for Python 2.7 and 3.5 (361)\n\n-  Add support for Python 3.10 (356)\n\n-  Test, documentation, and release infrastructure improvements\n   ```\n   \n  \n  \n   ### 1.12.3\n   ```\n   ================================\n\n-  Update importlib-metadata version pin (345)\n\n-  Display script debug output in tcsh (342)\n\n-  Fish support improvements (338, 339)\n\n-  Print ``warn()`` message from beginning of line (335)\n\n-  Test infrastructure improvements\n   ```\n   \n  \n  \n   ### 1.12.2\n   ```\n   ================================\n\n-  Update importlib-metadata dependency pin (332)\n\n-  Add change log project URL (312)\n\n-  Replace Travis CI with GitHub Actions (323)\n   ```\n   \n  \n  \n   ### 1.12.1\n   ```\n   ================================\n\n-  Update importlib-metadata dependency version range\n\n-  Bash nounset mode fixes (313)\n   ```\n   \n  \n  \n   ### 1.11.1\n   ```\n   ================================\n\n-  Add -o bashdefault to register-python-argcomplete\u2019s output command\n   (284)\n   ```\n   \n  \n  \n   ### 1.11.0\n   ```\n   ================================\n\n-  Use shell builtins where possible (280)\n\n-  Switch from pkg_resources to importlib (283)\n\n-  Remove .sh extension by bash-completion convention (281)\n\n-  Catch exceptions in \\_check_module (269)\n\n-  Documentation and test improvements\n   ```\n   \n  \n  \n   ### 1.10.3\n   ```\n   ================================\n\n-  Do not suggest options after \u2013 (end-of-options delimiter)\n   ```\n   \n  \n  \n   ### 1.10.2\n   ```\n   ================================\n\n-  Include all test directory contents in source distribution\n   ```\n   \n  \n  \n   ### 1.10.1\n   ```\n   ================================\n\n-  Trigger completers on \u2013optional=PARTIAL_VALUE\n\n-  Complete console scripts installed from wheels (241)\n   ```\n   \n  \n  \n   ### 1.10.0\n   ```\n   ================================\n\n-  Fish support 68 (260), thanks to volkov\n   ```\n   \n  \n  \n   ### 1.9.5\n   ```\n   ===============================\n\n-  check_module: Don\u2019t crash, exit with error instead (261)\n\n-  Register completion for multiple commands (246)\n   ```\n   \n  \n  \n   ### 1.9.4\n   ```\n   ===============================\n\n-  Use the correct interpreter when checking wrappers (226)\n\n-  Provide shellcode as a module function (237)\n   ```\n   \n  \n  \n   ### 1.9.3\n   ```\n   ===============================\n\n-  Fix handling of COMP\\_POINT (236)\n\n-  Fix crash when writing unicode to debug\\_stream in Python 2 (230)\n   ```\n   \n  \n  \n   ### 1.9.2\n   ```\n   ===============================\n\n-  Fix release\n   ```\n   \n  \n  \n   ### 1.9.1\n   ```\n   ===============================\n\n-  Fix release\n   ```\n   \n  \n  \n   ### 1.9.0\n   ```\n   ===============================\n\n-  Add SuppressCompleter to skip completion for specific arguments while\n   allowing help text (224)\n\n-  Redirect all output to debug stream in debug mode (206)\n\n-  Complete python -m module (204)\n   ```\n   \n  \n  \n   ### 1.8.2\n   ```\n   ===============================\n\n-  Fix bug introduced in v0.7.1 where completers would not receive the\n   parser keyword argument.\n\n-  Documentation improvements.\n   ```\n   \n  \n  \n   ### 1.8.1\n   ```\n   ===============================\n\n-  Fix completion after tokens with wordbreak chars (197)\n   ```\n   \n  \n  \n   ### 1.8.0\n   ```\n   ===============================\n\nThis release contains work by evanunderscore with numerous improvements\nto the handling of special characters in completions.\n\n-  Simplify nospace handling in global completion (195)\n\n-  Specially handle all characters in COMP\\_WORDBREAKS (187)\n\n-  Use setuptools tests-require directive, fixes 186\n\n-  Complete files using the specified interpreter (192)\n\n-  Fix completion for scripts run via python (191)\n\n-  Clarify argument to register-python-argcomplete (190)\n\n-  Fix handling of commas and other special chars (172); handle more\n   special characters (189)\n\n-  Fix handling of special characters in tcsh (188)\n\n-  Update my\\_shlex to Python 3.6 version (184)\n\n-  Fix additional trailing space in exact matches (183)\n\n-  Adjust tests to handle development environments (180)\n\n-  Fix tcsh tests on OSX (177); Update bash on OSX (176); Check output\n   of test setup command (179)\n\n-  Optionally disable duplicated flags (143)\n\n-  Add default\\_completer option to CompletionFinder.\\ **call** (167)\n\n-  Let bash add or suppress trailing space (159)\n   ```\n   \n  \n  \n   ### 1.7.0\n   ```\n   ===============================\n\n-  Restore parser to its original state to allow reuse after completion\n   (150).\n\n-  Expose COMP\\_TYPE environment variable (157). Thanks to Matt Clay\n   (mattclay).\n\n-  Test infrastructure and documentation improvements.\n   ```\n   \n  \n  \n   ### 1.6.0\n   ```\n   ===============================\n\n-  Add support for tcsh (155)\n\n-  Fix handling of unquoted completions containing $ (154)\n\n-  Don&#x27;t insert unnecessary leading quote char in completions (152)\n\n-  Fix parser reuse with positional arguments (149)\n\n-  Tests: Add simple pexpect tests for bash (153); Add test case to\n   verify 20 is fixed (148)\n\n-  Thanks to davvid and evanunderscore for their work on this release.\n   ```\n   \n  \n  \n   ### 1.5.1\n   ```\n   ===============================\n\n-  Packaging fix\n   ```\n   \n  \n  \n   ### 1.5.0\n   ```\n   ===============================\n\n-  Do not suggest options from mutually exclusive groups (145).\n   ```\n   \n  \n  \n   ### 1.4.1\n   ```\n   ==========================\n- activate-global-python-argcomplete runs on Homebrew out of the box\n   ```\n   \n  \n  \n   ### 1.4.0\n   ```\n   ==========================\n- Correctly handle suggestions for positionals with variable-length nargs. Thanks to evanunderscore (132, 133).\n   ```\n   \n  \n  \n   ### 1.3.0\n   ```\n   ==========================\n- Correctly handle suggestions with custom nargs for optionals. Thanks to evanunderscore (131).\n   ```\n   \n  \n  \n   ### 1.2.0\n   ```\n   ==========================\n- Fix propagation of partially parsed subparser namespace into parent parser namespace upon subparser failure due to\n  partial args. This allows completers to access partial parse results for subparser optionals in parsed_args (114).\n- The default completer can now be specified when manually instantiating CompletionFinder. Thanks to avylove (130).\n   ```\n   \n  \n  \n   ### 1.1.1\n   ```\n   ==========================\n- Use FilesCompleter as default completer fallback (120).\n   ```\n   \n  \n  \n   ### 1.1.0\n   ```\n   ==========================\n- Recognize subclasses of argparse._SubParsersAction. Thanks to Stephen Koo (118).\n- Support parsed_args in custom completers with missing args. Thanks to Dan Kilman (124).\n- Non-ASCII support in FilesCompleter.\n- Automatically enable FilesCompleter for argparse.FileType arguments.\n   ```\n   \n  \n  \n   ### 1.0.0\n   ```\n   ==========================\n- Don&#x27;t print args with suppressed help by default; add\n  ``argcomplete.autocomplete(print_suppressed=True)`` to control this\n  behavior (113).\n   ```\n   \n  \n  \n   ### 0.9.0\n   ```\n   ==========================\n- Fix always_complete_options=False support (115).\n   ```\n   \n  \n  \n   ### 0.8.9\n   ```\n   ==========================\n- Correct doc filename in setup.cfg (fixes bdist_rpm failure, Issue 111).\n- Make context managers exception-safe. Thanks to Miko\u0142aj Siedlarek (pull request 110).\n   ```\n   \n  \n  \n   ### 0.8.8\n   ```\n   ==========================\n- Build and upload universal wheel packages in release.\n- Fix issue with non-string choices for arguments. Thanks to neizod (pull request 107).\n- Improve non-ascii argparse argument support on Python 2.7.\n   ```\n   \n  \n  \n   ### 0.8.7\n   ```\n   ==========================\n- register-python-argcomplete: add option to avoid default readline completion. Thanks to drmalex07 (pull request 99).\n   ```\n   \n  \n  \n   ### 0.8.6\n   ```\n   ==========================\n- Expand tilde in script name, allowing argcomplete to work when invoking scripts from one&#x27;s home directory. Thanks to VorpalBlade (Issue 104).\n   ```\n   \n  \n  \n   ### 0.8.5\n   ```\n   ==========================\n- Fix issues related to using argcomplete in a REPL environment.\n- New helper method for custom completion display.\n- Expand test suite; formatting cleanup.\n   ```\n   \n  \n  \n   ### 0.8.4\n   ```\n   ==========================\n- Fix issue related to using argcomplete in a REPL environment. Thanks to wapiflapi (pull request 91).\n   ```\n   \n  \n  \n   ### 0.8.3\n   ```\n   ==========================\n- Fix multiple issues related to using argcomplete in a REPL environment. Thanks to wapiflapi (pull request 90).\n   ```\n   \n  \n  \n   ### 0.8.2\n   ```\n   ==========================\n- Don&#x27;t strip colon prefix in completion results if COMP_WORDBREAKS does not contain a colon. Thanks to berezv (pull request 88).\n   ```\n   \n  \n  \n   ### 0.8.1\n   ```\n   ==========================\n- Use complete --nospace to avoid issues with directory completion.\n   ```\n   \n  \n  \n   ### 0.8.0\n   ```\n   ==========================\n- Refactor main body of code into a class to enable subclassing and overriding of functionality (Issue 78).\n   ```\n   \n  \n  \n   ### 0.7.1\n   ```\n   ==========================\n- New keyword option &quot;argcomplete.autocomplete(validator=...)&quot; to supply a custom validator or bypass default validation. Thanks to thijsdezoete (Issue 77).\n- Document debug options.\n   ```\n   \n  \n  \n   ### 0.7.0\n   ```\n   ==========================\n- New keyword option &quot;argcomplete.autocomplete(exclude=[...])&quot; to suppress options (Issue 74).\n- More speedups to code path for global completion hook negative result.\n   ```\n   \n  \n  \n   ### 0.6.9\n   ```\n   ==========================\n- Fix handling of development mode script wrappers. Thanks to jmlopez-rod and dcosson (Issue 69).\n- Speed up code path for global completion hook negative result by loading pkg_resources on demand.\n   ```\n   \n  \n  \n   ### 0.6.8\n   ```\n   ==========================\n- Begin tracking changes in changelog.\n- Add completion support for PBR installed scripts (PR 71).\n- Detect easy-install shims with shebang lines that contain Py instead of py (Issue 69).\n   ```\n   \n  \n</details>\n\n\n \n\n<details>\n  <summary>Links</summary>\n  \n  - PyPI: https://pypi.org/project/argcomplete\n  - Changelog: https://data.safetycli.com/changelogs/argcomplete/\n  - Repo: https://github.com/kislyuk/argcomplete\n</details>\n\n\n\n\n\n### Update [beautifulsoup4](https://pypi.org/project/beautifulsoup4) from **4.8.2** to **4.12.3**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 4.11.1\n   ```\n   This release was done to ensure that the unit tests are packaged along\nwith the released source. There are no functionality changes in this\nrelease, but there are a few other packaging changes:\n\n* The Japanese and Korean translations of the documentation are included.\n* The changelog is now packaged as CHANGELOG, and the license file is\n  packaged as LICENSE. NEWS.txt and COPYING.txt are still present,\n  but may be removed in the future.\n* TODO.txt is no longer packaged, since a TODO is not relevant for released\n  code.\n   ```\n   \n  \n  \n   ### 4.11.0\n   ```\n   * Ported unit tests to use pytest.\n\n* Added special string classes, RubyParenthesisString and RubyTextString,\n  to make it possible to treat ruby text specially in get_text() calls.\n  [bug=1941980]\n\n* It&#x27;s now possible to customize the way output is indented by\n  providing a value for the &#x27;indent&#x27; argument to the Formatter\n  constructor. The &#x27;indent&#x27; argument works very similarly to the\n  argument of the same name in the Python standard library&#x27;s\n  json.dump() function. [bug=1955497]\n\n* If the charset-normalizer Python module\n  (https://pypi.org/project/charset-normalizer/) is installed, Beautiful\n  Soup will use it to detect the character sets of incoming documents.\n  This is also the module used by newer versions of the Requests library.\n  For the sake of backwards compatibility, chardet and cchardet both take\n  precedence if installed. [bug=1955346]\n\n* Added a workaround for an lxml bug\n  (https://bugs.launchpad.net/lxml/+bug/1948551) that causes\n  problems when parsing a Unicode string beginning with BYTE ORDER MARK.\n  [bug=1947768]\n\n* Issue a warning when an HTML parser is used to parse a document that\n  looks like XML but not XHTML. [bug=1939121]\n\n* Do a better job of keeping track of namespaces as an XML document is\n  parsed, so that CSS selectors that use namespaces will do the right\n  thing more often. [bug=1946243]\n\n* Some time ago, the misleadingly named &quot;text&quot; argument to find-type\n  methods was renamed to the more accurate &quot;string.&quot; But this supposed\n  &quot;renaming&quot; didn&#x27;t make it into important places like the method\n  signatures or the docstrings. That&#x27;s corrected in this\n  version. &quot;text&quot; still works, but will give a DeprecationWarning.\n  [bug=1947038]\n\n* Fixed a crash when pickling a BeautifulSoup object that has no\n  tree builder. [bug=1934003]\n\n* Fixed a crash when overriding multi_valued_attributes and using the\n  html5lib parser. [bug=1948488]\n\n* Standardized the wording of the MarkupResemblesLocatorWarning\n  warnings to omit untrusted input and make the warnings less\n  judgmental about what you ought to be doing. [bug=1955450]\n\n* Removed support for the iconv_codec library, which doesn&#x27;t seem\n  to exist anymore and was never put up on PyPI. (The closest\n  replacement on PyPI, iconv_codecs, is GPL-licensed, so we can&#x27;t use\n  it--it&#x27;s also quite old.)\n   ```\n   \n  \n  \n   ### 4.10.0\n   ```\n   * This is the first release of Beautiful Soup to only support Python\n  3. I dropped Python 2 support to maintain support for newer versions\n  (58 and up) of setuptools. See:\n  https://github.com/pypa/setuptools/issues/2769 [bug=1942919]\n\n* The behavior of methods like .get_text() and .strings now differs\n  depending on the type of tag. The change is visible with HTML tags\n  like &lt;script&gt;, &lt;style&gt;, and &lt;template&gt;. Starting in 4.9.0, methods\n  like get_text() returned no results on such tags, because the\n  contents of those tags are not considered &#x27;text&#x27; within the document\n  as a whole.\n\n  But a user who calls script.get_text() is working from a different\n  definition of &#x27;text&#x27; than a user who calls div.get_text()--otherwise\n  there would be no need to call script.get_text() at all. In 4.10.0,\n  the contents of (e.g.) a &lt;script&gt; tag are considered &#x27;text&#x27; during a\n  get_text() call on the tag itself, but not considered &#x27;text&#x27; during\n  a get_text() call on the tag&#x27;s parent.\n\n  Because of this change, calling get_text() on each child of a tag\n  may now return a different result than calling get_text() on the tag\n  itself. That&#x27;s because different tags now have different\n  understandings of what counts as &#x27;text&#x27;. [bug=1906226] [bug=1868861]\n\n* NavigableString and its subclasses now implement the get_text()\n  method, as well as the properties .strings and\n  .stripped_strings. These methods will either return the string\n  itself, or nothing, so the only reason to use this is when iterating\n  over a list of mixed Tag and NavigableString objects. [bug=1904309]\n\n* The &#x27;html5&#x27; formatter now treats attributes whose values are the\n  empty string as HTML boolean attributes. Previously (and in other\n  formatters), an attribute value must be set as None to be treated as\n  a boolean attribute. In a future release, I plan to also give this\n  behavior to the &#x27;html&#x27; formatter. Patch by Isaac Muse. [bug=1915424]\n\n* The &#x27;replace_with()&#x27; method now takes a variable number of arguments,\n  and can be used to replace a single element with a sequence of elements.\n  Patch by Bill Chandos. [rev=605]\n\n* Corrected output when the namespace prefix associated with a\n  namespaced attribute is the empty string, as opposed to\n  None. [bug=1915583]\n\n* Performance improvement when processing tags that speeds up overall\n  tree construction by 2%. Patch by Morotti. [bug=1899358]\n\n* Corrected the use of special string container classes in cases when a\n  single tag may contain strings with different containers; such as\n  the &lt;template&gt; tag, which may contain both TemplateString objects\n  and Comment objects. [bug=1913406]\n\n* The html.parser tree builder can now handle named entities\n  found in the HTML5 spec in much the same way that the html5lib\n  tree builder does. Note that the lxml HTML tree builder doesn&#x27;t handle\n  named entities this way. [bug=1924908]\n\n* Added a second way to pass specify encodings to UnicodeDammit and\n  EncodingDetector, based on the order of precedence defined in the\n  HTML5 spec, starting at:\n  https://html.spec.whatwg.org/multipage/parsing.html#parsing-with-a-known-character-encoding\n\n  Encodings in &#x27;known_definite_encodings&#x27; are tried first, then\n  byte-order-mark sniffing is run, then encodings in &#x27;user_encodings&#x27;\n  are tried. The old argument, &#x27;override_encodings&#x27;, is now a\n  deprecated alias for &#x27;known_definite_encodings&#x27;.\n\n  This changes the default behavior of the html.parser and lxml tree\n  builders, in a way that may slightly improve encoding\n  detection but will probably have no effect. [bug=1889014]\n\n* Improve the warning issued when a directory name (as opposed to\n  the name of a regular file) is passed as markup into the BeautifulSoup\n  constructor. [bug=1913628]\n   ```\n   \n  \n  \n   ### 4.9.3\n   ```\n   * Implemented a significant performance optimization to the process of\n  searching the parse tree. Patch by Morotti. [bug=1898212]\n   ```\n   \n  \n  \n   ### 4.9.2\n   ```\n   * Fixed a bug that caused too many tags to be popped from the tag\n  stack during tree building, when encountering a closing tag that had\n  no matching opening tag. [bug=1880420]\n\n* Fixed a bug that inconsistently moved elements over when passing\n  a Tag, rather than a list, into Tag.extend(). [bug=1885710]\n\n* Specify the soupsieve dependency in a way that complies with\n  PEP 508. Patch by Mike Nerone. [bug=1893696]\n\n* Change the signatures for BeautifulSoup.insert_before and insert_after\n  (which are not implemented) to match PageElement.insert_before and\n  insert_after, quieting warnings in some IDEs. [bug=1897120]\n   ```\n   \n  \n  \n   ### 4.9.1\n   ```\n   * Added a keyword argument &#x27;on_duplicate_attribute&#x27; to the\n  BeautifulSoupHTMLParser constructor (used by the html.parser tree\n  builder) which lets you customize the handling of markup that\n  contains the same attribute more than once, as in:\n  &lt;a href=&quot;url1&quot; href=&quot;url2&quot;&gt; [bug=1878209]\n\n* Added a distinct subclass, GuessedAtParserWarning, for the warning\n  issued when BeautifulSoup is instantiated without a parser being\n  specified. [bug=1873787]\n\n* Added a distinct subclass, MarkupResemblesLocatorWarning, for the\n  warning issued when BeautifulSoup is instantiated with &#x27;markup&#x27; that\n  actually seems to be a URL or the path to a file on\n  disk. [bug=1873787]\n\n* The new NavigableString subclasses (Stylesheet, Script, and\n  TemplateString) can now be imported directly from the bs4 package.\n\n* If you encode a document with a Python-specific encoding like\n  &#x27;unicode_escape&#x27;, that encoding is no longer mentioned in the final\n  XML or HTML document. Instead, encoding information is omitted or\n  left blank. [bug=1874955]\n\n* Fixed test failures when run against soupselect 2.0. Patch by Tom\u00e1\u0161\n  Chv\u00e1tal. [bug=1872279]\n   ```\n   \n  \n  \n   ### 4.9.0\n   ```\n   * Added PageElement.decomposed, a new property which lets you\n  check whether you&#x27;ve already called decompose() on a Tag or\n  NavigableString.\n\n* Embedded CSS and Javascript is now stored in distinct Stylesheet and\n  Script tags, which are ignored by methods like get_text() since most\n  people don&#x27;t consider this sort of content to be &#x27;text&#x27;. This\n  feature is not supported by the html5lib treebuilder. [bug=1868861]\n\n* Added a Russian translation by &#x27;authoress&#x27; to the repository.\n\n* Fixed an unhandled exception when formatting a Tag that had been\n  decomposed.[bug=1857767]\n\n* Fixed a bug that happened when passing a Unicode filename containing\n  non-ASCII characters as markup into Beautiful Soup, on a system that\n  allows Unicode filenames. [bug=1866717]\n\n* Added a performance optimization to PageElement.extract(). Patch by\n  Arthur Darcet.\n   ```\n   \n  \n  \n   ### 4.8.2\n   ```\n   * Added Python docstrings to all public methods of the most commonly\n  used classes.\n\n* Added a Chinese translation by Deron Wang and a Brazilian Portuguese\n  translation by Cezar Peixeiro to the repository.\n\n* Fixed two deprecation warnings. Patches by Colin\n  Watson and Nicholas Neumann. [bug=1847592] [bug=1855301]\n\n* The html.parser tree builder now correctly handles DOCTYPEs that are\n  not uppercase. [bug=1848401]\n\n* PageElement.select() now returns a ResultSet rather than a regular\n  list, making it consistent with methods like find_all().\n   ```\n   \n  \n  \n   ### 4.8.1\n   ```\n   * When the html.parser or html5lib parsers are in use, Beautiful Soup\n  will, by default, record the position in the original document where\n  each tag was encountered. This includes line number (Tag.sourceline)\n  and position within a line (Tag.sourcepos).  Based on code by Chris\n  Mayo. [bug=1742921]\n\n* When instantiating a BeautifulSoup object, it&#x27;s now possible to\n   provide a dictionary (&#x27;element_classes&#x27;) of the classes you&#x27;d like to be\n   instantiated instead of Tag, NavigableString, etc.\n\n* Fixed the definition of the default XML namespace when using\n   lxml 4.4. Patch by Isaac Muse. [bug=1840141]\n\n* Fixed a crash when pretty-printing tags that were not created\n   during initial parsing. [bug=1838903]\n\n* Copying a Tag preserves information that was originally obtained from\n   the TreeBuilder used to build the original Tag. [bug=1838903]\n\n* Raise an explanatory exception when the underlying parser\n   completely rejects the incoming markup. [bug=1838877]\n\n* Avoid a crash when trying to detect the declared encoding of a\n   Unicode document. [bug=1838877]\n\n* Avoid a crash when unpickling certain parse trees generated\n   using html5lib on Python 3. [bug=1843545]\n   ```\n   \n  \n  \n   ### 4.8.0\n   ```\n   This release focuses on making it easier to customize Beautiful Soup&#x27;s\ninput mechanism (the TreeBuilder) and output mechanism (the Formatter).\n\n* You can customize the TreeBuilder object by passing keyword\n  arguments into the BeautifulSoup constructor. Those keyword\n  arguments will be passed along into the TreeBuilder constructor.\n\n  The main reason to do this right now is to change how which\n  attributes are treated as multi-valued attributes (the way &#x27;class&#x27;\n  is treated by default). You can do this with the\n  &#x27;multi_valued_attributes&#x27; argument. [bug=1832978]\n\n* The role of Formatter objects has been greatly expanded. The Formatter\n  class now controls the following:\n\n  - The function to call to perform entity substitution. (This was\n    previously Formatter&#x27;s only job.)\n  - Which tags should be treated as containing CDATA and have their\n    contents exempt from entity substitution.\n  - The order in which a tag&#x27;s attributes are output. [bug=1812422]\n  - Whether or not to put a &#x27;/&#x27; inside a void element, e.g. &#x27;&lt;br/&gt;&#x27; vs &#x27;&lt;br&gt;&#x27;\n\n  All preexisting code should work as before.\n\n* Added a new method to the API, Tag.smooth(), which consolidates\n  multiple adjacent NavigableString elements. [bug=1697296]\n\n* &amp;apos; (which is valid in XML, XHTML, and HTML 5, but not HTML 4) is always\n  recognized as a named entity and converted to a single quote. [bug=1818721]\n   ```\n   \n  \n  \n   ### 4.7.1\n   ```\n   * Fixed a significant performance problem introduced in 4.7.0. [bug=1810617]\n\n* Fixed an incorrectly raised exception when inserting a tag before or\n  after an identical tag. [bug=1810692]\n\n* Beautiful Soup will no longer try to keep track of namespaces that\n  are not defined with a prefix; this can confuse soupselect. [bug=1810680]\n\n* Tried even harder to avoid the deprecation warning originally fixed in\n   4.6.1. [bug=1778909]\n   ```\n   \n  \n  \n   ### 4.7.0\n   ```\n   * Beautiful Soup&#x27;s CSS Selector implementation has been replaced by a\n  dependency on Isaac Muse&#x27;s SoupSieve project (the soupsieve package\n  on PyPI). The good news is that SoupSieve has a much more robust and\n  complete implementation of CSS selectors, resolving a large number\n  of longstanding issues. The bad news is that from this point onward,\n  SoupSieve must be installed if you want to use the select() method.\n\n  You don&#x27;t have to change anything lf you installed Beautiful Soup\n  through pip (SoupSieve will be automatically installed when you\n  upgrade Beautiful Soup) or if you don&#x27;t use CSS selectors from\n  within Beautiful Soup.\n\n  SoupSieve documentation: https://facelessuser.github.io/soupsieve/\n\n* Added the PageElement.extend() method, which works like list.append().\n   [bug=1514970]\n\n* PageElement.insert_before() and insert_after() now take a variable\n   number of arguments. [bug=1514970]\n\n* Fix a number of problems with the tree builder that caused\n  trees that were superficially okay, but which fell apart when bits\n  were extracted. Patch by Isaac Muse. [bug=1782928,1809910]\n\n* Fixed a problem with the tree builder in which elements that\n  contained no content (such as empty comments and all-whitespace\n  elements) were not being treated as part of the tree. Patch by Isaac\n  Muse. [bug=1798699]\n\n* Fixed a problem with multi-valued attributes where the value\n  contained whitespace. Thanks to Jens Svalgaard for the\n  fix. [bug=1787453]\n\n* Clarified ambiguous license statements in the source code. Beautiful\n  Soup is released under the MIT license, and has been since 4.4.0.\n\n* This file has been renamed from NEWS.txt to CHANGELOG.\n   ```\n   \n  \n  \n   ### 4.6.3\n   ```\n   * Exactly the same as 4.6.2. Re-released to make the README file\n  render properly on PyPI.\n   ```\n   \n  \n  \n   ### 4.6.2\n   ```\n   * Fix an exception when a custom formatter was asked to format a void\n  element. [bug=1784408]\n   ```\n   \n  \n  \n   ### 4.6.1\n   ```\n   * Stop data loss when encountering an empty numeric entity, and\n  possibly in other cases.  Thanks to tos.kamiya for the fix. [bug=1698503]\n\n* Preserve XML namespaces introduced inside an XML document, not just\n   the ones introduced at the top level. [bug=1718787]\n\n* Added a new formatter, &quot;html5&quot;, which represents void elements\n   as &quot;&lt;element&gt;&quot; rather than &quot;&lt;element/&gt;&quot;.  [bug=1716272]\n\n* Fixed a problem where the html.parser tree builder interpreted\n  a string like &quot;&amp;foo &quot; as the character entity &quot;&amp;foo;&quot;  [bug=1728706]\n\n* Correctly handle invalid HTML numeric character entities like &amp;147;\n  which reference code points that are not Unicode code points. Note\n  that this is only fixed when Beautiful Soup is used with the\n  html.parser parser -- html5lib already worked and I couldn&#x27;t fix it\n  with lxml.  [bug=1782933]\n\n* Improved the warning given when no parser is specified. [bug=1780571]\n\n* When markup contains duplicate elements, a select() call that\n  includes multiple match clauses will match all relevant\n  elements. [bug=1770596]\n\n* Fixed code that was causing deprecation warnings in recent Python 3\n  versions. Includes a patch from Ville Skytt\u00e4. [bug=1778909] [bug=1689496]\n\n* Fixed a Windows crash in diagnose() when checking whether a long\n  markup string is a filename. [bug=1737121]\n\n* Stopped HTMLParser from raising an exception in very rare cases of\n  bad markup. [bug=1708831]\n\n* Fixed a bug where find_all() was not working when asked to find a\n  tag with a namespaced name in an XML document that was parsed as\n  HTML. [bug=1723783]\n\n* You can get finer control over formatting by subclassing\n  bs4.element.Formatter and passing a Formatter instance into (e.g.)\n  encode(). [bug=1716272]\n\n* You can pass a dictionary of `attrs` into\n  BeautifulSoup.new_tag. This makes it possible to create a tag with\n  an attribute like &#x27;name&#x27; that would otherwise be masked by another\n  argument of new_tag. [bug=1779276]\n\n* Clarified the deprecation warning when accessing tag.fooTag, to cover\n  the possibility that you might really have been looking for a tag\n  called &#x27;fooTag&#x27;.\n   ```\n   \n  \n  \n   ### 4.6.0\n   ```\n   * Added the `Tag.get_attribute_list` method, which acts like `Tag.get` for\n  getting the value of an attribute, but which always returns a list,\n  whether or not the attribute is a multi-value attribute. [bug=1678589]\n\n* It&#x27;s now possible to use a tag&#x27;s namespace prefix when searching,\n  e.g. soup.find(&#x27;namespace:tag&#x27;) [bug=1655332]\n\n* Improved the handling of empty-element tags like &lt;br&gt; when using the\n  html.parser parser. [bug=1676935]\n\n* HTML parsers treat all HTML4 and HTML5 empty element tags (aka void\n  element tags) correctly. [bug=1656909]\n\n* Namespace prefix is preserved when an XML tag is copied. Thanks\n  to Vikas for a patch and test. [bug=1685172]\n   ```\n   \n  \n  \n   ### 4.5.3\n   ```\n   * Fixed foster parenting when html5lib is the tree builder. Thanks to\n  Geoffrey Sneddon for a patch and test.\n  \n* Fixed yet another problem that caused the html5lib tree builder to\n  create a disconnected parse tree. [bug=1629825]\n   ```\n   \n  \n  \n   ### 4.5.2\n   ```\n   * Apart from the version number, this release is identical to\n  4.5.3. Due to user error, it could not be completely uploaded to\n  PyPI. Use 4.5.3 instead.\n   ```\n   \n  \n  \n   ### 4.5.1\n   ```\n   * Fixed a crash when passing Unicode markup that contained a\n  processing instruction into the lxml HTML parser on Python\n  3. [bug=1608048]\n   ```\n   \n  \n  \n   ### 4.5.0\n   ```\n   * Beautiful Soup is no longer compatible with Python 2.6. This\n  actually happened a few releases ago, but it&#x27;s now official.\n\n* Beautiful Soup will now work with versions of html5lib greater than\n  0.99999999. [bug=1603299]\n\n* If a search against each individual value of a multi-valued\n  attribute fails, the search will be run one final time against the\n  complete attribute value considered as a single string. That is, if\n  a tag has class=&quot;foo bar&quot; and neither &quot;foo&quot; nor &quot;bar&quot; matches, but\n  &quot;foo bar&quot; does, the tag is now considered a match.\n\n  This happened in previous versions, but only when the value being\n  searched for was a string. Now it also works when that value is\n  a regular expression, a list of strings, etc. [bug=1476868]\n\n* Fixed a bug that deranged the tree when a whitespace element was\n  reparented into a tag that contained an identical whitespace\n  element. [bug=1505351]\n\n* Added support for CSS selector values that contain quoted spaces,\n  such as tag[style=&quot;display: foo&quot;]. [bug=1540588]\n\n* Corrected handling of XML processing instructions. [bug=1504393]\n\n* Corrected an encoding error that happened when a BeautifulSoup\n  object was copied. [bug=1554439]\n\n* The contents of &lt;textarea&gt; tags will no longer be modified when the\n  tree is prettified. [bug=1555829]\n\n* When a BeautifulSoup object is pickled but its tree builder cannot\n  be pickled, its .builder attribute is set to None instead of being\n  destroyed. This avoids a performance problem once the object is\n  unpickled. [bug=1523629]\n\n* Specify the file and line number when warning about a\n  BeautifulSoup object being instantiated without a parser being\n  specified. [bug=1574647]\n\n* The `limit` argument to `select()` now works correctly, though it&#x27;s\n  not implemented very efficiently. [bug=1520530]\n\n* Fixed a Python 3 ByteWarning when a URL was passed in as though it\n  were markup. Thanks to James Salter for a patch and\n  test. [bug=1533762]\n\n* We don&#x27;t run the check for a filename passed in as markup if the\n  &#x27;filename&#x27; contains a less-than character; the less-than character\n  indicates it&#x27;s most likely a very small document. [bug=1577864]\n   ```\n   \n  \n  \n   ### 4.4.1\n   ```\n   * Fixed a bug that deranged the tree when part of it was\n  removed. Thanks to Eric Weiser for the patch and John Wiseman for a\n  test. [bug=1481520]\n\n* Fixed a parse bug with the html5lib tree-builder. Thanks to Roel\n  Kramer for the patch. [bug=1483781]\n\n* Improved the implementation of CSS selector grouping. Thanks to\n  Orangain for the patch. [bug=1484543]\n\n* Fixed the test_detect_utf8 test so that it works when chardet is\n  installed. [bug=1471359]\n\n* Corrected the output of Declaration objects. [bug=1477847]\n   ```\n   \n  \n  \n   ### 4.4.0\n   ```\n   Especially important changes:\n\n* Added a warning when you instantiate a BeautifulSoup object without\n  explicitly naming a parser. [bug=1398866]\n\n* __repr__ now returns an ASCII bytestring in Python 2, and a Unicode\n  string in Python 3, instead of a UTF8-encoded bytestring in both\n  versions. In Python 3, __str__ now returns a Unicode string instead\n  of a bytestring. [bug=1420131]\n\n* The `text` argument to the find_* methods is now called `string`,\n  which is more accurate. `text` still works, but `string` is the\n  argument described in the documentation. `text` may eventually\n  change its meaning, but not for a very long time. [bug=1366856]\n\n* Changed the way soup objects work under copy.copy(). Copying a\n  NavigableString or a Tag will give you a new NavigableString that&#x27;s\n  equal to the old one but not connected to the parse tree. Patch by\n  Martijn Peters. [bug=1307490]\n\n* Started using a standard MIT license. [bug=1294662]\n\n* Added a Chinese translation of the documentation by Delong .w.\n\nNew features:\n\n* Introduced the select_one() method, which uses a CSS selector but\n  only returns the first match, instead of a list of\n  matches. [bug=1349367]\n\n* You can now create a Tag object without specifying a\n  TreeBuilder. Patch by Martijn Pieters. [bug=1307471]\n\n* You can now create a NavigableString or a subclass just by invoking\n  the constructor. [bug=1294315]\n\n* Added an `exclude_encodings` argument to UnicodeDammit and to the\n  Beautiful Soup constructor, which lets you prohibit the detection of\n  an encoding that you know is wrong. [bug=1469408]\n\n* The select() method now supports selector grouping. Patch by\n  Francisco Canas [bug=1191917]\n\nBug fixes:\n\n* Fixed yet another problem that caused the html5lib tree builder to\n  create a disconnected parse tree. [bug=1237763]\n\n* Force object_was_parsed() to keep the tree intact even when an element\n  from later in the document is moved into place. [bug=1430633]\n\n* Fixed yet another bug that caused a disconnected tree when html5lib\n  copied an element from one part of the tree to another. [bug=1270611]\n\n* Fixed a bug where Element.extract() could create an infinite loop in\n  the remaining tree.\n\n* The select() method can now find tags whose names contain\n  dashes. Patch by Francisco Canas. [bug=1276211]\n\n* The select() method can now find tags with attributes whose names\n  contain dashes. Patch by Marek Kapolka. [bug=1304007]\n\n* Improved the lxml tree builder&#x27;s handling of processing\n  instructions. [bug=1294645]\n\n* Restored the helpful syntax error that happens when you try to\n  import the Python 2 edition of Beautiful Soup under Python\n  3. [bug=1213387]\n\n* In Python 3.4 and above, set the new convert_charrefs argument to\n  the html.parser constructor to avoid a warning and future\n  failures. Patch by Stefano Revera. [bug=1375721]\n\n* The warning when you pass in a filename or URL as markup will now be\n  displayed correctly even if the filename or URL is a Unicode\n  string. [bug=1268888]\n\n* If the initial &lt;html&gt; tag contains a CDATA list attribute such as\n  &#x27;class&#x27;, the html5lib tree builder will now turn its value into a\n  list, as it would with any other tag. [bug=1296481]\n\n* Fixed an import error in Python 3.5 caused by the removal of the\n  HTMLParseError class. [bug=1420063]\n\n* Improved docstring for encode_contents() and\n  decode_contents(). [bug=1441543]\n\n* Fixed a crash in Unicode, Dammit&#x27;s encoding detector when the name\n  of the encoding itself contained invalid bytes. [bug=1360913]\n\n* Improved the exception raised when you call .unwrap() or\n  .replace_with() on an element that&#x27;s not attached to a tree.\n\n* Raise a NotImplementedError whenever an unsupported CSS pseudoclass\n  is used in select(). Previously some cases did not result in a\n  NotImplementedError.\n\n* It&#x27;s now possible to pickle a BeautifulSoup object no matter which\n  tree builder was used to create it. However, the only tree builder\n  that survives the pickling process is the HTMLParserTreeBuilder\n  (&#x27;html.parser&#x27;). If you unpickle a BeautifulSoup object created with\n  some other tree builder, soup.builder will be None. [bug=1231545]\n   ```\n   \n  \n  \n   ### 4.3.2\n   ```\n   * Fixed a bug in which short Unicode input was improperly encoded to\n  ASCII when checking whether or not it was the name of a file on\n  disk. [bug=1227016]\n\n* Fixed a crash when a short input contains data not valid in\n  filenames. [bug=1232604]\n\n* Fixed a bug that caused Unicode data put into UnicodeDammit to\n  return None instead of the original data. [bug=1214983]\n\n* Combined two tests to stop a spurious test failure when tests are\n  run by nosetests. [bug=1212445]\n   ```\n   \n  \n  \n   ### 4.3.1\n   ```\n   * Fixed yet another problem with the html5lib tree builder, caused by\n  html5lib&#x27;s tendency to rearrange the tree during\n  parsing. [bug=1189267]\n\n* Fixed a bug that caused the optimized version of find_all() to\n  return nothing. [bug=1212655]\n   ```\n   \n  \n  \n   ### 4.3.0\n   ```\n   * Instead of converting incoming data to Unicode and feeding it to the\n  lxml tree builder in chunks, Beautiful Soup now makes successive\n  guesses at the encoding of the incoming data, and tells lxml to\n  parse the data as that encoding. Giving lxml more control over the\n  parsing process improves performance and avoids a number of bugs and\n  issues with the lxml parser which had previously required elaborate\n  workarounds:\n\n  - An issue in which lxml refuses to parse Unicode strings on some\n    systems. [bug=1180527]\n\n  - A returning bug that truncated documents longer than a (very\n    small) size. [bug=963880]\n\n  - A returning bug in which extra spaces were added to a document if\n    the document defined a charset other than UTF-8. [bug=972466]\n\n  This required a major overhaul of the tree builder architecture. If\n  you wrote your own tree builder and didn&#x27;t tell me, you&#x27;ll need to\n  modify your prepare_markup() method.\n\n* The UnicodeDammit code that makes guesses at encodings has been\n  split into its own class, EncodingDetector. A lot of apparently\n  redundant code has been removed from Unicode, Dammit, and some\n  undocumented features have also been removed.\n\n* Beautiful Soup will issue a warning if instead of markup you pass it\n  a URL or the name of a file on disk (a common beginner&#x27;s mistake).\n\n* A number of optimizations improve the performance of the lxml tree\n  builder by about 33%, the html.parser tree builder by about 20%, and\n  the html5lib tree builder by about 15%.\n\n* All find_all calls should now return a ResultSet object. Patch by\n  Aaron DeVore. [bug=1194034]\n   ```\n   \n  \n  \n   ### 4.2.1\n   ```\n   * The default XML formatter will now replace ampersands even if they\n  appear to be part of entities. That is, &quot;&amp;lt;&quot; will become\n  &quot;&amp;amp;lt;&quot;. The old code was left over from Beautiful Soup 3, which\n  didn&#x27;t always turn entities into Unicode characters.\n\n  If you really want the old behavior (maybe because you add new\n  strings to the tree, those strings include entities, and you want\n  the formatter to leave them alone on output), it can be found in\n  EntitySubstitution.substitute_xml_containing_entities(). [bug=1182183]\n\n* Gave new_string() the ability to create subclasses of\n  NavigableString. [bug=1181986]\n\n* Fixed another bug by which the html5lib tree builder could create a\n  disconnected tree. [bug=1182089]\n\n* The .previous_element of a BeautifulSoup object is now always None,\n  not the last element to be parsed. [bug=1182089]\n\n* Fixed test failures when lxml is not installed. [bug=1181589]\n\n* html5lib now supports Python 3. Fixed some Python 2-specific\n  code in the html5lib test suite. [bug=1181624]\n\n* The html.parser treebuilder can now handle numeric attributes in\n  text when the hexidecimal name of the attribute starts with a\n  capital X. Patch by Tim Shirley. [bug=1186242]\n   ```\n   \n  \n  \n   ### 4.2.0\n   ```\n   * The Tag.select() method now supports a much wider variety of CSS\n  selectors.\n\n - Added support for the adjacent sibling combinator (+) and the\n   general sibling combinator (~). Tests by &quot;liquider&quot;. [bug=1082144]\n\n - The combinators (&gt;, +, and ~) can now combine with any supported\n   selector, not just one that selects based on tag name.\n\n - Added limited support for the &quot;nth-of-type&quot; pseudo-class. Code\n   by Sven Slootweg. [bug=1109952]\n\n* The BeautifulSoup class is now aliased to &quot;_s&quot; and &quot;_soup&quot;, making\n  it quicker to type the import statement in an interactive session:\n\n  from bs4 import _s\n   or\n  from bs4 import _soup\n\n  The alias may change in the future, so don&#x27;t use this in code you&#x27;re\n  going to run more than once.\n\n* Added the &#x27;diagnose&#x27; submodule, which includes several useful\n  functions for reporting problems and doing tech support.\n\n  - diagnose(data) tries the given markup on every installed parser,\n    reporting exceptions and displaying successes. If a parser is not\n    installed, diagnose() mentions this fact.\n\n  - lxml_trace(data, html=True) runs the given markup through lxml&#x27;s\n    XML parser or HTML parser, and prints out the parser events as\n    they happen. This helps you quickly determine whether a given\n    problem occurs in lxml code or Beautiful Soup code.\n\n  - htmlparser_trace(data) is the same thing, but for Python&#x27;s\n    built-in HTMLParser class.\n\n* In an HTML document, the contents of a &lt;script&gt; or &lt;style&gt; tag will\n  no longer undergo entity substitution by default. XML documents work\n  the same way they did before. [bug=1085953]\n\n* Methods like get_text() and properties like .strings now only give\n  you strings that are visible in the document--no comments or\n  processing commands. [bug=1050164]\n\n* The prettify() method now leaves the contents of &lt;pre&gt; tags\n  alone. [bug=1095654]\n\n* Fix a bug in the html5lib treebuilder which sometimes created\n  disconnected trees. [bug=1039527]\n\n* Fix a bug in the lxml treebuilder which crashed when a tag included\n  an attribute from the predefined &quot;xml:&quot; namespace. [bug=1065617]\n\n* Fix a bug by which keyword arguments to find_parent() were not\n  being passed on. [bug=1126734]\n\n* Stop a crash when unwisely messing with a tag that&#x27;s been\n  decomposed. [bug=1097699]\n\n* Now that lxml&#x27;s segfault on invalid doctype has been fixed, fixed a\n  corresponding problem on the Beautiful Soup end that was previously\n  invisible. [bug=984936]\n\n* Fixed an exception when an overspecified CSS selector didn&#x27;t match\n  anything. Code by Stefaan Lippens. [bug=1168167]\n   ```\n   \n  \n  \n   ### 4.1.3\n   ```\n   * Skipped a test under Python 2.6 and Python 3.1 to avoid a spurious\n  test failure caused by the lousy HTMLParser in those\n  versions. [bug=1038503]\n\n* Raise a more specific error (FeatureNotFound) when a requested\n  parser or parser feature is not installed. Raise NotImplementedError\n  instead of ValueError when the user calls insert_before() or\n  insert_after() on the BeautifulSoup object itself. Patch by Aaron\n  Devore. [bug=1038301]\n   ```\n   \n  \n  \n   ### 4.1.2\n   ```\n   * As per PEP-8, allow searching by CSS class using the &#x27;class_&#x27;\n  keyword argument. [bug=1037624]\n\n* Display namespace prefixes for namespaced attribute names, instead of\n  the fully-qualified names given by the lxml parser. [bug=1037597]\n\n* Fixed a crash on encoding when an attribute name contained\n  non-ASCII characters.\n\n* When sniffing encodings, if the cchardet library is installed,\n  Beautiful Soup uses it instead of chardet. cchardet is much\n  faster. [bug=1020748]\n\n* Use logging.warning() instead of warning.warn() to notify the user\n  that characters were replaced with REPLACEMENT\n  CHARACTER. [bug=1013862]\n   ```\n   \n  \n  \n   ### 4.1.1\n   ```\n   * Fixed an html5lib tree builder crash which happened when html5lib\n  moved a tag with a multivalued attribute from one part of the tree\n  to another. [bug=1019603]\n\n* Correctly display closing tags with an XML namespace declared. Patch\n  by Andreas Kostyrka. [bug=1019635]\n\n* Fixed a typo that made parsing significantly slower than it should\n  have been, and also waited too long to close tags with XML\n  namespaces. [bug=1020268]\n\n* get_text() now returns an empty Unicode string if there is no text,\n  rather than an empty bytestring. [bug=1020387]\n   ```\n   \n  \n  \n   ### 4.1.0\n   ```\n   * Added experimental support for fixing Windows-1252 characters\n  embedded in UTF-8 documents. (UnicodeDammit.detwingle())\n\n* Fixed the handling of &amp;quot; with the built-in parser. [bug=993871]\n\n* Comments, processing instructions, document type declarations, and\n  markup declarations are now treated as preformatted strings, the way\n  CData blocks are. [bug=1001025]\n\n* Fixed a bug with the lxml treebuilder that prevented the user from\n  adding attributes to a tag that didn&#x27;t originally have\n  attributes. [bug=1002378] Thanks to Oliver Beattie for the patch.\n\n* Fixed some edge-case bugs having to do with inserting an element\n  into a tag it&#x27;s already inside, and replacing one of a tag&#x27;s\n  children with another. [bug=997529]\n\n* Added the ability to search for attribute values specified in UTF-8. [bug=1003974]\n\n  This caused a major refactoring of the search code. All the tests\n  pass, but it&#x27;s possible that some searches will behave differently.\n   ```\n   \n  \n  \n   ### 4.0.5\n   ```\n   * Added a new method, wrap(), which wraps an element in a tag.\n\n* Renamed replace_with_children() to unwrap(), which is easier to\n  understand and also the jQuery name of the function.\n\n* Made encoding substitution in &lt;meta&gt; tags completely transparent (no\n  more %SOUP-ENCODING%).\n\n* Fixed a bug in decoding data that contained a byte-order mark, such\n  as data encoded in UTF-16LE. [bug=988980]\n\n* Fixed a bug that made the HTMLParser treebuilder generate XML\n  definitions ending with two question marks instead of\n  one. [bug=984258]\n\n* Upon document generation, CData objects are no longer run through\n  the formatter. [bug=988905]\n\n* The test suite now passes when lxml is not installed, whether or not\n  html5lib is installed. [bug=987004]\n\n* Print a warning on HTMLParseErrors to let people know they should\n  install a better parser library.\n   ```\n   \n  \n  \n   ### 4.0.4\n   ```\n   * Fixed a bug that sometimes created disconnected trees.\n\n* Fixed a bug with the string setter that moved a string around the\n  tree instead of copying it. [bug=983050]\n\n* Attribute values are now run through the provided output formatter.\n  Previously they were always run through the &#x27;minimal&#x27; formatter. In\n  the future I may make it possible to specify different formatters\n  for attribute values and strings, but for now, consistent behavior\n  is better than inconsistent behavior. [bug=980237]\n\n* Added the missing renderContents method from Beautiful Soup 3. Also\n  added an encode_contents() method to go along with decode_contents().\n\n* Give a more useful error when the user tries to run the Python 2\n  version of BS under Python 3.\n\n* UnicodeDammit can now convert Microsoft smart quotes to ASCII with\n  UnicodeDammit(markup, smart_quotes_to=&quot;ascii&quot;).\n   ```\n   \n  \n  \n   ### 4.0.3\n   ```\n   * Fixed a typo that caused some versions of Python 3 to convert the\n  Beautiful Soup codebase incorrectly.\n\n* Got rid of the 4.0.2 workaround for HTML documents--it was\n  unnecessary and the workaround was triggering a (possibly different,\n  but related) bug in lxml. [bug=972466]\n   ```\n   \n  \n  \n   ### 4.0.2\n   ```\n   * Worked around a possible bug in lxml that prevents non-tiny XML\n  documents from being parsed. [bug=963880, bug=963936]\n\n* Fixed a bug where specifying `text` while also searching for a tag\n  only worked if `text` wanted an exact string match. [bug=955942]\n   ```\n   \n  \n  \n   ### 4.0.1\n   ```\n   * This is the first official release of Beautiful Soup 4. There is no\n   ```\n   \n  \n  \n   ### 4.0.0\n   ```\n   might treat &quot;4.0.0&quot; as being an earlier version than &quot;4.0.0b10&quot;.\n\n* Brought BS up to date with the latest release of soupselect, adding\n  CSS selector support for direct descendant matches and multiple CSS\n  class matches.\n   ```\n   \n  \n  \n   ### 4.0.0b10\n   ```\n   * Added support for simple CSS selectors, taken from the soupselect project.\n\n* Fixed a crash when using html5lib. [bug=943246]\n\n* In HTML5-style &lt;meta charset=&quot;foo&quot;&gt; tags, the value of the &quot;charset&quot;\n  attribute is now replaced with the appropriate encoding on\n  output. [bug=942714]\n\n* Fixed a bug that caused calling a tag to sometimes call find_all()\n  with the wrong arguments. [bug=944426]\n\n* For backwards compatibility, brought back the BeautifulStoneSoup\n  class as a deprecated wrapper around BeautifulSoup.\n   ```\n   \n  \n  \n   ### 4.0.0b9\n   ```\n   * Fixed the string representation of DOCTYPEs that have both a public\n  ID and a system ID.\n\n* Fixed the generated XML declaration.\n\n* Renamed Tag.nsprefix to Tag.prefix, for consistency with\n  NamespacedAttribute.\n\n* Fixed a test failure that occurred on Python 3.x when chardet was\n  installed.\n\n* Made prettify() return Unicode by default, so it will look nice on\n  Python 3 when passed into print().\n   ```\n   \n  \n  \n   ### 4.0.0b8\n   ```\n   * All tree builders now preserve namespace information in the\n  documents they parse. If you use the html5lib parser or lxml&#x27;s XML\n  parser, you can access the namespace URL for a tag as tag.namespace.\n\n  However, there is no special support for namespace-oriented\n  searching or tree manipulation. When you search the tree, you need\n  to use namespace prefixes exactly as they&#x27;re used in the original\n  document.\n\n* The string representation of a DOCTYPE always ends in a newline.\n\n* Issue a warning if the user tries to use a SoupStrainer in\n  conjunction with the html5lib tree builder, which doesn&#x27;t support\n  them.\n   ```\n   \n  \n  \n   ### 4.0.0b7\n   ```\n   * Upon decoding to string, any characters that can&#x27;t be represented in\n  your chosen encoding will be converted into numeric XML entity\n  references.\n\n* Issue a warning if characters were replaced with REPLACEMENT\n  CHARACTER during Unicode conversion.\n\n* Restored compatibility with Python 2.6.\n\n* The install process no longer installs docs or auxiliary text files.\n\n* It&#x27;s now possible to deepcopy a BeautifulSoup object created with\n  Python&#x27;s built-in HTML parser.\n\n* About 100 unit tests that &quot;test&quot; the behavior of various parsers on\n  invalid markup have been removed. Legitimate changes to those\n  parsers caused these tests to fail, indicating that perhaps\n  Beautiful Soup should not test the behavior of foreign\n  libraries.\n\n  The problematic unit tests have been reformulated as informational\n  comparisons generated by the script\n  scripts/demonstrate_parser_differences.py.\n\n  This makes Beautiful Soup compatible with html5lib version 0.95 and\n  future versions of HTMLParser.\n   ```\n   \n  \n  \n   ### 4.0.0b6\n   ```\n   * Multi-valued attributes like &quot;class&quot; always have a list of values,\n  even if there&#x27;s only one value in the list.\n\n* Added a number of multi-valued attributes defined in HTML5.\n\n* Stopped generating a space before the slash that closes an\n  empty-element tag. This may come back if I add a special XHTML mode\n  (http://www.w3.org/TR/xhtml1/#C_2), but right now it&#x27;s pretty\n  useless.\n\n* Passing text along with tag-specific arguments to a find* method:\n\n   find(&quot;a&quot;, text=&quot;Click here&quot;)\n\n  will find tags that contain the given text as their\n  .string. Previously, the tag-specific arguments were ignored and\n  only strings were searched.\n\n* Fixed a bug that caused the html5lib tree builder to build a\n  partially disconnected tree. Generally cleaned up the html5lib tree\n  builder.\n\n* If you restrict a multi-valued attribute like &quot;class&quot; to a string\n  that contains spaces, Beautiful Soup will only consider it a match\n  if the values correspond to that specific string.\n   ```\n   \n  \n  \n   ### 4.0.0b5\n   ```\n   * Rationalized Beautiful Soup&#x27;s treatment of CSS class. A tag\n  belonging to multiple CSS classes is treated as having a list of\n  values for the &#x27;class&#x27; attribute. Searching for a CSS class will\n  match *any* of the CSS classes.\n\n  This actually affects all attributes that the HTML standard defines\n  as taking multiple values (class, rel, rev, archive, accept-charset,\n  and headers), but &#x27;class&#x27; is by far the most common. [bug=41034]\n\n* If you pass anything other than a dictionary as the second argument\n  to one of the find* methods, it&#x27;ll assume you want to use that\n  object to search against a tag&#x27;s CSS classes. Previously this only\n  worked if you passed in a string.\n\n* Fixed a bug that caused a crash when you passed a dictionary as an\n  attribute value (possibly because you mistyped &quot;attrs&quot;). [bug=842419]\n\n* Unicode, Dammit now detects the encoding in HTML 5-style &lt;meta&gt; tags\n  like &lt;meta charset=&quot;utf-8&quot; /&gt;. [bug=837268]\n\n* If Unicode, Dammit can&#x27;t figure out a consistent encoding for a\n  page, it will try each of its guesses again, with errors=&quot;replace&quot;\n  instead of errors=&quot;strict&quot;. This may mean that some data gets\n  replaced with REPLACEMENT CHARACTER, but at least most of it will\n  get turned into Unicode. [bug=754903]\n\n* Patched over a bug in html5lib (?) that was crashing Beautiful Soup\n  on certain kinds of markup. [bug=838800]\n\n* Fixed a bug that wrecked the tree if you replaced an element with an\n  empty string. [bug=728697]\n\n* Improved Unicode, Dammit&#x27;s behavior when you give it Unicode to\n  begin with.\n   ```\n   \n  \n  \n   ### 4.0.0b4\n   ```\n   * Added BeautifulSoup.new_string() to go along with BeautifulSoup.new_tag()\n\n* BeautifulSoup.new_tag() will follow the rules of whatever\n  tree-builder was used to create the original BeautifulSoup object. A\n  new &lt;p&gt; tag will look like &quot;&lt;p /&gt;&quot; if the soup object was created to\n  parse XML, but it will look like &quot;&lt;p&gt;&lt;/p&gt;&quot; if the soup object was\n  created to parse HTML.\n\n* We pass in strict=False to html.parser on Python 3, greatly\n  improving html.parser&#x27;s ability to handle bad HTML.\n\n* We also monkeypatch a serious bug in html.parser that made\n  strict=False disastrous on Python 3.2.2.\n\n* Replaced the &quot;substitute_html_entities&quot; argument with the\n  more general &quot;formatter&quot; argument.\n\n* Bare ampersands and angle brackets are always converted to XML\n  entities unless the user prevents it.\n\n* Added PageElement.insert_before() and PageElement.insert_after(),\n  which let you put an element into the parse tree with respect to\n  some other element.\n\n* Raise an exception when the user tries to do something nonsensical\n  like insert a tag into itself.\n   ```\n   \n  \n  \n   ### 4.0.0b3\n   ```\n   Beautiful Soup 4 is a nearly-complete rewrite that removes Beautiful\nSoup&#x27;s custom HTML parser in favor of a system that lets you write a\nlittle glue code and plug in any HTML or XML parser you want.\n\nBeautiful Soup 4.0 comes with glue code for four parsers:\n\n * Python&#x27;s standard HTMLParser (html.parser in Python 3)\n * lxml&#x27;s HTML and XML parsers\n * html5lib&#x27;s HTML parser\n\nHTMLParser is the default, but I recommend you install lxml if you\ncan.\n\nFor complete documentation, see the Sphinx documentation in\nbs4/doc/source/. What follows is a summary of the changes from\nBeautiful Soup 3.\n\n=== The module name has changed ===\n\nPreviously you imported the BeautifulSoup class from a module also\ncalled BeautifulSoup. To save keystrokes and make it clear which\nversion of the API is in use, the module is now called &#x27;bs4&#x27;:\n\n    &gt;&gt;&gt; from bs4 import BeautifulSoup\n\n=== It works with Python 3 ===\n\nBeautiful Soup 3.1.0 worked with Python 3, but the parser it used was\nso bad that it barely worked at all. Beautiful Soup 4 works with\nPython 3, and since its parser is pluggable, you don&#x27;t sacrifice\nquality.\n\nSpecial thanks to Thomas Kluyver and Ezio Melotti for getting Python 3\nsupport to the finish line. Ezio Melotti is also to thank for greatly\nimproving the HTML parser that comes with Python 3.2.\n\n=== CDATA sections are normal text, if they&#x27;re understood at all. ===\n\nCurrently, the lxml and html5lib HTML parsers ignore CDATA sections in\nmarkup:\n\n &lt;p&gt;&lt;![CDATA[foo]]&gt;&lt;/p&gt; =&gt; &lt;p&gt;&lt;/p&gt;\n\nA future version of html5lib will turn CDATA sections into text nodes,\nbut only within tags like &lt;svg&gt; and &lt;math&gt;:\n\n &lt;svg&gt;&lt;![CDATA[foo]]&gt;&lt;/svg&gt; =&gt; &lt;p&gt;foo&lt;/p&gt;\n\nThe default XML parser (which uses lxml behind the scenes) turns CDATA\nsections into ordinary text elements:\n\n &lt;p&gt;&lt;![CDATA[foo]]&gt;&lt;/p&gt; =&gt; &lt;p&gt;foo&lt;/p&gt;\n\nIn theory it&#x27;s possible to preserve the CDATA sections when using the\nXML parser, but I don&#x27;t see how to get it to work in practice.\n\n=== Miscellaneous other stuff ===\n\nIf the BeautifulSoup instance has .is_xml set to True, an appropriate\nXML declaration will be emitted when the tree is transformed into a\nstring:\n\n    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;&gt;\n    &lt;markup&gt;\n     ...\n    &lt;/markup&gt;\n\nThe [&#x27;lxml&#x27;, &#x27;xml&#x27;] tree builder sets .is_xml to True; the other tree\nbuilders set it to False. If you want to parse XHTML with an HTML\nparser, you can set it manually.\n   ```\n   \n  \n  \n   ### 3.2\n   ```\n   to make it obvious which one you should use.\n   ```\n   \n  \n  \n  \n  \n   ### 3.1.0\n   ```\n   A hybrid version that supports 2.4 and can be automatically converted\nto run under Python 3.0. There are three backwards-incompatible\nchanges you should be aware of, but no new features or deliberate\nbehavior changes.\n\n1. str() may no longer do what you want. This is because the meaning\nof str() inverts between Python 2 and 3; in Python 2 it gives you a\nbyte string, in Python 3 it gives you a Unicode string.\n\nThe effect of this is that you can&#x27;t pass an encoding to .__str__\nanymore. Use encode() to get a string and decode() to get Unicode, and\nyou&#x27;ll be ready (well, readier) for Python 3.\n\n2. Beautiful Soup is now based on HTMLParser rather than SGMLParser,\nwhich is gone in Python 3. There&#x27;s some bad HTML that SGMLParser\nhandled but HTMLParser doesn&#x27;t, usually to do with attribute values\nthat aren&#x27;t closed or have brackets inside them:\n\n  &lt;a href=&quot;foo&lt;/a&gt;, &lt;/a&gt;&lt;a href=&quot;bar&quot;&gt;baz&lt;/a&gt;\n  &lt;a b=&quot;&lt;a&gt;&quot;&gt;&#x27;, &#x27;&lt;a b=&quot;&amp;lt;a&amp;gt;&quot;&gt;&lt;/a&gt;&lt;a&gt;&quot;&gt;&lt;/a&gt;\n\nA later version of Beautiful Soup will allow you to plug in different\nparsers to make tradeoffs ", "created_at": "2024-07-01T14:04:11Z", "updated_at": "2024-07-15T14:04:14Z", "closed_at": "2024-07-15T14:04:12Z", "merged_at": null, "merge_commit_sha": "f47b5a75b67c2ba1eea6ffa0cc08cce7e6ec9af8", "assignee": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/deanmalmgren/textract/pulls/517/commits", "review_comments_url": "https://api.github.com/repos/deanmalmgren/textract/pulls/517/comments", "review_comment_url": "https://api.github.com/repos/deanmalmgren/textract/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/deanmalmgren/textract/issues/517/comments", "statuses_url": "https://api.github.com/repos/deanmalmgren/textract/statuses/05954035c18bdb751fe61450517c9cc1b720f3d5", "head": {"label": "deanmalmgren:pyup-scheduled-update-2024-07-01", "ref": "pyup-scheduled-update-2024-07-01", "sha": "05954035c18bdb751fe61450517c9cc1b720f3d5", "user": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "repo": {"id": 21476229, "node_id": "MDEwOlJlcG9zaXRvcnkyMTQ3NjIyOQ==", "name": "textract", "full_name": "deanmalmgren/textract", "private": false, "owner": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/deanmalmgren/textract", "description": "extract text from any document. no muss. no fuss.", "fork": false, "url": "https://api.github.com/repos/deanmalmgren/textract", "forks_url": "https://api.github.com/repos/deanmalmgren/textract/forks", "keys_url": "https://api.github.com/repos/deanmalmgren/textract/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/deanmalmgren/textract/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/deanmalmgren/textract/teams", "hooks_url": "https://api.github.com/repos/deanmalmgren/textract/hooks", "issue_events_url": "https://api.github.com/repos/deanmalmgren/textract/issues/events{/number}", "events_url": "https://api.github.com/repos/deanmalmgren/textract/events", "assignees_url": "https://api.github.com/repos/deanmalmgren/textract/assignees{/user}", "branches_url": "https://api.github.com/repos/deanmalmgren/textract/branches{/branch}", "tags_url": "https://api.github.com/repos/deanmalmgren/textract/tags", "blobs_url": "https://api.github.com/repos/deanmalmgren/textract/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/deanmalmgren/textract/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/deanmalmgren/textract/git/refs{/sha}", "trees_url": "https://api.github.com/repos/deanmalmgren/textract/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/deanmalmgren/textract/statuses/{sha}", "languages_url": "https://api.github.com/repos/deanmalmgren/textract/languages", "stargazers_url": "https://api.github.com/repos/deanmalmgren/textract/stargazers", "contributors_url": "https://api.github.com/repos/deanmalmgren/textract/contributors", "subscribers_url": "https://api.github.com/repos/deanmalmgren/textract/subscribers", "subscription_url": "https://api.github.com/repos/deanmalmgren/textract/subscription", "commits_url": "https://api.github.com/repos/deanmalmgren/textract/commits{/sha}", "git_commits_url": "https://api.github.com/repos/deanmalmgren/textract/git/commits{/sha}", "comments_url": "https://api.github.com/repos/deanmalmgren/textract/comments{/number}", "issue_comment_url": "https://api.github.com/repos/deanmalmgren/textract/issues/comments{/number}", "contents_url": "https://api.github.com/repos/deanmalmgren/textract/contents/{+path}", "compare_url": "https://api.github.com/repos/deanmalmgren/textract/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/deanmalmgren/textract/merges", "archive_url": "https://api.github.com/repos/deanmalmgren/textract/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/deanmalmgren/textract/downloads", "issues_url": "https://api.github.com/repos/deanmalmgren/textract/issues{/number}", "pulls_url": "https://api.github.com/repos/deanmalmgren/textract/pulls{/number}", "milestones_url": "https://api.github.com/repos/deanmalmgren/textract/milestones{/number}", "notifications_url": "https://api.github.com/repos/deanmalmgren/textract/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/deanmalmgren/textract/labels{/name}", "releases_url": "https://api.github.com/repos/deanmalmgren/textract/releases{/id}", "deployments_url": "https://api.github.com/repos/deanmalmgren/textract/deployments", "created_at": "2014-07-03T20:36:59Z", "updated_at": "2024-08-23T16:14:10Z", "pushed_at": "2024-08-19T14:04:13Z", "git_url": "git://github.com/deanmalmgren/textract.git", "ssh_url": "git@github.com:deanmalmgren/textract.git", "clone_url": "https://github.com/deanmalmgren/textract.git", "svn_url": "https://github.com/deanmalmgren/textract", "homepage": "http://textract.readthedocs.io", "size": 4531, "stargazers_count": 3854, "watchers_count": 3854, "language": "HTML", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 589, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 138, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["data-mining", "natural-language-processing", "python", "text-mining"], "visibility": "public", "forks": 589, "open_issues": 138, "watchers": 3854, "default_branch": "master"}}, "base": {"label": "deanmalmgren:master", "ref": "master", "sha": "ec3c0c3c982078d22e51cc2753baeaf48cdf2e19", "user": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "repo": {"id": 21476229, "node_id": "MDEwOlJlcG9zaXRvcnkyMTQ3NjIyOQ==", "name": "textract", "full_name": "deanmalmgren/textract", "private": false, "owner": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/deanmalmgren/textract", "description": "extract text from any document. no muss. no fuss.", "fork": false, "url": "https://api.github.com/repos/deanmalmgren/textract", "forks_url": "https://api.github.com/repos/deanmalmgren/textract/forks", "keys_url": "https://api.github.com/repos/deanmalmgren/textract/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/deanmalmgren/textract/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/deanmalmgren/textract/teams", "hooks_url": "https://api.github.com/repos/deanmalmgren/textract/hooks", "issue_events_url": "https://api.github.com/repos/deanmalmgren/textract/issues/events{/number}", "events_url": "https://api.github.com/repos/deanmalmgren/textract/events", "assignees_url": "https://api.github.com/repos/deanmalmgren/textract/assignees{/user}", "branches_url": "https://api.github.com/repos/deanmalmgren/textract/branches{/branch}", "tags_url": "https://api.github.com/repos/deanmalmgren/textract/tags", "blobs_url": "https://api.github.com/repos/deanmalmgren/textract/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/deanmalmgren/textract/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/deanmalmgren/textract/git/refs{/sha}", "trees_url": "https://api.github.com/repos/deanmalmgren/textract/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/deanmalmgren/textract/statuses/{sha}", "languages_url": "https://api.github.com/repos/deanmalmgren/textract/languages", "stargazers_url": "https://api.github.com/repos/deanmalmgren/textract/stargazers", "contributors_url": "https://api.github.com/repos/deanmalmgren/textract/contributors", "subscribers_url": "https://api.github.com/repos/deanmalmgren/textract/subscribers", "subscription_url": "https://api.github.com/repos/deanmalmgren/textract/subscription", "commits_url": "https://api.github.com/repos/deanmalmgren/textract/commits{/sha}", "git_commits_url": "https://api.github.com/repos/deanmalmgren/textract/git/commits{/sha}", "comments_url": "https://api.github.com/repos/deanmalmgren/textract/comments{/number}", "issue_comment_url": "https://api.github.com/repos/deanmalmgren/textract/issues/comments{/number}", "contents_url": "https://api.github.com/repos/deanmalmgren/textract/contents/{+path}", "compare_url": "https://api.github.com/repos/deanmalmgren/textract/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/deanmalmgren/textract/merges", "archive_url": "https://api.github.com/repos/deanmalmgren/textract/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/deanmalmgren/textract/downloads", "issues_url": "https://api.github.com/repos/deanmalmgren/textract/issues{/number}", "pulls_url": "https://api.github.com/repos/deanmalmgren/textract/pulls{/number}", "milestones_url": "https://api.github.com/repos/deanmalmgren/textract/milestones{/number}", "notifications_url": "https://api.github.com/repos/deanmalmgren/textract/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/deanmalmgren/textract/labels{/name}", "releases_url": "https://api.github.com/repos/deanmalmgren/textract/releases{/id}", "deployments_url": "https://api.github.com/repos/deanmalmgren/textract/deployments", "created_at": "2014-07-03T20:36:59Z", "updated_at": "2024-08-23T16:14:10Z", "pushed_at": "2024-08-19T14:04:13Z", "git_url": "git://github.com/deanmalmgren/textract.git", "ssh_url": "git@github.com:deanmalmgren/textract.git", "clone_url": "https://github.com/deanmalmgren/textract.git", "svn_url": "https://github.com/deanmalmgren/textract", "homepage": "http://textract.readthedocs.io", "size": 4531, "stargazers_count": 3854, "watchers_count": 3854, "language": "HTML", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 589, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 138, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["data-mining", "natural-language-processing", "python", "text-mining"], "visibility": "public", "forks": 589, "open_issues": 138, "watchers": 3854, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/deanmalmgren/textract/pulls/517"}, "html": {"href": "https://github.com/deanmalmgren/textract/pull/517"}, "issue": {"href": "https://api.github.com/repos/deanmalmgren/textract/issues/517"}, "comments": {"href": "https://api.github.com/repos/deanmalmgren/textract/issues/517/comments"}, "review_comments": {"href": "https://api.github.com/repos/deanmalmgren/textract/pulls/517/comments"}, "review_comment": {"href": "https://api.github.com/repos/deanmalmgren/textract/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/deanmalmgren/textract/pulls/517/commits"}, "statuses": {"href": "https://api.github.com/repos/deanmalmgren/textract/statuses/05954035c18bdb751fe61450517c9cc1b720f3d5"}}, "author_association": "COLLABORATOR", "auto_merge": null, "active_lock_reason": null, "resolved_issues": []}
{"url": "https://api.github.com/repos/deanmalmgren/textract/pulls/516", "id": 1924329053, "node_id": "PR_kwDOAUezhc5ysu5d", "html_url": "https://github.com/deanmalmgren/textract/pull/516", "diff_url": "https://github.com/deanmalmgren/textract/pull/516.diff", "patch_url": "https://github.com/deanmalmgren/textract/pull/516.patch", "issue_url": "https://api.github.com/repos/deanmalmgren/textract/issues/516", "number": 516, "state": "closed", "locked": false, "title": "Scheduled biweekly dependency update for week 24", "user": {"login": "pyup-bot", "id": 16239342, "node_id": "MDQ6VXNlcjE2MjM5MzQy", "avatar_url": "https://avatars.githubusercontent.com/u/16239342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyup-bot", "html_url": "https://github.com/pyup-bot", "followers_url": "https://api.github.com/users/pyup-bot/followers", "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}", "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions", "organizations_url": "https://api.github.com/users/pyup-bot/orgs", "repos_url": "https://api.github.com/users/pyup-bot/repos", "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/pyup-bot/received_events", "type": "User", "site_admin": false}, "body": "\n\n\n\n\n### Update [argcomplete](https://pypi.org/project/argcomplete) from **1.10.3** to **3.4.0**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 3.4.0\n   ```\n   ===============================\n\n-  No stdin for python calls from bash completion functions (488)\n\n   Prevents usage of stdin by (python) executables that are called\n   during completion generation. This prevents the completion locking up\n   the entire shell when the python script is broken i.e.\u00a0it enters an\n   interactive mode (REPL) instead of generating the completions, as\n   expected.\n\n-  Localize shell variable REPLY to avoid overwriting users\u2019 value\n   (489)\n\n   The variable REPLY is used by default by the ``read`` shell builtin\n   to store the return value, and like all bash/zsh variables, is scoped\n   globally. This change allows this variable to be used for other needs\n   by appropriately scoping its internal use by an argcomplete utility\n   function that uses ``read``.\n   ```\n   \n  \n  \n   ### 3.3.0\n   ```\n   ===============================\n\n-  Preserve compatibility with argparse option tuples of length 4. This\n   update is required to use argcomplete on Python 3.11.9+ or 3.12.3+.\n   ```\n   \n  \n  \n   ### 3.2.3\n   ```\n   ===============================\n\n-  Allow register-python-argcomplete output to be used as lazy-loaded\n   zsh completion module (475)\n\n-  Move debug_stream initialization to helper method to allow fd 9\n   behavior to be overridden in subclasses (471)\n   ```\n   \n  \n  \n   ### 3.2.2\n   ```\n   ===============================\n\nExpand tilde in zsh\n   ```\n   \n  \n  \n   ### 3.2.1\n   ```\n   ===============================\n\n-  Allow explicit zsh global completion activation (467)\n   ```\n   \n  \n  \n   ### 3.2.0\n   ```\n   ===============================\n\n-  Fix and test global completion in zsh (463, 466)\n\n-  Add \u2013yes option to activate-global-python-argcomplete (461)\n\n-  Test suite improvements\n   ```\n   \n  \n  \n   ### 3.1.6\n   ```\n   ===============================\n\n-  Respect user choice in activate-global-python-argcomplete\n   ```\n   \n  \n  \n   ### 3.1.5\n   ```\n   ===============================\n\n-  Escape colon in zsh completions. Fixes 456\n   ```\n   \n  \n  \n   ### 3.1.4\n   ```\n   ===============================\n\n-  Call \\_default as a fallback in zsh global completion\n   ```\n   \n  \n  \n   ### 3.1.3\n   ```\n   ===============================\n\n-  Use homebrew prefix by default\n\n-  zsh: Allow to use external script (453)\n\n-  Add support for Python 3.12 and drop EOL 3.6 and 3.7 (449)\n   ```\n   \n  \n  \n   ### 3.1.2\n   ```\n   ===============================\n\n-  Ensure Python 3.12+ compatibility in check_console_script (448)\n   ```\n   \n  \n  \n   ### 3.1.1\n   ```\n   ===============================\n\n-  Search through asdf shims\n\n-  Use \\` as escape character in PowerShell (434)\n   ```\n   \n  \n  \n   ### 3.1.0\n   ```\n   ===============================\n\n-  setup.py -&gt; pyproject.toml migration start (427)\n\n-  Improve user install logic in activate-global-python-argcomplete\n   (437)\n\n-  Ensure Python 3.7 compatibility in check_console_script (436)\n\n-  ZSH implementation fixes (431, 433)\n\n-  Documentation improvements\n   ```\n   \n  \n  \n   ### 3.0.8\n   ```\n   ===============================\n\n-  Test suite shell wrapper: Accept OSError on exit\n   ```\n   \n  \n  \n   ### 3.0.7\n   ```\n   ===============================\n\n-  Test suite: Use general regex to cut zsh reset ANSI sequences (425)\n   ```\n   \n  \n  \n   ### 3.0.6\n   ```\n   ===============================\n\n-  Allow importlib-metadata 6.x; skip test failures on Python 3.7 (420,\n   424)\n\n-  Note completers can return iterables of strings, not just lists\n   (422)\n\n-  Documentation and test improvements\n   ```\n   \n  \n  \n   ### 3.0.5\n   ```\n   ===============================\n\n-  Call \\_default as fallback in zsh global completion hook\n\n-  Begin support for mapping-emitting completers\n   ```\n   \n  \n  \n   ### 3.0.4\n   ```\n   ===============================\n\n-  activate-global-python-argcomplete: do not overwrite existing dotfile\n   in user directory\n\n-  Add NOTICE file\n\n-  Establish long term name for split_line as\n   argcomplete.lexers.split_line\n   ```\n   \n  \n  \n   ### 3.0.3\n   ```\n   ===============================\n\n-  Re-add split_line to API (419)\n   ```\n   \n  \n  \n   ### 3.0.2\n   ```\n   ===============================\n\nFix zsh default completion issues\n   ```\n   \n  \n  \n   ### 3.0.1\n   ```\n   ===============================\n\n-  Fix zsh autoload issues\n   ```\n   \n  \n  \n   ### 3.0.0\n   ```\n   ===============================\n\n-  Fully support zsh. Argcomplete now supports completion descriptions\n   and global completion in zsh.\n\n-  Clean up top level namespace.\n\n-  Documentation and test improvements.\n   ```\n   \n  \n  \n   ### 2.1.2\n   ```\n   ===============================\n\n-  Test infrastructure improvements\n\n-  Indicate that there is no support commitment for fish and tcsh shells\n   ```\n   \n  \n  \n   ### 2.1.1\n   ```\n   ===============================\n\n-  Documentation and test improvements\n   ```\n   \n  \n  \n   ### 2.1.0\n   ```\n   ===============================\n\n-  Remove scripts for contrib-supported shells from global namespace\n   ```\n   \n  \n  \n   ### 2.0.6\n   ```\n   ===============================\n\n-  setup.py: exclude test.\\* subpackages from find_packages (406)\n\n-  Support PowerShell (405)\n\n-  CI updates\n   ```\n   \n  \n  \n   ### 2.0.5\n   ```\n   ===============================\n\n-  Revert \u201cSupport powershell (392)\u201d\n   ```\n   \n  \n  \n   ### 2.0.4\n   ```\n   ===============================\n   ```\n   \n  \n  \n   ### 2.0.3\n   ```\n   ===============================\n   ```\n   \n  \n  \n   ### 2.0.2\n   ```\n   ===============================\n   ```\n   \n  \n  \n   ### 2.0.1\n   ```\n   ===============================\n\n-  Support powershell (392)\n\n-  Update importlib-metadata dependency to include versions 5.x (389)\n\n-  Test and documentation improvements\n   ```\n   \n  \n  \n   ### 2.0.0\n   ```\n   ===============================\n\n-  Truncate input after cursor. Fixes 351 (352)\n\n-  Support of path completion in fish 327 (359)\n\n-  Drop support for Python 2.7 and 3.5 (361)\n\n-  Add support for Python 3.10 (356)\n\n-  Test, documentation, and release infrastructure improvements\n   ```\n   \n  \n  \n   ### 1.12.3\n   ```\n   ================================\n\n-  Update importlib-metadata version pin (345)\n\n-  Display script debug output in tcsh (342)\n\n-  Fish support improvements (338, 339)\n\n-  Print ``warn()`` message from beginning of line (335)\n\n-  Test infrastructure improvements\n   ```\n   \n  \n  \n   ### 1.12.2\n   ```\n   ================================\n\n-  Update importlib-metadata dependency pin (332)\n\n-  Add change log project URL (312)\n\n-  Replace Travis CI with GitHub Actions (323)\n   ```\n   \n  \n  \n   ### 1.12.1\n   ```\n   ================================\n\n-  Update importlib-metadata dependency version range\n\n-  Bash nounset mode fixes (313)\n   ```\n   \n  \n  \n   ### 1.11.1\n   ```\n   ================================\n\n-  Add -o bashdefault to register-python-argcomplete\u2019s output command\n   (284)\n   ```\n   \n  \n  \n   ### 1.11.0\n   ```\n   ================================\n\n-  Use shell builtins where possible (280)\n\n-  Switch from pkg_resources to importlib (283)\n\n-  Remove .sh extension by bash-completion convention (281)\n\n-  Catch exceptions in \\_check_module (269)\n\n-  Documentation and test improvements\n   ```\n   \n  \n  \n   ### 1.10.3\n   ```\n   ================================\n\n-  Do not suggest options after \u2013 (end-of-options delimiter)\n   ```\n   \n  \n  \n   ### 1.10.2\n   ```\n   ================================\n\n-  Include all test directory contents in source distribution\n   ```\n   \n  \n  \n   ### 1.10.1\n   ```\n   ================================\n\n-  Trigger completers on \u2013optional=PARTIAL_VALUE\n\n-  Complete console scripts installed from wheels (241)\n   ```\n   \n  \n  \n   ### 1.10.0\n   ```\n   ================================\n\n-  Fish support 68 (260), thanks to volkov\n   ```\n   \n  \n  \n   ### 1.9.5\n   ```\n   ===============================\n\n-  check_module: Don\u2019t crash, exit with error instead (261)\n\n-  Register completion for multiple commands (246)\n   ```\n   \n  \n  \n   ### 1.9.4\n   ```\n   ===============================\n\n-  Use the correct interpreter when checking wrappers (226)\n\n-  Provide shellcode as a module function (237)\n   ```\n   \n  \n  \n   ### 1.9.3\n   ```\n   ===============================\n\n-  Fix handling of COMP\\_POINT (236)\n\n-  Fix crash when writing unicode to debug\\_stream in Python 2 (230)\n   ```\n   \n  \n  \n   ### 1.9.2\n   ```\n   ===============================\n\n-  Fix release\n   ```\n   \n  \n  \n   ### 1.9.1\n   ```\n   ===============================\n\n-  Fix release\n   ```\n   \n  \n  \n   ### 1.9.0\n   ```\n   ===============================\n\n-  Add SuppressCompleter to skip completion for specific arguments while\n   allowing help text (224)\n\n-  Redirect all output to debug stream in debug mode (206)\n\n-  Complete python -m module (204)\n   ```\n   \n  \n  \n   ### 1.8.2\n   ```\n   ===============================\n\n-  Fix bug introduced in v0.7.1 where completers would not receive the\n   parser keyword argument.\n\n-  Documentation improvements.\n   ```\n   \n  \n  \n   ### 1.8.1\n   ```\n   ===============================\n\n-  Fix completion after tokens with wordbreak chars (197)\n   ```\n   \n  \n  \n   ### 1.8.0\n   ```\n   ===============================\n\nThis release contains work by evanunderscore with numerous improvements\nto the handling of special characters in completions.\n\n-  Simplify nospace handling in global completion (195)\n\n-  Specially handle all characters in COMP\\_WORDBREAKS (187)\n\n-  Use setuptools tests-require directive, fixes 186\n\n-  Complete files using the specified interpreter (192)\n\n-  Fix completion for scripts run via python (191)\n\n-  Clarify argument to register-python-argcomplete (190)\n\n-  Fix handling of commas and other special chars (172); handle more\n   special characters (189)\n\n-  Fix handling of special characters in tcsh (188)\n\n-  Update my\\_shlex to Python 3.6 version (184)\n\n-  Fix additional trailing space in exact matches (183)\n\n-  Adjust tests to handle development environments (180)\n\n-  Fix tcsh tests on OSX (177); Update bash on OSX (176); Check output\n   of test setup command (179)\n\n-  Optionally disable duplicated flags (143)\n\n-  Add default\\_completer option to CompletionFinder.\\ **call** (167)\n\n-  Let bash add or suppress trailing space (159)\n   ```\n   \n  \n  \n   ### 1.7.0\n   ```\n   ===============================\n\n-  Restore parser to its original state to allow reuse after completion\n   (150).\n\n-  Expose COMP\\_TYPE environment variable (157). Thanks to Matt Clay\n   (mattclay).\n\n-  Test infrastructure and documentation improvements.\n   ```\n   \n  \n  \n   ### 1.6.0\n   ```\n   ===============================\n\n-  Add support for tcsh (155)\n\n-  Fix handling of unquoted completions containing $ (154)\n\n-  Don&#x27;t insert unnecessary leading quote char in completions (152)\n\n-  Fix parser reuse with positional arguments (149)\n\n-  Tests: Add simple pexpect tests for bash (153); Add test case to\n   verify 20 is fixed (148)\n\n-  Thanks to davvid and evanunderscore for their work on this release.\n   ```\n   \n  \n  \n   ### 1.5.1\n   ```\n   ===============================\n\n-  Packaging fix\n   ```\n   \n  \n  \n   ### 1.5.0\n   ```\n   ===============================\n\n-  Do not suggest options from mutually exclusive groups (145).\n   ```\n   \n  \n  \n   ### 1.4.1\n   ```\n   ==========================\n- activate-global-python-argcomplete runs on Homebrew out of the box\n   ```\n   \n  \n  \n   ### 1.4.0\n   ```\n   ==========================\n- Correctly handle suggestions for positionals with variable-length nargs. Thanks to evanunderscore (132, 133).\n   ```\n   \n  \n  \n   ### 1.3.0\n   ```\n   ==========================\n- Correctly handle suggestions with custom nargs for optionals. Thanks to evanunderscore (131).\n   ```\n   \n  \n  \n   ### 1.2.0\n   ```\n   ==========================\n- Fix propagation of partially parsed subparser namespace into parent parser namespace upon subparser failure due to\n  partial args. This allows completers to access partial parse results for subparser optionals in parsed_args (114).\n- The default completer can now be specified when manually instantiating CompletionFinder. Thanks to avylove (130).\n   ```\n   \n  \n  \n   ### 1.1.1\n   ```\n   ==========================\n- Use FilesCompleter as default completer fallback (120).\n   ```\n   \n  \n  \n   ### 1.1.0\n   ```\n   ==========================\n- Recognize subclasses of argparse._SubParsersAction. Thanks to Stephen Koo (118).\n- Support parsed_args in custom completers with missing args. Thanks to Dan Kilman (124).\n- Non-ASCII support in FilesCompleter.\n- Automatically enable FilesCompleter for argparse.FileType arguments.\n   ```\n   \n  \n  \n   ### 1.0.0\n   ```\n   ==========================\n- Don&#x27;t print args with suppressed help by default; add\n  ``argcomplete.autocomplete(print_suppressed=True)`` to control this\n  behavior (113).\n   ```\n   \n  \n  \n   ### 0.9.0\n   ```\n   ==========================\n- Fix always_complete_options=False support (115).\n   ```\n   \n  \n  \n   ### 0.8.9\n   ```\n   ==========================\n- Correct doc filename in setup.cfg (fixes bdist_rpm failure, Issue 111).\n- Make context managers exception-safe. Thanks to Miko\u0142aj Siedlarek (pull request 110).\n   ```\n   \n  \n  \n   ### 0.8.8\n   ```\n   ==========================\n- Build and upload universal wheel packages in release.\n- Fix issue with non-string choices for arguments. Thanks to neizod (pull request 107).\n- Improve non-ascii argparse argument support on Python 2.7.\n   ```\n   \n  \n  \n   ### 0.8.7\n   ```\n   ==========================\n- register-python-argcomplete: add option to avoid default readline completion. Thanks to drmalex07 (pull request 99).\n   ```\n   \n  \n  \n   ### 0.8.6\n   ```\n   ==========================\n- Expand tilde in script name, allowing argcomplete to work when invoking scripts from one&#x27;s home directory. Thanks to VorpalBlade (Issue 104).\n   ```\n   \n  \n  \n   ### 0.8.5\n   ```\n   ==========================\n- Fix issues related to using argcomplete in a REPL environment.\n- New helper method for custom completion display.\n- Expand test suite; formatting cleanup.\n   ```\n   \n  \n  \n   ### 0.8.4\n   ```\n   ==========================\n- Fix issue related to using argcomplete in a REPL environment. Thanks to wapiflapi (pull request 91).\n   ```\n   \n  \n  \n   ### 0.8.3\n   ```\n   ==========================\n- Fix multiple issues related to using argcomplete in a REPL environment. Thanks to wapiflapi (pull request 90).\n   ```\n   \n  \n  \n   ### 0.8.2\n   ```\n   ==========================\n- Don&#x27;t strip colon prefix in completion results if COMP_WORDBREAKS does not contain a colon. Thanks to berezv (pull request 88).\n   ```\n   \n  \n  \n   ### 0.8.1\n   ```\n   ==========================\n- Use complete --nospace to avoid issues with directory completion.\n   ```\n   \n  \n  \n   ### 0.8.0\n   ```\n   ==========================\n- Refactor main body of code into a class to enable subclassing and overriding of functionality (Issue 78).\n   ```\n   \n  \n  \n   ### 0.7.1\n   ```\n   ==========================\n- New keyword option &quot;argcomplete.autocomplete(validator=...)&quot; to supply a custom validator or bypass default validation. Thanks to thijsdezoete (Issue 77).\n- Document debug options.\n   ```\n   \n  \n  \n   ### 0.7.0\n   ```\n   ==========================\n- New keyword option &quot;argcomplete.autocomplete(exclude=[...])&quot; to suppress options (Issue 74).\n- More speedups to code path for global completion hook negative result.\n   ```\n   \n  \n  \n   ### 0.6.9\n   ```\n   ==========================\n- Fix handling of development mode script wrappers. Thanks to jmlopez-rod and dcosson (Issue 69).\n- Speed up code path for global completion hook negative result by loading pkg_resources on demand.\n   ```\n   \n  \n  \n   ### 0.6.8\n   ```\n   ==========================\n- Begin tracking changes in changelog.\n- Add completion support for PBR installed scripts (PR 71).\n- Detect easy-install shims with shebang lines that contain Py instead of py (Issue 69).\n   ```\n   \n  \n</details>\n\n\n \n\n<details>\n  <summary>Links</summary>\n  \n  - PyPI: https://pypi.org/project/argcomplete\n  - Changelog: https://data.safetycli.com/changelogs/argcomplete/\n  - Repo: https://github.com/kislyuk/argcomplete\n</details>\n\n\n\n\n\n### Update [beautifulsoup4](https://pypi.org/project/beautifulsoup4) from **4.8.2** to **4.12.3**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 4.11.1\n   ```\n   This release was done to ensure that the unit tests are packaged along\nwith the released source. There are no functionality changes in this\nrelease, but there are a few other packaging changes:\n\n* The Japanese and Korean translations of the documentation are included.\n* The changelog is now packaged as CHANGELOG, and the license file is\n  packaged as LICENSE. NEWS.txt and COPYING.txt are still present,\n  but may be removed in the future.\n* TODO.txt is no longer packaged, since a TODO is not relevant for released\n  code.\n   ```\n   \n  \n  \n   ### 4.11.0\n   ```\n   * Ported unit tests to use pytest.\n\n* Added special string classes, RubyParenthesisString and RubyTextString,\n  to make it possible to treat ruby text specially in get_text() calls.\n  [bug=1941980]\n\n* It&#x27;s now possible to customize the way output is indented by\n  providing a value for the &#x27;indent&#x27; argument to the Formatter\n  constructor. The &#x27;indent&#x27; argument works very similarly to the\n  argument of the same name in the Python standard library&#x27;s\n  json.dump() function. [bug=1955497]\n\n* If the charset-normalizer Python module\n  (https://pypi.org/project/charset-normalizer/) is installed, Beautiful\n  Soup will use it to detect the character sets of incoming documents.\n  This is also the module used by newer versions of the Requests library.\n  For the sake of backwards compatibility, chardet and cchardet both take\n  precedence if installed. [bug=1955346]\n\n* Added a workaround for an lxml bug\n  (https://bugs.launchpad.net/lxml/+bug/1948551) that causes\n  problems when parsing a Unicode string beginning with BYTE ORDER MARK.\n  [bug=1947768]\n\n* Issue a warning when an HTML parser is used to parse a document that\n  looks like XML but not XHTML. [bug=1939121]\n\n* Do a better job of keeping track of namespaces as an XML document is\n  parsed, so that CSS selectors that use namespaces will do the right\n  thing more often. [bug=1946243]\n\n* Some time ago, the misleadingly named &quot;text&quot; argument to find-type\n  methods was renamed to the more accurate &quot;string.&quot; But this supposed\n  &quot;renaming&quot; didn&#x27;t make it into important places like the method\n  signatures or the docstrings. That&#x27;s corrected in this\n  version. &quot;text&quot; still works, but will give a DeprecationWarning.\n  [bug=1947038]\n\n* Fixed a crash when pickling a BeautifulSoup object that has no\n  tree builder. [bug=1934003]\n\n* Fixed a crash when overriding multi_valued_attributes and using the\n  html5lib parser. [bug=1948488]\n\n* Standardized the wording of the MarkupResemblesLocatorWarning\n  warnings to omit untrusted input and make the warnings less\n  judgmental about what you ought to be doing. [bug=1955450]\n\n* Removed support for the iconv_codec library, which doesn&#x27;t seem\n  to exist anymore and was never put up on PyPI. (The closest\n  replacement on PyPI, iconv_codecs, is GPL-licensed, so we can&#x27;t use\n  it--it&#x27;s also quite old.)\n   ```\n   \n  \n  \n   ### 4.10.0\n   ```\n   * This is the first release of Beautiful Soup to only support Python\n  3. I dropped Python 2 support to maintain support for newer versions\n  (58 and up) of setuptools. See:\n  https://github.com/pypa/setuptools/issues/2769 [bug=1942919]\n\n* The behavior of methods like .get_text() and .strings now differs\n  depending on the type of tag. The change is visible with HTML tags\n  like &lt;script&gt;, &lt;style&gt;, and &lt;template&gt;. Starting in 4.9.0, methods\n  like get_text() returned no results on such tags, because the\n  contents of those tags are not considered &#x27;text&#x27; within the document\n  as a whole.\n\n  But a user who calls script.get_text() is working from a different\n  definition of &#x27;text&#x27; than a user who calls div.get_text()--otherwise\n  there would be no need to call script.get_text() at all. In 4.10.0,\n  the contents of (e.g.) a &lt;script&gt; tag are considered &#x27;text&#x27; during a\n  get_text() call on the tag itself, but not considered &#x27;text&#x27; during\n  a get_text() call on the tag&#x27;s parent.\n\n  Because of this change, calling get_text() on each child of a tag\n  may now return a different result than calling get_text() on the tag\n  itself. That&#x27;s because different tags now have different\n  understandings of what counts as &#x27;text&#x27;. [bug=1906226] [bug=1868861]\n\n* NavigableString and its subclasses now implement the get_text()\n  method, as well as the properties .strings and\n  .stripped_strings. These methods will either return the string\n  itself, or nothing, so the only reason to use this is when iterating\n  over a list of mixed Tag and NavigableString objects. [bug=1904309]\n\n* The &#x27;html5&#x27; formatter now treats attributes whose values are the\n  empty string as HTML boolean attributes. Previously (and in other\n  formatters), an attribute value must be set as None to be treated as\n  a boolean attribute. In a future release, I plan to also give this\n  behavior to the &#x27;html&#x27; formatter. Patch by Isaac Muse. [bug=1915424]\n\n* The &#x27;replace_with()&#x27; method now takes a variable number of arguments,\n  and can be used to replace a single element with a sequence of elements.\n  Patch by Bill Chandos. [rev=605]\n\n* Corrected output when the namespace prefix associated with a\n  namespaced attribute is the empty string, as opposed to\n  None. [bug=1915583]\n\n* Performance improvement when processing tags that speeds up overall\n  tree construction by 2%. Patch by Morotti. [bug=1899358]\n\n* Corrected the use of special string container classes in cases when a\n  single tag may contain strings with different containers; such as\n  the &lt;template&gt; tag, which may contain both TemplateString objects\n  and Comment objects. [bug=1913406]\n\n* The html.parser tree builder can now handle named entities\n  found in the HTML5 spec in much the same way that the html5lib\n  tree builder does. Note that the lxml HTML tree builder doesn&#x27;t handle\n  named entities this way. [bug=1924908]\n\n* Added a second way to pass specify encodings to UnicodeDammit and\n  EncodingDetector, based on the order of precedence defined in the\n  HTML5 spec, starting at:\n  https://html.spec.whatwg.org/multipage/parsing.html#parsing-with-a-known-character-encoding\n\n  Encodings in &#x27;known_definite_encodings&#x27; are tried first, then\n  byte-order-mark sniffing is run, then encodings in &#x27;user_encodings&#x27;\n  are tried. The old argument, &#x27;override_encodings&#x27;, is now a\n  deprecated alias for &#x27;known_definite_encodings&#x27;.\n\n  This changes the default behavior of the html.parser and lxml tree\n  builders, in a way that may slightly improve encoding\n  detection but will probably have no effect. [bug=1889014]\n\n* Improve the warning issued when a directory name (as opposed to\n  the name of a regular file) is passed as markup into the BeautifulSoup\n  constructor. [bug=1913628]\n   ```\n   \n  \n  \n   ### 4.9.3\n   ```\n   * Implemented a significant performance optimization to the process of\n  searching the parse tree. Patch by Morotti. [bug=1898212]\n   ```\n   \n  \n  \n   ### 4.9.2\n   ```\n   * Fixed a bug that caused too many tags to be popped from the tag\n  stack during tree building, when encountering a closing tag that had\n  no matching opening tag. [bug=1880420]\n\n* Fixed a bug that inconsistently moved elements over when passing\n  a Tag, rather than a list, into Tag.extend(). [bug=1885710]\n\n* Specify the soupsieve dependency in a way that complies with\n  PEP 508. Patch by Mike Nerone. [bug=1893696]\n\n* Change the signatures for BeautifulSoup.insert_before and insert_after\n  (which are not implemented) to match PageElement.insert_before and\n  insert_after, quieting warnings in some IDEs. [bug=1897120]\n   ```\n   \n  \n  \n   ### 4.9.1\n   ```\n   * Added a keyword argument &#x27;on_duplicate_attribute&#x27; to the\n  BeautifulSoupHTMLParser constructor (used by the html.parser tree\n  builder) which lets you customize the handling of markup that\n  contains the same attribute more than once, as in:\n  &lt;a href=&quot;url1&quot; href=&quot;url2&quot;&gt; [bug=1878209]\n\n* Added a distinct subclass, GuessedAtParserWarning, for the warning\n  issued when BeautifulSoup is instantiated without a parser being\n  specified. [bug=1873787]\n\n* Added a distinct subclass, MarkupResemblesLocatorWarning, for the\n  warning issued when BeautifulSoup is instantiated with &#x27;markup&#x27; that\n  actually seems to be a URL or the path to a file on\n  disk. [bug=1873787]\n\n* The new NavigableString subclasses (Stylesheet, Script, and\n  TemplateString) can now be imported directly from the bs4 package.\n\n* If you encode a document with a Python-specific encoding like\n  &#x27;unicode_escape&#x27;, that encoding is no longer mentioned in the final\n  XML or HTML document. Instead, encoding information is omitted or\n  left blank. [bug=1874955]\n\n* Fixed test failures when run against soupselect 2.0. Patch by Tom\u00e1\u0161\n  Chv\u00e1tal. [bug=1872279]\n   ```\n   \n  \n  \n   ### 4.9.0\n   ```\n   * Added PageElement.decomposed, a new property which lets you\n  check whether you&#x27;ve already called decompose() on a Tag or\n  NavigableString.\n\n* Embedded CSS and Javascript is now stored in distinct Stylesheet and\n  Script tags, which are ignored by methods like get_text() since most\n  people don&#x27;t consider this sort of content to be &#x27;text&#x27;. This\n  feature is not supported by the html5lib treebuilder. [bug=1868861]\n\n* Added a Russian translation by &#x27;authoress&#x27; to the repository.\n\n* Fixed an unhandled exception when formatting a Tag that had been\n  decomposed.[bug=1857767]\n\n* Fixed a bug that happened when passing a Unicode filename containing\n  non-ASCII characters as markup into Beautiful Soup, on a system that\n  allows Unicode filenames. [bug=1866717]\n\n* Added a performance optimization to PageElement.extract(). Patch by\n  Arthur Darcet.\n   ```\n   \n  \n  \n   ### 4.8.2\n   ```\n   * Added Python docstrings to all public methods of the most commonly\n  used classes.\n\n* Added a Chinese translation by Deron Wang and a Brazilian Portuguese\n  translation by Cezar Peixeiro to the repository.\n\n* Fixed two deprecation warnings. Patches by Colin\n  Watson and Nicholas Neumann. [bug=1847592] [bug=1855301]\n\n* The html.parser tree builder now correctly handles DOCTYPEs that are\n  not uppercase. [bug=1848401]\n\n* PageElement.select() now returns a ResultSet rather than a regular\n  list, making it consistent with methods like find_all().\n   ```\n   \n  \n  \n   ### 4.8.1\n   ```\n   * When the html.parser or html5lib parsers are in use, Beautiful Soup\n  will, by default, record the position in the original document where\n  each tag was encountered. This includes line number (Tag.sourceline)\n  and position within a line (Tag.sourcepos).  Based on code by Chris\n  Mayo. [bug=1742921]\n\n* When instantiating a BeautifulSoup object, it&#x27;s now possible to\n   provide a dictionary (&#x27;element_classes&#x27;) of the classes you&#x27;d like to be\n   instantiated instead of Tag, NavigableString, etc.\n\n* Fixed the definition of the default XML namespace when using\n   lxml 4.4. Patch by Isaac Muse. [bug=1840141]\n\n* Fixed a crash when pretty-printing tags that were not created\n   during initial parsing. [bug=1838903]\n\n* Copying a Tag preserves information that was originally obtained from\n   the TreeBuilder used to build the original Tag. [bug=1838903]\n\n* Raise an explanatory exception when the underlying parser\n   completely rejects the incoming markup. [bug=1838877]\n\n* Avoid a crash when trying to detect the declared encoding of a\n   Unicode document. [bug=1838877]\n\n* Avoid a crash when unpickling certain parse trees generated\n   using html5lib on Python 3. [bug=1843545]\n   ```\n   \n  \n  \n   ### 4.8.0\n   ```\n   This release focuses on making it easier to customize Beautiful Soup&#x27;s\ninput mechanism (the TreeBuilder) and output mechanism (the Formatter).\n\n* You can customize the TreeBuilder object by passing keyword\n  arguments into the BeautifulSoup constructor. Those keyword\n  arguments will be passed along into the TreeBuilder constructor.\n\n  The main reason to do this right now is to change how which\n  attributes are treated as multi-valued attributes (the way &#x27;class&#x27;\n  is treated by default). You can do this with the\n  &#x27;multi_valued_attributes&#x27; argument. [bug=1832978]\n\n* The role of Formatter objects has been greatly expanded. The Formatter\n  class now controls the following:\n\n  - The function to call to perform entity substitution. (This was\n    previously Formatter&#x27;s only job.)\n  - Which tags should be treated as containing CDATA and have their\n    contents exempt from entity substitution.\n  - The order in which a tag&#x27;s attributes are output. [bug=1812422]\n  - Whether or not to put a &#x27;/&#x27; inside a void element, e.g. &#x27;&lt;br/&gt;&#x27; vs &#x27;&lt;br&gt;&#x27;\n\n  All preexisting code should work as before.\n\n* Added a new method to the API, Tag.smooth(), which consolidates\n  multiple adjacent NavigableString elements. [bug=1697296]\n\n* &amp;apos; (which is valid in XML, XHTML, and HTML 5, but not HTML 4) is always\n  recognized as a named entity and converted to a single quote. [bug=1818721]\n   ```\n   \n  \n  \n   ### 4.7.1\n   ```\n   * Fixed a significant performance problem introduced in 4.7.0. [bug=1810617]\n\n* Fixed an incorrectly raised exception when inserting a tag before or\n  after an identical tag. [bug=1810692]\n\n* Beautiful Soup will no longer try to keep track of namespaces that\n  are not defined with a prefix; this can confuse soupselect. [bug=1810680]\n\n* Tried even harder to avoid the deprecation warning originally fixed in\n   4.6.1. [bug=1778909]\n   ```\n   \n  \n  \n   ### 4.7.0\n   ```\n   * Beautiful Soup&#x27;s CSS Selector implementation has been replaced by a\n  dependency on Isaac Muse&#x27;s SoupSieve project (the soupsieve package\n  on PyPI). The good news is that SoupSieve has a much more robust and\n  complete implementation of CSS selectors, resolving a large number\n  of longstanding issues. The bad news is that from this point onward,\n  SoupSieve must be installed if you want to use the select() method.\n\n  You don&#x27;t have to change anything lf you installed Beautiful Soup\n  through pip (SoupSieve will be automatically installed when you\n  upgrade Beautiful Soup) or if you don&#x27;t use CSS selectors from\n  within Beautiful Soup.\n\n  SoupSieve documentation: https://facelessuser.github.io/soupsieve/\n\n* Added the PageElement.extend() method, which works like list.append().\n   [bug=1514970]\n\n* PageElement.insert_before() and insert_after() now take a variable\n   number of arguments. [bug=1514970]\n\n* Fix a number of problems with the tree builder that caused\n  trees that were superficially okay, but which fell apart when bits\n  were extracted. Patch by Isaac Muse. [bug=1782928,1809910]\n\n* Fixed a problem with the tree builder in which elements that\n  contained no content (such as empty comments and all-whitespace\n  elements) were not being treated as part of the tree. Patch by Isaac\n  Muse. [bug=1798699]\n\n* Fixed a problem with multi-valued attributes where the value\n  contained whitespace. Thanks to Jens Svalgaard for the\n  fix. [bug=1787453]\n\n* Clarified ambiguous license statements in the source code. Beautiful\n  Soup is released under the MIT license, and has been since 4.4.0.\n\n* This file has been renamed from NEWS.txt to CHANGELOG.\n   ```\n   \n  \n  \n   ### 4.6.3\n   ```\n   * Exactly the same as 4.6.2. Re-released to make the README file\n  render properly on PyPI.\n   ```\n   \n  \n  \n   ### 4.6.2\n   ```\n   * Fix an exception when a custom formatter was asked to format a void\n  element. [bug=1784408]\n   ```\n   \n  \n  \n   ### 4.6.1\n   ```\n   * Stop data loss when encountering an empty numeric entity, and\n  possibly in other cases.  Thanks to tos.kamiya for the fix. [bug=1698503]\n\n* Preserve XML namespaces introduced inside an XML document, not just\n   the ones introduced at the top level. [bug=1718787]\n\n* Added a new formatter, &quot;html5&quot;, which represents void elements\n   as &quot;&lt;element&gt;&quot; rather than &quot;&lt;element/&gt;&quot;.  [bug=1716272]\n\n* Fixed a problem where the html.parser tree builder interpreted\n  a string like &quot;&amp;foo &quot; as the character entity &quot;&amp;foo;&quot;  [bug=1728706]\n\n* Correctly handle invalid HTML numeric character entities like &amp;147;\n  which reference code points that are not Unicode code points. Note\n  that this is only fixed when Beautiful Soup is used with the\n  html.parser parser -- html5lib already worked and I couldn&#x27;t fix it\n  with lxml.  [bug=1782933]\n\n* Improved the warning given when no parser is specified. [bug=1780571]\n\n* When markup contains duplicate elements, a select() call that\n  includes multiple match clauses will match all relevant\n  elements. [bug=1770596]\n\n* Fixed code that was causing deprecation warnings in recent Python 3\n  versions. Includes a patch from Ville Skytt\u00e4. [bug=1778909] [bug=1689496]\n\n* Fixed a Windows crash in diagnose() when checking whether a long\n  markup string is a filename. [bug=1737121]\n\n* Stopped HTMLParser from raising an exception in very rare cases of\n  bad markup. [bug=1708831]\n\n* Fixed a bug where find_all() was not working when asked to find a\n  tag with a namespaced name in an XML document that was parsed as\n  HTML. [bug=1723783]\n\n* You can get finer control over formatting by subclassing\n  bs4.element.Formatter and passing a Formatter instance into (e.g.)\n  encode(). [bug=1716272]\n\n* You can pass a dictionary of `attrs` into\n  BeautifulSoup.new_tag. This makes it possible to create a tag with\n  an attribute like &#x27;name&#x27; that would otherwise be masked by another\n  argument of new_tag. [bug=1779276]\n\n* Clarified the deprecation warning when accessing tag.fooTag, to cover\n  the possibility that you might really have been looking for a tag\n  called &#x27;fooTag&#x27;.\n   ```\n   \n  \n  \n   ### 4.6.0\n   ```\n   * Added the `Tag.get_attribute_list` method, which acts like `Tag.get` for\n  getting the value of an attribute, but which always returns a list,\n  whether or not the attribute is a multi-value attribute. [bug=1678589]\n\n* It&#x27;s now possible to use a tag&#x27;s namespace prefix when searching,\n  e.g. soup.find(&#x27;namespace:tag&#x27;) [bug=1655332]\n\n* Improved the handling of empty-element tags like &lt;br&gt; when using the\n  html.parser parser. [bug=1676935]\n\n* HTML parsers treat all HTML4 and HTML5 empty element tags (aka void\n  element tags) correctly. [bug=1656909]\n\n* Namespace prefix is preserved when an XML tag is copied. Thanks\n  to Vikas for a patch and test. [bug=1685172]\n   ```\n   \n  \n  \n   ### 4.5.3\n   ```\n   * Fixed foster parenting when html5lib is the tree builder. Thanks to\n  Geoffrey Sneddon for a patch and test.\n  \n* Fixed yet another problem that caused the html5lib tree builder to\n  create a disconnected parse tree. [bug=1629825]\n   ```\n   \n  \n  \n   ### 4.5.2\n   ```\n   * Apart from the version number, this release is identical to\n  4.5.3. Due to user error, it could not be completely uploaded to\n  PyPI. Use 4.5.3 instead.\n   ```\n   \n  \n  \n   ### 4.5.1\n   ```\n   * Fixed a crash when passing Unicode markup that contained a\n  processing instruction into the lxml HTML parser on Python\n  3. [bug=1608048]\n   ```\n   \n  \n  \n   ### 4.5.0\n   ```\n   * Beautiful Soup is no longer compatible with Python 2.6. This\n  actually happened a few releases ago, but it&#x27;s now official.\n\n* Beautiful Soup will now work with versions of html5lib greater than\n  0.99999999. [bug=1603299]\n\n* If a search against each individual value of a multi-valued\n  attribute fails, the search will be run one final time against the\n  complete attribute value considered as a single string. That is, if\n  a tag has class=&quot;foo bar&quot; and neither &quot;foo&quot; nor &quot;bar&quot; matches, but\n  &quot;foo bar&quot; does, the tag is now considered a match.\n\n  This happened in previous versions, but only when the value being\n  searched for was a string. Now it also works when that value is\n  a regular expression, a list of strings, etc. [bug=1476868]\n\n* Fixed a bug that deranged the tree when a whitespace element was\n  reparented into a tag that contained an identical whitespace\n  element. [bug=1505351]\n\n* Added support for CSS selector values that contain quoted spaces,\n  such as tag[style=&quot;display: foo&quot;]. [bug=1540588]\n\n* Corrected handling of XML processing instructions. [bug=1504393]\n\n* Corrected an encoding error that happened when a BeautifulSoup\n  object was copied. [bug=1554439]\n\n* The contents of &lt;textarea&gt; tags will no longer be modified when the\n  tree is prettified. [bug=1555829]\n\n* When a BeautifulSoup object is pickled but its tree builder cannot\n  be pickled, its .builder attribute is set to None instead of being\n  destroyed. This avoids a performance problem once the object is\n  unpickled. [bug=1523629]\n\n* Specify the file and line number when warning about a\n  BeautifulSoup object being instantiated without a parser being\n  specified. [bug=1574647]\n\n* The `limit` argument to `select()` now works correctly, though it&#x27;s\n  not implemented very efficiently. [bug=1520530]\n\n* Fixed a Python 3 ByteWarning when a URL was passed in as though it\n  were markup. Thanks to James Salter for a patch and\n  test. [bug=1533762]\n\n* We don&#x27;t run the check for a filename passed in as markup if the\n  &#x27;filename&#x27; contains a less-than character; the less-than character\n  indicates it&#x27;s most likely a very small document. [bug=1577864]\n   ```\n   \n  \n  \n   ### 4.4.1\n   ```\n   * Fixed a bug that deranged the tree when part of it was\n  removed. Thanks to Eric Weiser for the patch and John Wiseman for a\n  test. [bug=1481520]\n\n* Fixed a parse bug with the html5lib tree-builder. Thanks to Roel\n  Kramer for the patch. [bug=1483781]\n\n* Improved the implementation of CSS selector grouping. Thanks to\n  Orangain for the patch. [bug=1484543]\n\n* Fixed the test_detect_utf8 test so that it works when chardet is\n  installed. [bug=1471359]\n\n* Corrected the output of Declaration objects. [bug=1477847]\n   ```\n   \n  \n  \n   ### 4.4.0\n   ```\n   Especially important changes:\n\n* Added a warning when you instantiate a BeautifulSoup object without\n  explicitly naming a parser. [bug=1398866]\n\n* __repr__ now returns an ASCII bytestring in Python 2, and a Unicode\n  string in Python 3, instead of a UTF8-encoded bytestring in both\n  versions. In Python 3, __str__ now returns a Unicode string instead\n  of a bytestring. [bug=1420131]\n\n* The `text` argument to the find_* methods is now called `string`,\n  which is more accurate. `text` still works, but `string` is the\n  argument described in the documentation. `text` may eventually\n  change its meaning, but not for a very long time. [bug=1366856]\n\n* Changed the way soup objects work under copy.copy(). Copying a\n  NavigableString or a Tag will give you a new NavigableString that&#x27;s\n  equal to the old one but not connected to the parse tree. Patch by\n  Martijn Peters. [bug=1307490]\n\n* Started using a standard MIT license. [bug=1294662]\n\n* Added a Chinese translation of the documentation by Delong .w.\n\nNew features:\n\n* Introduced the select_one() method, which uses a CSS selector but\n  only returns the first match, instead of a list of\n  matches. [bug=1349367]\n\n* You can now create a Tag object without specifying a\n  TreeBuilder. Patch by Martijn Pieters. [bug=1307471]\n\n* You can now create a NavigableString or a subclass just by invoking\n  the constructor. [bug=1294315]\n\n* Added an `exclude_encodings` argument to UnicodeDammit and to the\n  Beautiful Soup constructor, which lets you prohibit the detection of\n  an encoding that you know is wrong. [bug=1469408]\n\n* The select() method now supports selector grouping. Patch by\n  Francisco Canas [bug=1191917]\n\nBug fixes:\n\n* Fixed yet another problem that caused the html5lib tree builder to\n  create a disconnected parse tree. [bug=1237763]\n\n* Force object_was_parsed() to keep the tree intact even when an element\n  from later in the document is moved into place. [bug=1430633]\n\n* Fixed yet another bug that caused a disconnected tree when html5lib\n  copied an element from one part of the tree to another. [bug=1270611]\n\n* Fixed a bug where Element.extract() could create an infinite loop in\n  the remaining tree.\n\n* The select() method can now find tags whose names contain\n  dashes. Patch by Francisco Canas. [bug=1276211]\n\n* The select() method can now find tags with attributes whose names\n  contain dashes. Patch by Marek Kapolka. [bug=1304007]\n\n* Improved the lxml tree builder&#x27;s handling of processing\n  instructions. [bug=1294645]\n\n* Restored the helpful syntax error that happens when you try to\n  import the Python 2 edition of Beautiful Soup under Python\n  3. [bug=1213387]\n\n* In Python 3.4 and above, set the new convert_charrefs argument to\n  the html.parser constructor to avoid a warning and future\n  failures. Patch by Stefano Revera. [bug=1375721]\n\n* The warning when you pass in a filename or URL as markup will now be\n  displayed correctly even if the filename or URL is a Unicode\n  string. [bug=1268888]\n\n* If the initial &lt;html&gt; tag contains a CDATA list attribute such as\n  &#x27;class&#x27;, the html5lib tree builder will now turn its value into a\n  list, as it would with any other tag. [bug=1296481]\n\n* Fixed an import error in Python 3.5 caused by the removal of the\n  HTMLParseError class. [bug=1420063]\n\n* Improved docstring for encode_contents() and\n  decode_contents(). [bug=1441543]\n\n* Fixed a crash in Unicode, Dammit&#x27;s encoding detector when the name\n  of the encoding itself contained invalid bytes. [bug=1360913]\n\n* Improved the exception raised when you call .unwrap() or\n  .replace_with() on an element that&#x27;s not attached to a tree.\n\n* Raise a NotImplementedError whenever an unsupported CSS pseudoclass\n  is used in select(). Previously some cases did not result in a\n  NotImplementedError.\n\n* It&#x27;s now possible to pickle a BeautifulSoup object no matter which\n  tree builder was used to create it. However, the only tree builder\n  that survives the pickling process is the HTMLParserTreeBuilder\n  (&#x27;html.parser&#x27;). If you unpickle a BeautifulSoup object created with\n  some other tree builder, soup.builder will be None. [bug=1231545]\n   ```\n   \n  \n  \n   ### 4.3.2\n   ```\n   * Fixed a bug in which short Unicode input was improperly encoded to\n  ASCII when checking whether or not it was the name of a file on\n  disk. [bug=1227016]\n\n* Fixed a crash when a short input contains data not valid in\n  filenames. [bug=1232604]\n\n* Fixed a bug that caused Unicode data put into UnicodeDammit to\n  return None instead of the original data. [bug=1214983]\n\n* Combined two tests to stop a spurious test failure when tests are\n  run by nosetests. [bug=1212445]\n   ```\n   \n  \n  \n   ### 4.3.1\n   ```\n   * Fixed yet another problem with the html5lib tree builder, caused by\n  html5lib&#x27;s tendency to rearrange the tree during\n  parsing. [bug=1189267]\n\n* Fixed a bug that caused the optimized version of find_all() to\n  return nothing. [bug=1212655]\n   ```\n   \n  \n  \n   ### 4.3.0\n   ```\n   * Instead of converting incoming data to Unicode and feeding it to the\n  lxml tree builder in chunks, Beautiful Soup now makes successive\n  guesses at the encoding of the incoming data, and tells lxml to\n  parse the data as that encoding. Giving lxml more control over the\n  parsing process improves performance and avoids a number of bugs and\n  issues with the lxml parser which had previously required elaborate\n  workarounds:\n\n  - An issue in which lxml refuses to parse Unicode strings on some\n    systems. [bug=1180527]\n\n  - A returning bug that truncated documents longer than a (very\n    small) size. [bug=963880]\n\n  - A returning bug in which extra spaces were added to a document if\n    the document defined a charset other than UTF-8. [bug=972466]\n\n  This required a major overhaul of the tree builder architecture. If\n  you wrote your own tree builder and didn&#x27;t tell me, you&#x27;ll need to\n  modify your prepare_markup() method.\n\n* The UnicodeDammit code that makes guesses at encodings has been\n  split into its own class, EncodingDetector. A lot of apparently\n  redundant code has been removed from Unicode, Dammit, and some\n  undocumented features have also been removed.\n\n* Beautiful Soup will issue a warning if instead of markup you pass it\n  a URL or the name of a file on disk (a common beginner&#x27;s mistake).\n\n* A number of optimizations improve the performance of the lxml tree\n  builder by about 33%, the html.parser tree builder by about 20%, and\n  the html5lib tree builder by about 15%.\n\n* All find_all calls should now return a ResultSet object. Patch by\n  Aaron DeVore. [bug=1194034]\n   ```\n   \n  \n  \n   ### 4.2.1\n   ```\n   * The default XML formatter will now replace ampersands even if they\n  appear to be part of entities. That is, &quot;&amp;lt;&quot; will become\n  &quot;&amp;amp;lt;&quot;. The old code was left over from Beautiful Soup 3, which\n  didn&#x27;t always turn entities into Unicode characters.\n\n  If you really want the old behavior (maybe because you add new\n  strings to the tree, those strings include entities, and you want\n  the formatter to leave them alone on output), it can be found in\n  EntitySubstitution.substitute_xml_containing_entities(). [bug=1182183]\n\n* Gave new_string() the ability to create subclasses of\n  NavigableString. [bug=1181986]\n\n* Fixed another bug by which the html5lib tree builder could create a\n  disconnected tree. [bug=1182089]\n\n* The .previous_element of a BeautifulSoup object is now always None,\n  not the last element to be parsed. [bug=1182089]\n\n* Fixed test failures when lxml is not installed. [bug=1181589]\n\n* html5lib now supports Python 3. Fixed some Python 2-specific\n  code in the html5lib test suite. [bug=1181624]\n\n* The html.parser treebuilder can now handle numeric attributes in\n  text when the hexidecimal name of the attribute starts with a\n  capital X. Patch by Tim Shirley. [bug=1186242]\n   ```\n   \n  \n  \n   ### 4.2.0\n   ```\n   * The Tag.select() method now supports a much wider variety of CSS\n  selectors.\n\n - Added support for the adjacent sibling combinator (+) and the\n   general sibling combinator (~). Tests by &quot;liquider&quot;. [bug=1082144]\n\n - The combinators (&gt;, +, and ~) can now combine with any supported\n   selector, not just one that selects based on tag name.\n\n - Added limited support for the &quot;nth-of-type&quot; pseudo-class. Code\n   by Sven Slootweg. [bug=1109952]\n\n* The BeautifulSoup class is now aliased to &quot;_s&quot; and &quot;_soup&quot;, making\n  it quicker to type the import statement in an interactive session:\n\n  from bs4 import _s\n   or\n  from bs4 import _soup\n\n  The alias may change in the future, so don&#x27;t use this in code you&#x27;re\n  going to run more than once.\n\n* Added the &#x27;diagnose&#x27; submodule, which includes several useful\n  functions for reporting problems and doing tech support.\n\n  - diagnose(data) tries the given markup on every installed parser,\n    reporting exceptions and displaying successes. If a parser is not\n    installed, diagnose() mentions this fact.\n\n  - lxml_trace(data, html=True) runs the given markup through lxml&#x27;s\n    XML parser or HTML parser, and prints out the parser events as\n    they happen. This helps you quickly determine whether a given\n    problem occurs in lxml code or Beautiful Soup code.\n\n  - htmlparser_trace(data) is the same thing, but for Python&#x27;s\n    built-in HTMLParser class.\n\n* In an HTML document, the contents of a &lt;script&gt; or &lt;style&gt; tag will\n  no longer undergo entity substitution by default. XML documents work\n  the same way they did before. [bug=1085953]\n\n* Methods like get_text() and properties like .strings now only give\n  you strings that are visible in the document--no comments or\n  processing commands. [bug=1050164]\n\n* The prettify() method now leaves the contents of &lt;pre&gt; tags\n  alone. [bug=1095654]\n\n* Fix a bug in the html5lib treebuilder which sometimes created\n  disconnected trees. [bug=1039527]\n\n* Fix a bug in the lxml treebuilder which crashed when a tag included\n  an attribute from the predefined &quot;xml:&quot; namespace. [bug=1065617]\n\n* Fix a bug by which keyword arguments to find_parent() were not\n  being passed on. [bug=1126734]\n\n* Stop a crash when unwisely messing with a tag that&#x27;s been\n  decomposed. [bug=1097699]\n\n* Now that lxml&#x27;s segfault on invalid doctype has been fixed, fixed a\n  corresponding problem on the Beautiful Soup end that was previously\n  invisible. [bug=984936]\n\n* Fixed an exception when an overspecified CSS selector didn&#x27;t match\n  anything. Code by Stefaan Lippens. [bug=1168167]\n   ```\n   \n  \n  \n   ### 4.1.3\n   ```\n   * Skipped a test under Python 2.6 and Python 3.1 to avoid a spurious\n  test failure caused by the lousy HTMLParser in those\n  versions. [bug=1038503]\n\n* Raise a more specific error (FeatureNotFound) when a requested\n  parser or parser feature is not installed. Raise NotImplementedError\n  instead of ValueError when the user calls insert_before() or\n  insert_after() on the BeautifulSoup object itself. Patch by Aaron\n  Devore. [bug=1038301]\n   ```\n   \n  \n  \n   ### 4.1.2\n   ```\n   * As per PEP-8, allow searching by CSS class using the &#x27;class_&#x27;\n  keyword argument. [bug=1037624]\n\n* Display namespace prefixes for namespaced attribute names, instead of\n  the fully-qualified names given by the lxml parser. [bug=1037597]\n\n* Fixed a crash on encoding when an attribute name contained\n  non-ASCII characters.\n\n* When sniffing encodings, if the cchardet library is installed,\n  Beautiful Soup uses it instead of chardet. cchardet is much\n  faster. [bug=1020748]\n\n* Use logging.warning() instead of warning.warn() to notify the user\n  that characters were replaced with REPLACEMENT\n  CHARACTER. [bug=1013862]\n   ```\n   \n  \n  \n   ### 4.1.1\n   ```\n   * Fixed an html5lib tree builder crash which happened when html5lib\n  moved a tag with a multivalued attribute from one part of the tree\n  to another. [bug=1019603]\n\n* Correctly display closing tags with an XML namespace declared. Patch\n  by Andreas Kostyrka. [bug=1019635]\n\n* Fixed a typo that made parsing significantly slower than it should\n  have been, and also waited too long to close tags with XML\n  namespaces. [bug=1020268]\n\n* get_text() now returns an empty Unicode string if there is no text,\n  rather than an empty bytestring. [bug=1020387]\n   ```\n   \n  \n  \n   ### 4.1.0\n   ```\n   * Added experimental support for fixing Windows-1252 characters\n  embedded in UTF-8 documents. (UnicodeDammit.detwingle())\n\n* Fixed the handling of &amp;quot; with the built-in parser. [bug=993871]\n\n* Comments, processing instructions, document type declarations, and\n  markup declarations are now treated as preformatted strings, the way\n  CData blocks are. [bug=1001025]\n\n* Fixed a bug with the lxml treebuilder that prevented the user from\n  adding attributes to a tag that didn&#x27;t originally have\n  attributes. [bug=1002378] Thanks to Oliver Beattie for the patch.\n\n* Fixed some edge-case bugs having to do with inserting an element\n  into a tag it&#x27;s already inside, and replacing one of a tag&#x27;s\n  children with another. [bug=997529]\n\n* Added the ability to search for attribute values specified in UTF-8. [bug=1003974]\n\n  This caused a major refactoring of the search code. All the tests\n  pass, but it&#x27;s possible that some searches will behave differently.\n   ```\n   \n  \n  \n   ### 4.0.5\n   ```\n   * Added a new method, wrap(), which wraps an element in a tag.\n\n* Renamed replace_with_children() to unwrap(), which is easier to\n  understand and also the jQuery name of the function.\n\n* Made encoding substitution in &lt;meta&gt; tags completely transparent (no\n  more %SOUP-ENCODING%).\n\n* Fixed a bug in decoding data that contained a byte-order mark, such\n  as data encoded in UTF-16LE. [bug=988980]\n\n* Fixed a bug that made the HTMLParser treebuilder generate XML\n  definitions ending with two question marks instead of\n  one. [bug=984258]\n\n* Upon document generation, CData objects are no longer run through\n  the formatter. [bug=988905]\n\n* The test suite now passes when lxml is not installed, whether or not\n  html5lib is installed. [bug=987004]\n\n* Print a warning on HTMLParseErrors to let people know they should\n  install a better parser library.\n   ```\n   \n  \n  \n   ### 4.0.4\n   ```\n   * Fixed a bug that sometimes created disconnected trees.\n\n* Fixed a bug with the string setter that moved a string around the\n  tree instead of copying it. [bug=983050]\n\n* Attribute values are now run through the provided output formatter.\n  Previously they were always run through the &#x27;minimal&#x27; formatter. In\n  the future I may make it possible to specify different formatters\n  for attribute values and strings, but for now, consistent behavior\n  is better than inconsistent behavior. [bug=980237]\n\n* Added the missing renderContents method from Beautiful Soup 3. Also\n  added an encode_contents() method to go along with decode_contents().\n\n* Give a more useful error when the user tries to run the Python 2\n  version of BS under Python 3.\n\n* UnicodeDammit can now convert Microsoft smart quotes to ASCII with\n  UnicodeDammit(markup, smart_quotes_to=&quot;ascii&quot;).\n   ```\n   \n  \n  \n   ### 4.0.3\n   ```\n   * Fixed a typo that caused some versions of Python 3 to convert the\n  Beautiful Soup codebase incorrectly.\n\n* Got rid of the 4.0.2 workaround for HTML documents--it was\n  unnecessary and the workaround was triggering a (possibly different,\n  but related) bug in lxml. [bug=972466]\n   ```\n   \n  \n  \n   ### 4.0.2\n   ```\n   * Worked around a possible bug in lxml that prevents non-tiny XML\n  documents from being parsed. [bug=963880, bug=963936]\n\n* Fixed a bug where specifying `text` while also searching for a tag\n  only worked if `text` wanted an exact string match. [bug=955942]\n   ```\n   \n  \n  \n   ### 4.0.1\n   ```\n   * This is the first official release of Beautiful Soup 4. There is no\n   ```\n   \n  \n  \n   ### 4.0.0\n   ```\n   might treat &quot;4.0.0&quot; as being an earlier version than &quot;4.0.0b10&quot;.\n\n* Brought BS up to date with the latest release of soupselect, adding\n  CSS selector support for direct descendant matches and multiple CSS\n  class matches.\n   ```\n   \n  \n  \n   ### 4.0.0b10\n   ```\n   * Added support for simple CSS selectors, taken from the soupselect project.\n\n* Fixed a crash when using html5lib. [bug=943246]\n\n* In HTML5-style &lt;meta charset=&quot;foo&quot;&gt; tags, the value of the &quot;charset&quot;\n  attribute is now replaced with the appropriate encoding on\n  output. [bug=942714]\n\n* Fixed a bug that caused calling a tag to sometimes call find_all()\n  with the wrong arguments. [bug=944426]\n\n* For backwards compatibility, brought back the BeautifulStoneSoup\n  class as a deprecated wrapper around BeautifulSoup.\n   ```\n   \n  \n  \n   ### 4.0.0b9\n   ```\n   * Fixed the string representation of DOCTYPEs that have both a public\n  ID and a system ID.\n\n* Fixed the generated XML declaration.\n\n* Renamed Tag.nsprefix to Tag.prefix, for consistency with\n  NamespacedAttribute.\n\n* Fixed a test failure that occurred on Python 3.x when chardet was\n  installed.\n\n* Made prettify() return Unicode by default, so it will look nice on\n  Python 3 when passed into print().\n   ```\n   \n  \n  \n   ### 4.0.0b8\n   ```\n   * All tree builders now preserve namespace information in the\n  documents they parse. If you use the html5lib parser or lxml&#x27;s XML\n  parser, you can access the namespace URL for a tag as tag.namespace.\n\n  However, there is no special support for namespace-oriented\n  searching or tree manipulation. When you search the tree, you need\n  to use namespace prefixes exactly as they&#x27;re used in the original\n  document.\n\n* The string representation of a DOCTYPE always ends in a newline.\n\n* Issue a warning if the user tries to use a SoupStrainer in\n  conjunction with the html5lib tree builder, which doesn&#x27;t support\n  them.\n   ```\n   \n  \n  \n   ### 4.0.0b7\n   ```\n   * Upon decoding to string, any characters that can&#x27;t be represented in\n  your chosen encoding will be converted into numeric XML entity\n  references.\n\n* Issue a warning if characters were replaced with REPLACEMENT\n  CHARACTER during Unicode conversion.\n\n* Restored compatibility with Python 2.6.\n\n* The install process no longer installs docs or auxiliary text files.\n\n* It&#x27;s now possible to deepcopy a BeautifulSoup object created with\n  Python&#x27;s built-in HTML parser.\n\n* About 100 unit tests that &quot;test&quot; the behavior of various parsers on\n  invalid markup have been removed. Legitimate changes to those\n  parsers caused these tests to fail, indicating that perhaps\n  Beautiful Soup should not test the behavior of foreign\n  libraries.\n\n  The problematic unit tests have been reformulated as informational\n  comparisons generated by the script\n  scripts/demonstrate_parser_differences.py.\n\n  This makes Beautiful Soup compatible with html5lib version 0.95 and\n  future versions of HTMLParser.\n   ```\n   \n  \n  \n   ### 4.0.0b6\n   ```\n   * Multi-valued attributes like &quot;class&quot; always have a list of values,\n  even if there&#x27;s only one value in the list.\n\n* Added a number of multi-valued attributes defined in HTML5.\n\n* Stopped generating a space before the slash that closes an\n  empty-element tag. This may come back if I add a special XHTML mode\n  (http://www.w3.org/TR/xhtml1/#C_2), but right now it&#x27;s pretty\n  useless.\n\n* Passing text along with tag-specific arguments to a find* method:\n\n   find(&quot;a&quot;, text=&quot;Click here&quot;)\n\n  will find tags that contain the given text as their\n  .string. Previously, the tag-specific arguments were ignored and\n  only strings were searched.\n\n* Fixed a bug that caused the html5lib tree builder to build a\n  partially disconnected tree. Generally cleaned up the html5lib tree\n  builder.\n\n* If you restrict a multi-valued attribute like &quot;class&quot; to a string\n  that contains spaces, Beautiful Soup will only consider it a match\n  if the values correspond to that specific string.\n   ```\n   \n  \n  \n   ### 4.0.0b5\n   ```\n   * Rationalized Beautiful Soup&#x27;s treatment of CSS class. A tag\n  belonging to multiple CSS classes is treated as having a list of\n  values for the &#x27;class&#x27; attribute. Searching for a CSS class will\n  match *any* of the CSS classes.\n\n  This actually affects all attributes that the HTML standard defines\n  as taking multiple values (class, rel, rev, archive, accept-charset,\n  and headers), but &#x27;class&#x27; is by far the most common. [bug=41034]\n\n* If you pass anything other than a dictionary as the second argument\n  to one of the find* methods, it&#x27;ll assume you want to use that\n  object to search against a tag&#x27;s CSS classes. Previously this only\n  worked if you passed in a string.\n\n* Fixed a bug that caused a crash when you passed a dictionary as an\n  attribute value (possibly because you mistyped &quot;attrs&quot;). [bug=842419]\n\n* Unicode, Dammit now detects the encoding in HTML 5-style &lt;meta&gt; tags\n  like &lt;meta charset=&quot;utf-8&quot; /&gt;. [bug=837268]\n\n* If Unicode, Dammit can&#x27;t figure out a consistent encoding for a\n  page, it will try each of its guesses again, with errors=&quot;replace&quot;\n  instead of errors=&quot;strict&quot;. This may mean that some data gets\n  replaced with REPLACEMENT CHARACTER, but at least most of it will\n  get turned into Unicode. [bug=754903]\n\n* Patched over a bug in html5lib (?) that was crashing Beautiful Soup\n  on certain kinds of markup. [bug=838800]\n\n* Fixed a bug that wrecked the tree if you replaced an element with an\n  empty string. [bug=728697]\n\n* Improved Unicode, Dammit&#x27;s behavior when you give it Unicode to\n  begin with.\n   ```\n   \n  \n  \n   ### 4.0.0b4\n   ```\n   * Added BeautifulSoup.new_string() to go along with BeautifulSoup.new_tag()\n\n* BeautifulSoup.new_tag() will follow the rules of whatever\n  tree-builder was used to create the original BeautifulSoup object. A\n  new &lt;p&gt; tag will look like &quot;&lt;p /&gt;&quot; if the soup object was created to\n  parse XML, but it will look like &quot;&lt;p&gt;&lt;/p&gt;&quot; if the soup object was\n  created to parse HTML.\n\n* We pass in strict=False to html.parser on Python 3, greatly\n  improving html.parser&#x27;s ability to handle bad HTML.\n\n* We also monkeypatch a serious bug in html.parser that made\n  strict=False disastrous on Python 3.2.2.\n\n* Replaced the &quot;substitute_html_entities&quot; argument with the\n  more general &quot;formatter&quot; argument.\n\n* Bare ampersands and angle brackets are always converted to XML\n  entities unless the user prevents it.\n\n* Added PageElement.insert_before() and PageElement.insert_after(),\n  which let you put an element into the parse tree with respect to\n  some other element.\n\n* Raise an exception when the user tries to do something nonsensical\n  like insert a tag into itself.\n   ```\n   \n  \n  \n   ### 4.0.0b3\n   ```\n   Beautiful Soup 4 is a nearly-complete rewrite that removes Beautiful\nSoup&#x27;s custom HTML parser in favor of a system that lets you write a\nlittle glue code and plug in any HTML or XML parser you want.\n\nBeautiful Soup 4.0 comes with glue code for four parsers:\n\n * Python&#x27;s standard HTMLParser (html.parser in Python 3)\n * lxml&#x27;s HTML and XML parsers\n * html5lib&#x27;s HTML parser\n\nHTMLParser is the default, but I recommend you install lxml if you\ncan.\n\nFor complete documentation, see the Sphinx documentation in\nbs4/doc/source/. What follows is a summary of the changes from\nBeautiful Soup 3.\n\n=== The module name has changed ===\n\nPreviously you imported the BeautifulSoup class from a module also\ncalled BeautifulSoup. To save keystrokes and make it clear which\nversion of the API is in use, the module is now called &#x27;bs4&#x27;:\n\n    &gt;&gt;&gt; from bs4 import BeautifulSoup\n\n=== It works with Python 3 ===\n\nBeautiful Soup 3.1.0 worked with Python 3, but the parser it used was\nso bad that it barely worked at all. Beautiful Soup 4 works with\nPython 3, and since its parser is pluggable, you don&#x27;t sacrifice\nquality.\n\nSpecial thanks to Thomas Kluyver and Ezio Melotti for getting Python 3\nsupport to the finish line. Ezio Melotti is also to thank for greatly\nimproving the HTML parser that comes with Python 3.2.\n\n=== CDATA sections are normal text, if they&#x27;re understood at all. ===\n\nCurrently, the lxml and html5lib HTML parsers ignore CDATA sections in\nmarkup:\n\n &lt;p&gt;&lt;![CDATA[foo]]&gt;&lt;/p&gt; =&gt; &lt;p&gt;&lt;/p&gt;\n\nA future version of html5lib will turn CDATA sections into text nodes,\nbut only within tags like &lt;svg&gt; and &lt;math&gt;:\n\n &lt;svg&gt;&lt;![CDATA[foo]]&gt;&lt;/svg&gt; =&gt; &lt;p&gt;foo&lt;/p&gt;\n\nThe default XML parser (which uses lxml behind the scenes) turns CDATA\nsections into ordinary text elements:\n\n &lt;p&gt;&lt;![CDATA[foo]]&gt;&lt;/p&gt; =&gt; &lt;p&gt;foo&lt;/p&gt;\n\nIn theory it&#x27;s possible to preserve the CDATA sections when using the\nXML parser, but I don&#x27;t see how to get it to work in practice.\n\n=== Miscellaneous other stuff ===\n\nIf the BeautifulSoup instance has .is_xml set to True, an appropriate\nXML declaration will be emitted when the tree is transformed into a\nstring:\n\n    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;&gt;\n    &lt;markup&gt;\n     ...\n    &lt;/markup&gt;\n\nThe [&#x27;lxml&#x27;, &#x27;xml&#x27;] tree builder sets .is_xml to True; the other tree\nbuilders set it to False. If you want to parse XHTML with an HTML\nparser, you can set it manually.\n   ```\n   \n  \n  \n   ### 3.2\n   ```\n   to make it obvious which one you should use.\n   ```\n   \n  \n  \n  \n  \n   ### 3.1.0\n   ```\n   A hybrid version that supports 2.4 and can be automatically converted\nto run under Python 3.0. There are three backwards-incompatible\nchanges you should be aware of, but no new features or deliberate\nbehavior changes.\n\n1. str() may no longer do what you want. This is because the meaning\nof str() inverts between Python 2 and 3; in Python 2 it gives you a\nbyte string, in Python 3 it gives you a Unicode string.\n\nThe effect of this is that you can&#x27;t pass an encoding to .__str__\nanymore. Use encode() to get a string and decode() to get Unicode, and\nyou&#x27;ll be ready (well, readier) for Python 3.\n\n2. Beautiful Soup is now based on HTMLParser rather than SGMLParser,\nwhich is gone in Python 3. There&#x27;s some bad HTML that SGMLParser\nhandled but HTMLParser doesn&#x27;t, usually to do with attribute values\nthat aren&#x27;t closed or have brackets inside them:\n\n  &lt;a href=&quot;foo&lt;/a&gt;, &lt;/a&gt;&lt;a href=&quot;bar&quot;&gt;baz&lt;/a&gt;\n  &lt;a b=&quot;&lt;a&gt;&quot;&gt;&#x27;, &#x27;&lt;a b=&quot;&amp;lt;a&amp;gt;&quot;&gt;&lt;/a&gt;&lt;a&gt;&quot;&gt;&lt;/a&gt;\n\nA later version of Beautiful Soup will allow you to plug in different\nparsers to make tradeoffs ", "created_at": "2024-06-17T14:04:17Z", "updated_at": "2024-07-01T14:04:15Z", "closed_at": "2024-07-01T14:04:14Z", "merged_at": null, "merge_commit_sha": "455d58437aabda54bfad2a434d6e8a74e012339f", "assignee": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/deanmalmgren/textract/pulls/516/commits", "review_comments_url": "https://api.github.com/repos/deanmalmgren/textract/pulls/516/comments", "review_comment_url": "https://api.github.com/repos/deanmalmgren/textract/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/deanmalmgren/textract/issues/516/comments", "statuses_url": "https://api.github.com/repos/deanmalmgren/textract/statuses/ec91de4fc4e325a569f31771aafae7cc2a0d1579", "head": {"label": "deanmalmgren:pyup-scheduled-update-2024-06-17", "ref": "pyup-scheduled-update-2024-06-17", "sha": "ec91de4fc4e325a569f31771aafae7cc2a0d1579", "user": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "repo": {"id": 21476229, "node_id": "MDEwOlJlcG9zaXRvcnkyMTQ3NjIyOQ==", "name": "textract", "full_name": "deanmalmgren/textract", "private": false, "owner": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/deanmalmgren/textract", "description": "extract text from any document. no muss. no fuss.", "fork": false, "url": "https://api.github.com/repos/deanmalmgren/textract", "forks_url": "https://api.github.com/repos/deanmalmgren/textract/forks", "keys_url": "https://api.github.com/repos/deanmalmgren/textract/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/deanmalmgren/textract/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/deanmalmgren/textract/teams", "hooks_url": "https://api.github.com/repos/deanmalmgren/textract/hooks", "issue_events_url": "https://api.github.com/repos/deanmalmgren/textract/issues/events{/number}", "events_url": "https://api.github.com/repos/deanmalmgren/textract/events", "assignees_url": "https://api.github.com/repos/deanmalmgren/textract/assignees{/user}", "branches_url": "https://api.github.com/repos/deanmalmgren/textract/branches{/branch}", "tags_url": "https://api.github.com/repos/deanmalmgren/textract/tags", "blobs_url": "https://api.github.com/repos/deanmalmgren/textract/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/deanmalmgren/textract/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/deanmalmgren/textract/git/refs{/sha}", "trees_url": "https://api.github.com/repos/deanmalmgren/textract/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/deanmalmgren/textract/statuses/{sha}", "languages_url": "https://api.github.com/repos/deanmalmgren/textract/languages", "stargazers_url": "https://api.github.com/repos/deanmalmgren/textract/stargazers", "contributors_url": "https://api.github.com/repos/deanmalmgren/textract/contributors", "subscribers_url": "https://api.github.com/repos/deanmalmgren/textract/subscribers", "subscription_url": "https://api.github.com/repos/deanmalmgren/textract/subscription", "commits_url": "https://api.github.com/repos/deanmalmgren/textract/commits{/sha}", "git_commits_url": "https://api.github.com/repos/deanmalmgren/textract/git/commits{/sha}", "comments_url": "https://api.github.com/repos/deanmalmgren/textract/comments{/number}", "issue_comment_url": "https://api.github.com/repos/deanmalmgren/textract/issues/comments{/number}", "contents_url": "https://api.github.com/repos/deanmalmgren/textract/contents/{+path}", "compare_url": "https://api.github.com/repos/deanmalmgren/textract/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/deanmalmgren/textract/merges", "archive_url": "https://api.github.com/repos/deanmalmgren/textract/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/deanmalmgren/textract/downloads", "issues_url": "https://api.github.com/repos/deanmalmgren/textract/issues{/number}", "pulls_url": "https://api.github.com/repos/deanmalmgren/textract/pulls{/number}", "milestones_url": "https://api.github.com/repos/deanmalmgren/textract/milestones{/number}", "notifications_url": "https://api.github.com/repos/deanmalmgren/textract/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/deanmalmgren/textract/labels{/name}", "releases_url": "https://api.github.com/repos/deanmalmgren/textract/releases{/id}", "deployments_url": "https://api.github.com/repos/deanmalmgren/textract/deployments", "created_at": "2014-07-03T20:36:59Z", "updated_at": "2024-08-23T16:14:10Z", "pushed_at": "2024-08-19T14:04:13Z", "git_url": "git://github.com/deanmalmgren/textract.git", "ssh_url": "git@github.com:deanmalmgren/textract.git", "clone_url": "https://github.com/deanmalmgren/textract.git", "svn_url": "https://github.com/deanmalmgren/textract", "homepage": "http://textract.readthedocs.io", "size": 4531, "stargazers_count": 3854, "watchers_count": 3854, "language": "HTML", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 589, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 138, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["data-mining", "natural-language-processing", "python", "text-mining"], "visibility": "public", "forks": 589, "open_issues": 138, "watchers": 3854, "default_branch": "master"}}, "base": {"label": "deanmalmgren:master", "ref": "master", "sha": "ec3c0c3c982078d22e51cc2753baeaf48cdf2e19", "user": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "repo": {"id": 21476229, "node_id": "MDEwOlJlcG9zaXRvcnkyMTQ3NjIyOQ==", "name": "textract", "full_name": "deanmalmgren/textract", "private": false, "owner": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/deanmalmgren/textract", "description": "extract text from any document. no muss. no fuss.", "fork": false, "url": "https://api.github.com/repos/deanmalmgren/textract", "forks_url": "https://api.github.com/repos/deanmalmgren/textract/forks", "keys_url": "https://api.github.com/repos/deanmalmgren/textract/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/deanmalmgren/textract/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/deanmalmgren/textract/teams", "hooks_url": "https://api.github.com/repos/deanmalmgren/textract/hooks", "issue_events_url": "https://api.github.com/repos/deanmalmgren/textract/issues/events{/number}", "events_url": "https://api.github.com/repos/deanmalmgren/textract/events", "assignees_url": "https://api.github.com/repos/deanmalmgren/textract/assignees{/user}", "branches_url": "https://api.github.com/repos/deanmalmgren/textract/branches{/branch}", "tags_url": "https://api.github.com/repos/deanmalmgren/textract/tags", "blobs_url": "https://api.github.com/repos/deanmalmgren/textract/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/deanmalmgren/textract/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/deanmalmgren/textract/git/refs{/sha}", "trees_url": "https://api.github.com/repos/deanmalmgren/textract/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/deanmalmgren/textract/statuses/{sha}", "languages_url": "https://api.github.com/repos/deanmalmgren/textract/languages", "stargazers_url": "https://api.github.com/repos/deanmalmgren/textract/stargazers", "contributors_url": "https://api.github.com/repos/deanmalmgren/textract/contributors", "subscribers_url": "https://api.github.com/repos/deanmalmgren/textract/subscribers", "subscription_url": "https://api.github.com/repos/deanmalmgren/textract/subscription", "commits_url": "https://api.github.com/repos/deanmalmgren/textract/commits{/sha}", "git_commits_url": "https://api.github.com/repos/deanmalmgren/textract/git/commits{/sha}", "comments_url": "https://api.github.com/repos/deanmalmgren/textract/comments{/number}", "issue_comment_url": "https://api.github.com/repos/deanmalmgren/textract/issues/comments{/number}", "contents_url": "https://api.github.com/repos/deanmalmgren/textract/contents/{+path}", "compare_url": "https://api.github.com/repos/deanmalmgren/textract/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/deanmalmgren/textract/merges", "archive_url": "https://api.github.com/repos/deanmalmgren/textract/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/deanmalmgren/textract/downloads", "issues_url": "https://api.github.com/repos/deanmalmgren/textract/issues{/number}", "pulls_url": "https://api.github.com/repos/deanmalmgren/textract/pulls{/number}", "milestones_url": "https://api.github.com/repos/deanmalmgren/textract/milestones{/number}", "notifications_url": "https://api.github.com/repos/deanmalmgren/textract/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/deanmalmgren/textract/labels{/name}", "releases_url": "https://api.github.com/repos/deanmalmgren/textract/releases{/id}", "deployments_url": "https://api.github.com/repos/deanmalmgren/textract/deployments", "created_at": "2014-07-03T20:36:59Z", "updated_at": "2024-08-23T16:14:10Z", "pushed_at": "2024-08-19T14:04:13Z", "git_url": "git://github.com/deanmalmgren/textract.git", "ssh_url": "git@github.com:deanmalmgren/textract.git", "clone_url": "https://github.com/deanmalmgren/textract.git", "svn_url": "https://github.com/deanmalmgren/textract", "homepage": "http://textract.readthedocs.io", "size": 4531, "stargazers_count": 3854, "watchers_count": 3854, "language": "HTML", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 589, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 138, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": ["data-mining", "natural-language-processing", "python", "text-mining"], "visibility": "public", "forks": 589, "open_issues": 138, "watchers": 3854, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/deanmalmgren/textract/pulls/516"}, "html": {"href": "https://github.com/deanmalmgren/textract/pull/516"}, "issue": {"href": "https://api.github.com/repos/deanmalmgren/textract/issues/516"}, "comments": {"href": "https://api.github.com/repos/deanmalmgren/textract/issues/516/comments"}, "review_comments": {"href": "https://api.github.com/repos/deanmalmgren/textract/pulls/516/comments"}, "review_comment": {"href": "https://api.github.com/repos/deanmalmgren/textract/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/deanmalmgren/textract/pulls/516/commits"}, "statuses": {"href": "https://api.github.com/repos/deanmalmgren/textract/statuses/ec91de4fc4e325a569f31771aafae7cc2a0d1579"}}, "author_association": "COLLABORATOR", "auto_merge": null, "active_lock_reason": null, "resolved_issues": []}
