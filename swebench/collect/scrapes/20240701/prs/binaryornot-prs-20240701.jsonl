{"url": "https://api.github.com/repos/binaryornot/binaryornot/pulls/623", "id": 1306416620, "node_id": "PR_kwDOALm2P85N3lXs", "html_url": "https://github.com/binaryornot/binaryornot/pull/623", "diff_url": "https://github.com/binaryornot/binaryornot/pull/623.diff", "patch_url": "https://github.com/binaryornot/binaryornot/pull/623.patch", "issue_url": "https://api.github.com/repos/binaryornot/binaryornot/issues/623", "number": 623, "state": "closed", "locked": false, "title": "Pin hypothesis to latest version 6.71.0", "user": {"login": "pyup-bot", "id": 16239342, "node_id": "MDQ6VXNlcjE2MjM5MzQy", "avatar_url": "https://avatars.githubusercontent.com/u/16239342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyup-bot", "html_url": "https://github.com/pyup-bot", "followers_url": "https://api.github.com/users/pyup-bot/followers", "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}", "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions", "organizations_url": "https://api.github.com/users/pyup-bot/orgs", "repos_url": "https://api.github.com/users/pyup-bot/repos", "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/pyup-bot/received_events", "type": "User", "site_admin": false}, "body": "\nThis PR pins [hypothesis](https://pypi.org/project/hypothesis) to the latest release **6.71.0**.\n\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 6.71.0\n   ```\n   -------------------\n\nThis release adds :class:`~hypothesis.database.GitHubArtifactDatabase`, a new database\nbackend that allows developers to access the examples found by a Github Actions CI job.\nThis is particularly useful for workflows that involve continuous fuzzing,\nlike `HypoFuzz &lt;https://hypofuzz.com/&gt;`__.\n\nThanks to Agust\u00edn Covarrubias for this feature!\n   ```\n   \n  \n  \n   ### 6.70.2\n   ```\n   -------------------\n\nThis patch clarifies the reporting of time spent generating data. A\nsimple arithmetic mean of the percentage of time spent can be\nmisleading; reporting the actual time spent avoids misunderstandings.\n\nThanks to Andrea Reina for reporting and fixing :issue:`3598`!\n   ```\n   \n  \n  \n   ### 6.70.1\n   ```\n   -------------------\n\nThis patch updates our vendored `list of top-level domains &lt;https://www.iana.org/domains/root/db&gt;`__,\nwhich is used by the provisional :func:`~hypothesis.provisional.domains` strategy.\n   ```\n   \n  \n  \n   ### 6.70.0\n   ```\n   -------------------\n\nThis release adds an optional ``domains=`` parameter to the\n:func:`~hypothesis.strategies.emails` strategy, and excludes\nthe special-use :wikipedia:`.arpa` domain from the default\nstrategy (:issue:`3567`).\n\nThanks to Jens Tr\u00f6ger for reporting and fixing this bug!\n   ```\n   \n  \n  \n   ### 6.69.0\n   ```\n   -------------------\n\nThis release turns ``HealthCheck.return_value`` and ``HealthCheck.not_a_test_method``\ninto unconditional errors.  Passing them to ``suppress_health_check=`` is therefore a deprecated no-op.\n(:issue:`3568`).  Thanks to Reagan Lee for the patch!\n\nSeparately, GraalPy can now run and pass most of the hypothesis test suite (:issue:`3587`).\n   ```\n   \n  \n  \n   ### 6.68.3\n   ```\n   -------------------\n\nThis patch updates our vendored `list of top-level domains &lt;https://www.iana.org/domains/root/db&gt;`__,\nwhich is used by the provisional :func:`~hypothesis.provisional.domains` strategy.\n   ```\n   \n  \n  \n   ### 6.68.2\n   ```\n   -------------------\n\nThis patch fixes missing imports of the :mod:`re` module, when :doc:`ghostwriting &lt;ghostwriter&gt;`\ntests which include compiled patterns or regex flags.\nThanks to Jens Heinrich for reporting and promptly fixing this bug!\n   ```\n   \n  \n  \n   ### 6.68.1\n   ```\n   -------------------\n\nThis patch adds some private hooks for use in research on\n`Schemathesis &lt;https://github.com/schemathesis/schemathesis&gt;`__\n(`see our preprint here &lt;https://arxiv.org/abs/2112.10328&gt;`__).\n   ```\n   \n  \n  \n   ### 6.68.0\n   ```\n   -------------------\n\nThis release adds support for the Array API&#x27;s `2022.12 release\n&lt;https://data-apis.org/array-api/2022.12/&gt;`_ via the ``api_version`` argument in\n:func:`~hypothesis.extra.array_api.make_strategies_namespace`. Concretely this\ninvolves complex support in its existing strategies, plus an introduced\n:func:`xps.complex_dtypes` strategy.\n\nAdditionally this release now treats :ref:`hypothesis.extra.array_api\n&lt;array-api&gt;` as stable, meaning breaking changes should only happen with major\nreleases of Hypothesis.\n   ```\n   \n  \n  \n   ### 6.67.1\n   ```\n   -------------------\n\nThis patch updates our autoformatting tools, improving our code style without any API changes.\n   ```\n   \n  \n  \n   ### 6.67.0\n   ```\n   -------------------\n\nThis release allows for more precise generation of complex numbers using\n:func:`~hypothesis.extra.numpy.from_dtype`, by supporting the ``width``,\n``min_magnitude``, and ``min_magnitude`` arguments (:issue:`3468`).\n\nThanks to Felix Divo for this feature!\n   ```\n   \n  \n  \n   ### 6.66.2\n   ```\n   -------------------\n\nThis patch fixes a rare ``RecursionError`` when pretty-printing a multi-line\nobject without type-specific printer, which was passed to a function which\nreturned the same object by ``.map()`` or :func:`~hypothesis.strategies.builds`\nand thus recursed due to the new pretty reprs in Hypothesis :ref:`v6.65.0`\n(:issue:`3560`).  Apologies to all those affected.\n   ```\n   \n  \n  \n   ### 6.66.1\n   ```\n   -------------------\n\nThis makes :func:`~hypothesis.extra.numpy.from_dtype` pass through the parameter\n``allow_subnormal`` for complex dtypes.\n   ```\n   \n  \n  \n   ### 6.66.0\n   ```\n   -------------------\n\nThis release adds a ``width`` parameter to :func:`~hypothesis.strategies.complex_numbers`,\nanalogously to :func:`~hypothesis.strategies.floats`.\n\nThanks to Felix Divo for the new feature!\n   ```\n   \n  \n  \n   ### 6.65.2\n   ```\n   -------------------\n\nThis patch fixes invalid annotations detected for the tests generated by\n:doc:`Ghostwritter &lt;ghostwriter&gt;`. It will now correctly generate ``Optional``\ntypes with just one type argument and handle union expressions inside of type\narguments correctly. Additionally, it now supports code with the\n``from __future__ import annotations`` marker for Python 3.10 and newer.\n   ```\n   \n  \n  \n   ### 6.65.1\n   ```\n   -------------------\n\nThis release improves the pretty-printing of enums in falsifying examples,\nso that they print as their full identifier rather than their repr.\n   ```\n   \n  \n  \n   ### 6.65.0\n   ```\n   -------------------\n\nHypothesis now reports some failing inputs by showing the call which constructed\nan object, rather than the repr of the object.  This can be helpful when the default\nrepr does not include all relevant details, and will unlock further improvements\nin a future version.\n\nFor now, we capture calls made via :func:`~hypothesis.strategies.builds`, and via\n:ref:`SearchStrategy.map() &lt;mapping&gt;`.\n   ```\n   \n  \n  \n   ### 6.64.0\n   ```\n   -------------------\n\nThe :doc:`Ghostwritter &lt;ghostwriter&gt;` will now include type annotations on tests\nfor type-annotated code.  If you want to force this to happen (or not happen),\npass a boolean to the new ``annotate=`` argument to the Python functions, or\nthe ``--[no-]annotate`` CLI flag.\n\nThanks to Nicolas Ganz for this new feature!\n   ```\n   \n  \n  \n   ### 6.63.0\n   ```\n   -------------------\n\n:func:`~hypothesis.extra.pandas.range_indexes` now accepts a ``name=`` argument,\nto generate named :class:`pandas.RangeIndex` objects.\n\nThanks to Sam Watts for this new feature!\n   ```\n   \n  \n  \n   ### 6.62.1\n   ```\n   -------------------\n\nThis patch tweaks :func:`xps.arrays` internals to improve PyTorch compatibility.\nSpecifically, ``torch.full()`` does not accept integers as the shape argument\n(n.b. technically &quot;size&quot; in torch), but such behaviour is expected in internal\ncode, so we copy the ``torch`` module and patch in a working ``full()`` function.\n   ```\n   \n  \n  \n   ### 6.62.0\n   ```\n   -------------------\n\nA classic error when testing is to write a test function that can never fail,\neven on inputs that aren&#x27;t allowed or manually provided.  By analogy to the\ndesign pattern of::\n\n    pytest.mark.parametrize(&quot;arg&quot;, [\n        ...,   passing examples\n        pytest.param(..., marks=[pytest.mark.xfail])   expected-failing input\n    ])\n\nwe now support :obj:`example(...).xfail() &lt;hypothesis.example.xfail&gt;`, with\nthe same (optional) ``condition``, ``reason``, and ``raises`` arguments as\n``pytest.mark.xfail()``.\n\nNaturally you can also write ``.via(...).xfail(...)``, or ``.xfail(...).via(...)``,\nif you wish to note the provenance of expected-failing examples.\n   ```\n   \n  \n  \n   ### 6.61.3\n   ```\n   -------------------\n\nThis patch teaches our enhanced :func:`~typing.get_type_hints` function to\n&#x27;see through&#x27; :obj:`~functools.partial` application, allowing inference\nfrom type hints to work in a few more cases which aren&#x27;t (yet!) supported\nby the standard-library version.\n   ```\n   \n  \n  \n   ### 6.61.2\n   ```\n   -------------------\n\nThis patch improves our pretty-printing of failing examples, including\nsome refactoring to prepare for exciting future features.\n   ```\n   \n  \n  \n   ### 6.61.1\n   ```\n   -------------------\n\nThis patch brings our :func:`~hypothesis.provisional.domains` and\n:func:`~hypothesis.strategies.emails` strategies into compliance with\n:rfc:`RFC 5890 \u00a72.3.1 &lt;5890&gt;`: we no longer generate parts-of-domains\nwhere the third and fourth characters are ``--`` (&quot;R-LDH labels&quot;),\nthough future versions *may* deliberately generate ``xn--`` punycode\nlabels.  Thanks to :pypi:`python-email-validator` for `the report\n&lt;https://github.com/JoshData/python-email-validator/issues/92&gt;`__!\n   ```\n   \n  \n  \n   ### 6.61.0\n   ```\n   -------------------\n\nThis release improves our treatment of database keys, which based on (among other things)\nthe source code of your test function.  We now post-process this source to ignore\ndecorators, comments, trailing whitespace, and blank lines - so that you can add\n:obj:`example() &lt;hypothesis.example&gt;`\\ s or make some small no-op edits to your code\nwithout preventing replay of any known failing or covering examples.\n   ```\n   \n  \n  \n   ### 6.60.1\n   ```\n   -------------------\n\nThis patch updates our vendored `list of top-level domains &lt;https://www.iana.org/domains/root/db&gt;`__,\nwhich is used by the provisional :func:`~hypothesis.provisional.domains` strategy.\n   ```\n   \n  \n  \n   ### 6.60.0\n   ```\n   -------------------\n\nThis release improves Hypothesis&#x27; ability to resolve forward references in\ntype annotations. It fixes a bug that prevented\n:func:`~hypothesis.strategies.builds` from being used with `pydantic models that\npossess updated forward references &lt;https://pydantic-docs.helpmanual.io/usage/postponed_annotations/&gt;`__. See :issue:`3519`.\n   ```\n   \n  \n  \n   ### 6.59.0\n   ```\n   -------------------\n\nThe :obj:`example(...) &lt;hypothesis.example&gt;` decorator now has a ``.via()``\nmethod, which future tools will use to track automatically-added covering\nexamples (:issue:`3506`).\n   ```\n   \n  \n  \n   ### 6.58.2\n   ```\n   -------------------\n\nThis patch updates our vendored `list of top-level domains &lt;https://www.iana.org/domains/root/db&gt;`__,\nwhich is used by the provisional :func:`~hypothesis.provisional.domains` strategy.\n   ```\n   \n  \n  \n   ### 6.58.1\n   ```\n   -------------------\n\nThis patch shifts ``hypothesis[lark]`` from depending on the old :pypi:`lark-parser`\npackage to the new :pypi:`lark` package.  There are no code changes in Hypothesis,\nit&#x27;s just that Lark got a new name on PyPI for version 1.0 onwards.\n   ```\n   \n  \n  \n   ### 6.58.0\n   ```\n   -------------------\n\n:func:`~hypothesis.register_random` has used :mod:`weakref` since :ref:`v6.27.1`,\nallowing the :class:`~random.Random`-compatible objects to be garbage-collected when\nthere are no other references remaining in order to avoid memory leaks.\nWe now raise an error or emit a warning when this seems likely to happen immediately.\n\nThe type annotation of :func:`~hypothesis.register_random` was also widened so that\nstructural subtypes of :class:`~random.Random` are accepted by static typecheckers.\n   ```\n   \n  \n  \n   ### 6.57.1\n   ```\n   -------------------\n\nThis patch updates some internal type annotations and fixes a formatting bug in the\n:obj:`~hypothesis.Phase.explain` phase reporting.\n   ```\n   \n  \n  \n   ### 6.57.0\n   ```\n   -------------------\n\nHypothesis now raises an error if you passed a strategy as the ``alphabet=``\nargument to :func:`~hypothesis.strategies.text`, and it generated something\nwhich was not a length-one string.  This has never been supported, we&#x27;re just\nadding explicit validation to catch cases like `this StackOverflow question\n&lt;https://stackoverflow.com/a/74336909/9297601&gt;`__.\n   ```\n   \n  \n  \n   ### 6.56.4\n   ```\n   -------------------\n\nThis patch updates some docs, and depends on :pypi:`exceptiongroup` 1.0.0\nfinal to avoid a bug in the previous version.\n   ```\n   \n  \n  \n   ### 6.56.3\n   ```\n   -------------------\n\nThis patch teaches :func:`~hypothesis.strategies.text` to rewrite a few more\nfilter predicates (:issue:`3134`).  You&#x27;re unlikely to notice any change.\n   ```\n   \n  \n  \n   ### 6.56.2\n   ```\n   -------------------\n\nThis patch updates our vendored `list of top-level domains &lt;https://www.iana.org/domains/root/db&gt;`__,\nwhich is used by the provisional :func:`~hypothesis.provisional.domains` strategy, and fixes some\nincorrect examples in the docs for :func:`~hypothesis.extra.numpy.mutually_broadcastable_shapes`.\n   ```\n   \n  \n  \n   ### 6.56.1\n   ```\n   -------------------\n\nThis patch improves the error message when Hypothesis detects &quot;flush to zero&quot;\nmode for floating-point: we now report which package(s) enabled this, which\ncan make debugging much easier.  See :issue:`3458` for details.\n   ```\n   \n  \n  \n   ### 6.56.0\n   ```\n   -------------------\n\nThis release defines ``__bool__()`` on :class:`~hypothesis.strategies.SearchStrategy`.\nIt always returns ``True``, like before, but also emits a warning to help with\ncases where you intended to draw a value (:issue:`3463`).\n   ```\n   \n  \n  \n   ### 6.55.0\n   ```\n   -------------------\n\nIn preparation for `future versions of the Array API standard\n&lt;https://data-apis.org/array-api/latest/future_API_evolution.html&gt;`__,\n:func:`~hypothesis.extra.array_api.make_strategies_namespace` now accepts an\noptional ``api_version`` argument, which determines the version conformed to by\nthe returned strategies namespace. If ``None``, the version of the passed array\nmodule ``xp`` is inferred.\n\nThis release also introduces :func:`xps.real_dtypes`. This is currently\nequivalent to the existing :func:`xps.numeric_dtypes` strategy, but exists\nbecause the latter is expected to include complex numbers in the next version of\nthe standard.\n   ```\n   \n  \n  \n   ### 6.54.6\n   ```\n   -------------------\n\nIf multiple explicit examples (from :obj:`example() &lt;hypothesis.example&gt;`)\nraise a Skip exception, for consistency with generated examples we now re-raise\nthe first instead of collecting them into an ExceptionGroup (:issue:`3453`).\n   ```\n   \n  \n  \n   ### 6.54.5\n   ```\n   -------------------\n\nThis patch updates our autoformatting tools, improving our code style without any API changes.\n   ```\n   \n  \n  \n   ### 6.54.4\n   ```\n   -------------------\n\nThis patch fixes some type annotations for Python 3.9 and earlier (:issue:`3397`),\nand teaches :ref:`explain mode &lt;phases&gt;` about certain locations it should not\nbother reporting (:issue:`3439`).\n   ```\n   \n  \n  \n   ### 6.54.3\n   ```\n   -------------------\n\nThis patch teaches the Ghostwriter an additional check for function\nand class locations that should make it use public APIs more often.\n   ```\n   \n  \n  \n   ### 6.54.2\n   ```\n   -------------------\n\nThis patch fixes our workaround for `a pytest bug where the inner exceptions in\nan ExceptionGroup are not displayed &lt;https://github.com/pytest-dev/pytest/issues/9159&gt;`__\n(:issue:`3430`).\n   ```\n   \n  \n  \n   ### 6.54.1\n   ```\n   -------------------\n\nThis patch makes ``FailedHealthCheck`` and ``DeadlineExceeded`` exceptions\npicklable, for compatibility with Django&#x27;s parallel test runner (:issue:`3426`).\n   ```\n   \n  \n  \n   ### 6.54.0\n   ```\n   -------------------\n\nReporting of :obj:`multiple failing examples &lt;hypothesis.settings.report_multiple_bugs&gt;`\nnow uses the :pep:`654` `ExceptionGroup &lt;https://docs.python.org/3.11/library/exceptions.html#ExceptionGroup&gt;`__ type, which is provided by the\n:pypi:`exceptiongroup` backport on Python 3.10 and earlier (:issue:`3175`).\n``hypothesis.errors.MultipleFailures`` is therefore deprecated.\n\nFailing examples and other reports are now stored as :pep:`678` exception notes, which\nensures that they will always appear together with the traceback and other information\nabout their respective error.\n   ```\n   \n  \n  \n   ### 6.53.0\n   ```\n   -------------------\n\n:func:`~hypothesis.extra.django.from_field` now supports ``UsernameField``\nfrom :mod:`django.contrib.auth.forms`.\n\nThanks to Afonso Silva for reporting and working on :issue:`3417`.\n   ```\n   \n  \n  \n   ### 6.52.4\n   ```\n   -------------------\n\nThis patch improves the error message when you pass filenames to the :command:`hypothesis write`\nCLI, which takes the name of a module or function (e.g. :command:`hypothesis write gzip` or\n:command:`hypothesis write package.some_function` rather than :command:`hypothesis write script.py`).\n\nThanks to Ed Rogers for implementing this as part of the SciPy 2022 sprints!\n   ```\n   \n  \n  \n   ### 6.52.3\n   ```\n   -------------------\n\nThis patch ensures that the warning for non-interactive ``.example()``\npoints to your code instead of Hypothesis internals (:issue:`3403`).\n\nThanks to jameslamb for this fix.\n   ```\n   \n  \n  \n   ### 6.52.2\n   ```\n   -------------------\n\nThis patch makes :func:`~hypothesis.strategies.integers` more likely to\ngenerate boundary values for large two-sided intervals (:issue:`2942`).\n   ```\n   \n  \n  \n   ### 6.52.1\n   ```\n   -------------------\n\nThis patch adds filter rewriting for :func:`math.isfinite`, :func:`math.isinf`, and :func:`math.isnan`\non :func:`~hypothesis.strategies.integers` or :func:`~hypothesis.strategies.floats` (:issue:`2701`).\n\nThanks to Sam Clamons at the SciPy Sprints!\n   ```\n   \n  \n  \n   ### 6.52.0\n   ```\n   -------------------\n\nThis release adds the ``allow_subnormal`` argument to :func:`~hypothesis.strategies.complex_numbers` by\napplying it to each of the real and imaginary parts separately. Closes :issue:`3390`.\n\nThanks to Evan Tey for this fix.\n   ```\n   \n  \n  \n   ### 6.51.0\n   ```\n   -------------------\n\nIssue a deprecation warning if a function decorated with\n:func:`composite &lt;hypothesis.strategies.composite&gt;`\ndoes not draw any values (:issue:`3384`).\n\nThanks to Grzegorz Zieba, Rodrigo Gir\u00e3o, and Thomas Ball for\nworking on this at the EuroPython sprints!\n   ```\n   \n  \n  \n   ### 6.50.1\n   ```\n   -------------------\n\nThis patch improves the error messages in :obj:`example() &lt;hypothesis.example&gt;`\nargument validation following the recent release of :ref:`6.49.1 &lt;v6.49.1&gt;`.\n   ```\n   \n  \n  \n   ### 6.50.0\n   ```\n   -------------------\n\nThis release allows :func:`~hypothesis.extra.numpy.from_dtype` to generate\nUnicode strings which cannot be encoded in UTF-8, but are valid in Numpy\narrays (which use UTF-32).\n\nThis logic will only be used with :pypi:`Numpy` &gt;= 1.19, because earlier\nversions have `an issue &lt;https://github.com/numpy/numpy/issues/15363&gt;`__\nwhich led us to revert :ref:`Hypothesis 5.2 &lt;v5.2.0&gt;` last time!\n   ```\n   \n  \n  \n   ### 6.49.1\n   ```\n   -------------------\n\nThis patch fixes some inconsistency between argument handling for\n:obj:`example &lt;hypothesis.example&gt;` and :func:`given &lt;hypothesis.given&gt;`\n(:issue:`2706 &lt;2706issuecomment-1168363177&gt;`).\n   ```\n   \n  \n  \n   ### 6.49.0\n   ```\n   -------------------\n\nThis release uses :pep:`612` :obj:`python:typing.ParamSpec` (or the\n:pypi:`typing_extensions` backport) to express the first-argument-removing\nbehaviour of :func:`st.composite &lt;hypothesis.strategies.composite&gt;`\nand signature-preservation of :func:`~hypothesis.strategies.functions`\nto IDEs, editor plugins, and static type checkers such as :pypi:`mypy`.\n   ```\n   \n  \n  \n   ### 6.48.3\n   ```\n   -------------------\n\n:func:`hypothesis.event` now works for hashable objects which do not\nsupport weakrefs, such as integers and tuples.\n   ```\n   \n  \n  \n   ### 6.48.2\n   ```\n   -------------------\n\nThis patch tidies up some internal introspection logic, which will improve\nsupport for positional-only arguments in a future release (:issue:`2706`).\n   ```\n   \n  \n  \n   ### 6.48.1\n   ```\n   -------------------\n\nThis release automatically rewrites some simple filters, such as\n``floats().filter(lambda x: x &gt;= 10)`` to the more efficient\n``floats(min_value=10)``, based on the AST of the predicate.\n\nWe continue to recommend using the efficient form directly wherever\npossible, but this should be useful for e.g. :pypi:`pandera` &quot;``Checks``&quot;\nwhere you already have a simple predicate and translating manually\nis really annoying.  See :issue:`2701` for details.\n   ```\n   \n  \n  \n   ### 6.48.0\n   ```\n   -------------------\n\nThis release raises :class:`~unittest.SkipTest` for which never executed any\nexamples, for example because the :obj:`~hypothesis.settings.phases` setting\nexcluded the :obj:`~hypothesis.Phase.explicit`, :obj:`~hypothesis.Phase.reuse`,\nand :obj:`~hypothesis.Phase.generate` phases.  This helps to avoid cases where\nbroken tests appear to pass, because they didn&#x27;t actually execute (:issue:`3328`).\n   ```\n   \n  \n  \n   ### 6.47.5\n   ```\n   -------------------\n\nThis patch fixes type annotations that had caused the signature of\n:func:`given &lt;hypothesis.given&gt;` to be partially-unknown to type-checkers for Python\nversions before 3.10.\n   ```\n   \n  \n  \n   ### 6.47.4\n   ```\n   -------------------\n\nThis patch fixes :func:`~hypothesis.strategies.from_type` on Python 3.11,\nfollowing `python/cpython93754 &lt;https://github.com/python/cpython/pull/93754/&gt;`__.\n   ```\n   \n  \n  \n   ### 6.47.3\n   ```\n   -------------------\n\nThis patch makes the :obj:`~hypothesis.HealthCheck.too_slow` health check more\nconsistent with long :obj:`~hypothesis.settings.deadline` tests (:issue:`3367`)\nand fixes an install issue under :pypi:`pipenv` which was introduced in\n:ref:`Hypothesis 6.47.2 &lt;v6.47.2&gt;` (:issue:`3374`).\n   ```\n   \n  \n  \n   ### 6.47.2\n   ```\n   -------------------\n\nWe now use the :pep:`654` `ExceptionGroup &lt;https://docs.python.org/3.11/library/exceptions.html#ExceptionGroup&gt;`__\ntype - provided by the :pypi:`exceptiongroup` backport on older Pythons -\nto ensure that if multiple errors are raised in teardown, they will all propagate.\n   ```\n   \n  \n  \n   ### 6.47.1\n   ```\n   -------------------\n\nOur pretty-printer no longer sorts dictionary keys, since iteration order is\nstable in Python 3.7+ and this can affect reproducing examples (:issue:`3370`).\nThis PR was kindly supported by `Ordina Pythoneers\n&lt;https://www.ordina.nl/vakgebieden/python/&gt;`__.\n   ```\n   \n  \n  \n   ### 6.47.0\n   ```\n   -------------------\n\nThe :doc:`Ghostwritter &lt;ghostwriter&gt;` can now write tests for\n:obj:`classmethod &lt;classmethod&gt;` or :obj:`staticmethod &lt;staticmethod&gt;`\nmethods, in addition to the existing support for functions and other callables\n(:issue:`3318`).  Thanks to Cheuk Ting Ho for the patch.\n   ```\n   \n  \n  \n   ### 6.46.11\n   ```\n   --------------------\n\nMention :func:`hypothesis.strategies.timezones`\nin the documentation of :func:`hypothesis.strategies.datetimes` for completeness.\n\nThanks to George Macon for this addition.\n   ```\n   \n  \n  \n   ### 6.46.10\n   ```\n   --------------------\n\nThis release contains some small improvements to our documentation.\nThanks to Felix Divo for his contribution!\n   ```\n   \n  \n  \n   ### 6.46.9\n   ```\n   -------------------\n\nThis patch by Adrian Garcia Badaracco adds type annotations\nto some private internals (:issue:`3074`).\n   ```\n   \n  \n  \n   ### 6.46.8\n   ```\n   -------------------\n\nThis patch by Phillip Schanely makes changes to the\n:func:`~hypothesis.strategies.floats` strategy when ``min_value`` or ``max_value`` is\npresent.\nHypothesis will now be capable of generating every representable value in the bounds.\nYou may notice that hypothesis is more likely to test values near boundaries, and values\nthat are very close to zero.\n\nThese changes also support future integrations with symbolic execution tools and fuzzers\n(:issue:`3086`).\n   ```\n   \n  \n  \n   ### 6.46.7\n   ```\n   -------------------\n\nThis patch updates the type annotations for :func:`~hypothesis.strategies.tuples` and\n:func:`~hypothesis.strategies.one_of` so that type-checkers require its arguments to be\npositional-only, and so that it no longer fails under pyright-strict mode (see\n:issue:`3348`). Additional changes are made to Hypothesis&#x27; internals improve pyright\nscans.\n   ```\n   \n  \n  \n   ### 6.46.6\n   ```\n   -------------------\n\nThis patch by Cheuk Ting Ho adds support for :pep:`655` ``Required`` and ``NotRequired`` as attributes of\n:class:`~python:typing.TypedDict` in :func:`~hypothesis.strategies.from_type` (:issue:`3339`).\n   ```\n   \n  \n  \n   ### 6.46.5\n   ```\n   -------------------\n\nThis patch fixes :func:`~hypothesis.extra.numpy.from_dtype` with long-precision\nfloating-point datatypes (typecode ``g``; see :func:`numpy:numpy.typename`).\n   ```\n   \n  \n  \n   ### 6.46.4\n   ```\n   -------------------\n\nThis patch improves some error messages for custom signatures\ncontaining invalid parameter names (:issue:`3317`).\n   ```\n   \n  \n  \n   ### 6.46.3\n   ```\n   -------------------\n\nThis patch by Cheuk Ting Ho makes it an explicit error to call :func:`~hypothesis.strategies.from_type`\nor :func:`~hypothesis.strategies.register_type_strategy` with types that have no runtime instances (:issue:`3280`).\n   ```\n   \n  \n  \n   ### 6.46.2\n   ```\n   -------------------\n\nThis patch fixes silently dropping examples when the :obj:`example &lt;hypothesis.example&gt;`\ndecorator is applied to itself (:issue:`3319`).  This was always a weird pattern, but now it\nworks.  Thanks to Ray Sogata, Keeri Tramm, and Kevin Khuong for working on this patch!\n   ```\n   \n  \n  \n   ### 6.46.1\n   ```\n   -------------------\n\nThis patch fixes a rare bug where we could incorrectly treat\n:obj:`~python:inspect.Parameter.empty` as a type annotation,\nif the callable had an explicitly assigned ``__signature__``.\n   ```\n   \n  \n  \n   ### 6.46.0\n   ```\n   -------------------\n\nThis release adds an ``allow_nil`` argument to :func:`~hypothesis.strategies.uuids`,\nwhich you can use to... generate the nil UUID.  Thanks to Shlok Gandhi for the patch!\n   ```\n   \n  \n  \n   ### 6.45.4\n   ```\n   -------------------\n\nThis patch fixes some missing imports for certain :doc:`Ghostwritten &lt;ghostwriter&gt;`\ntests.  Thanks to Mel Seto for fixing :issue:`3316`.\n   ```\n   \n  \n  \n   ### 6.45.3\n   ```\n   -------------------\n\nThis patch teaches :doc:`the Ghostwriter &lt;ghostwriter&gt;` to recognize\nmany more common argument names (:issue:`3311`).\n   ```\n   \n  \n  \n   ### 6.45.2\n   ```\n   -------------------\n\nThis patch fixes :issue:`3314`, where Hypothesis would raise an internal\nerror from :func:`~hypothesis.provisional.domains` or (only on Windows)\nfrom :func:`~hypothesis.strategies.timezones` in some rare circumstances\nwhere the installation was subtly broken.\n\nThanks to Munir Abdinur for this contribution.\n   ```\n   \n  \n  \n   ### 6.45.1\n   ```\n   -------------------\n\nThis release fixes deprecation warnings about ``sre_compile`` and ``sre_parse``\nimports and ``importlib.resources`` usage when running Hypothesis on Python 3.11.\n\nThanks to Florian Bruhin for this contribution.\n   ```\n   \n  \n  \n   ### 6.45.0\n   ```\n   -------------------\n\nThis release updates :func:`xps.indices` by introducing an ``allow_newaxis``\nargument, defaulting to ``False``. If ``allow_newaxis=True``, indices can be\ngenerated that add dimensions to arrays, which is achieved by the indexer\ncontaining ``None``. This change is to support a specification change that\nexpand dimensions via indexing (`data-apis/array-api408\n&lt;https://github.com/data-apis/array-api/pull/408&gt;`_).\n   ```\n   \n  \n  \n   ### 6.44.0\n   ```\n   -------------------\n\nThis release adds a ``names`` argument to :func:`~hypothesis.extra.pandas.indexes`\nand :func:`~hypothesis.extra.pandas.series`, so that you can create Pandas\nobjects with specific or varied names.\n\nContributed by Sam Watts.\n   ```\n   \n  \n  \n   ### 6.43.3\n   ```\n   -------------------\n\nThis patch updates the type annotations for :func:`given &lt;hypothesis.given&gt;`\nso that type-checkers will warn on mixed positional and keyword arguments,\nas well as fixing :issue:`3296`.\n   ```\n   \n  \n  \n   ### 6.43.2\n   ```\n   -------------------\n\nFixed a type annotation for ``pyright --strict`` (:issue:`3287`).\n   ```\n   \n  \n  \n   ### 6.43.1\n   ```\n   -------------------\n\nThis patch makes it an explicit error to call\n:func:`~hypothesis.strategies.register_type_strategy` with a\n`Pydantic GenericModel &lt;https://pydantic-docs.helpmanual.io/usage/models/#generic-models&gt;`__\nand a callable, because ``GenericModel`` isn&#x27;t actually a generic type at\nruntime and so you have to register each of the &quot;parametrized versions&quot;\n(actually subclasses!) manually.  See :issue:`2940` for more details.\n   ```\n   \n  \n  \n   ### 6.43.0\n   ```\n   -------------------\n\nThis release makes it an explicit error to apply\n:func:`pytest.fixture &lt;pytest:pytest.fixture&gt;` to a function which has\nalready been decorated with :func:`given() &lt;hypothesis.given&gt;`.  Previously,\n``pytest`` would convert your test to a fixture, and then never run it.\n   ```\n   \n  \n  \n   ### 6.42.3\n   ```\n   -------------------\n\nThis patch fixes :func:`~hypothesis.strategies.from_type` on a :class:`~python:typing.TypedDict`\nwith complex annotations, defined in a file using ``from __future__ import annotations``.\nThanks to Katelyn Gigante for identifying and fixing this bug!\n   ```\n   \n  \n  \n   ### 6.42.2\n   ```\n   -------------------\n\nThe Hypothesis pytest plugin was not outputting valid xunit2 nodes when\n``--junit-xml`` was specified. This has been broken since Pytest 5.4, which\nchanged the internal API for adding nodes to the junit report.\n\nThis also fixes the issue when using hypothesis with ``--junit-xml`` and\n``pytest-xdist`` where the junit xml report would not be xunit2 compatible.\nNow, when using with ``pytest-xdist``, the junit report will just omit the\n``&lt;properties&gt;`` node.\n\nFor more details, see `this pytest issue &lt;https://github.com/pytest-dev/pytest/issues/1126#issuecomment-484581283&gt;`__,\n`this pytest issue &lt;https://github.com/pytest-dev/pytest/issues/7767#issuecomment-1082436256&gt;`__,\nand :issue:`1935`\n\nThanks to Brandon Chinn for this bug fix!\n   ```\n   \n  \n  \n   ### 6.42.1\n   ```\n   -------------------\n\nThis patch fixes pretty-printing of regular expressions in Python 3.11.0a7, and\nupdates our vendored `list of top-level domains &lt;https://www.iana.org/domains/root/db&gt;`__,.\n   ```\n   \n  \n  \n   ### 6.42.0\n   ```\n   -------------------\n\nThis release makes ``st.functions(pure=True)`` less noisy (:issue:`3253`),\nand generally improves pretty-printing of functions.\n   ```\n   \n  \n  \n   ### 6.41.0\n   ```\n   -------------------\n\nThis release changes the implementation of :const:`~hypothesis.infer` to be an alias\nfor :obj:`python:Ellipsis`. E.g. ``given(a=infer)`` is now equivalent to ``given(a=...)``. Furthermore, ``given(...)`` can now be specified so that\n:func:`given &lt;hypothesis.given&gt;` will infer the strategies for *all* arguments of the\ndecorated function based on its annotations.\n   ```\n   \n  \n  \n   ### 6.40.3\n   ```\n   -------------------\n\nThis patch simplifies the repr of the strategies namespace returned in\n:func:`~hypothesis.extra.array_api.make_strategies_namespace`, e.g.\n\n.. code-block:: pycon\n\n    &gt;&gt;&gt; from hypothesis.extra.array_api import make_strategies_namespace\n    &gt;&gt;&gt; from numpy import array_api as xp\n    &gt;&gt;&gt; xps = make_strategies_namespace(xp)\n    &gt;&gt;&gt; xps\n    make_strategies_namespace(numpy.array_api)\n   ```\n   \n  \n  \n   ### 6.40.2\n   ```\n   -------------------\n\nFixed :func:`~hypothesis.strategies.from_type` support for\n:pep:`604` union types, like ``int | None`` (:issue:`3255`).\n   ```\n   \n  \n  \n   ### 6.40.1\n   ```\n   -------------------\n\nFixed an internal error when ``given()`` was passed a lambda.\n   ```\n   \n  \n  \n   ### 6.40.0\n   ```\n   -------------------\n\n:doc:`The Ghostwriter &lt;ghostwriter&gt;` can now write tests which check that\ntwo or more functions are equivalent on valid inputs, *or* raise the same\ntype of exception for invalid inputs (:issue:`3267`).\n   ```\n   \n  \n  \n   ### 6.39.6\n   ```\n   -------------------\n\nThis patch makes some quality-of-life improvements to the\n:doc:`Ghostwriter &lt;ghostwriter&gt;`: we guess the :func:`~hypothesis.strategies.text`\nstrategy for arguments named ``text`` (...obvious in hindsight, eh?);\nand improved the error message if you accidentally left in a\n:func:`~hypothesis.strategies.nothing` or broke your :pypi:`rich` install.\n   ```\n   \n  \n  \n   ### 6.39.5\n   ```\n   -------------------\n\nThis patch improves our error detection and message when Hypothesis is run\non a Python implementation without support for ``-0.0``, which is required\nfor the :func:`~hypothesis.strategies.floats` strategy but can be disabled by\n`unsafe compiler options &lt;https://simonbyrne.github.io/notes/fastmath/&gt;`__\n(:issue:`3265`).\n   ```\n   \n  \n  \n   ### 6.39.4\n   ```\n   -------------------\n\nThis patch tweaks some internal formatting.  There is no user-visible change.\n   ```\n   \n  \n  \n   ### 6.39.3\n   ```\n   -------------------\n\nIf the :obj:`~hypothesis.Phase.shrink` phase is disabled, we now stop the\n:obj:`~hypothesis.Phase.generate` phase as soon as an error is found regardless\nof the value of the ``report_multiple_examples`` setting, since that&#x27;s\nprobably what you wanted (:issue:`3244`).\n   ```\n   \n  \n  \n   ### 6.39.2\n   ```\n   -------------------\n\nThis patch clarifies rare error messages in\n:func:`~hypothesis.strategies.builds` (:issue:`3225`) and\n:func:`~hypothesis.strategies.floats` (:issue:`3207`).\n   ```\n   \n  \n  \n   ### 6.39.1\n   ```\n   -------------------\n\nThis patch fixes a regression where the bound inner function\n(``your_test.hypothesis.inner_test``) would be invoked with positional\narguments rather than passing them by name, which broke\n:pypi:`pytest-asyncio` (:issue:`3245`).\n   ```\n   \n  \n  \n   ### 6.39.0\n   ```\n   -------------------\n\nThis release improves Hypothesis&#x27; handling of positional-only arguments,\nwhich are now allowed :func:`st.composite &lt;hypothesis.strategies.composite&gt;`\nstrategies.\n\nOn Python 3.8 and later, the first arguments to :func:`~hypothesis.strategies.builds`\nand :func:`~hypothesis.extra.django.from_model` are now natively positional-only.\nIn cases which were already errors, the ``TypeError`` from incorrect usage will\ntherefore be raises immediately when the function is called, rather than when\nthe strategy object is used.\n   ```\n   \n  \n  \n   ### 6.38.0\n   ```\n   -------------------\n\nThis release makes :func:`~hypothesis.strategies.floats` error *consistently* when\nyour floating-point hardware has been configured to violate IEEE-754 for\n:wikipedia:`subnormal numbers &lt;Subnormal_number&gt;`, instead of\nonly when an internal assertion was tripped (:issue:`3092`).\n\nIf this happens to you, passing ``allow_subnormal=False`` will suppress the explicit\nerror.  However, we strongly recommend fixing the root cause by disabling global-effect\nunsafe-math compiler options instead, or at least consulting e.g. Simon Byrne&#x27;s\n`Beware of fast-math &lt;https://simonbyrne.github.io/notes/fastmath/&gt;`__ explainer first.\n   ```\n   \n  \n  \n   ### 6.37.2\n   ```\n   -------------------\n\nThis patch fixes a bug in stateful testing, where returning a single value\nwrapped in :func:`~hypothesis.stateful.multiple` would be printed such that\nthe assigned variable was a tuple rather than the single element\n(:issue:`3236`).\n   ```\n   \n  \n  \n   ### 6.37.1\n   ```\n   -------------------\n\nThis patch fixes a warning under :pypi:`pytest` 7 relating to our\nrich traceback display logic (:issue:`3223`).\n   ```\n   \n  \n  \n   ### 6.37.0\n   ```\n   -------------------\n\nWhen distinguishing multiple errors, Hypothesis now looks at the inner\nexceptions of :pep:`654` ``ExceptionGroup``\\ s.\n   ```\n   \n  \n  \n   ### 6.36.2\n   ```\n   -------------------\n\nThis patch updates our vendored `list of top-level domains &lt;https://www.iana.org/domains/root/db&gt;`__,\nwhich is used by the provisional :func:`~hypothesis.provisional.domains` strategy.\n   ```\n   \n  \n  \n   ### 6.36.1\n   ```\n   -------------------\n\nThis patch fixes some deprecation warnings from :pypi:`pytest` 7.0,\nalong with some code formatting and docs updates.\n   ```\n   \n  \n  \n   ### 6.36.0\n   ```\n   -------------------\n\nThis release disallows using :obj:`python:typing.Final`\nwith :func:`~hypothesis.strategies.from_type`\nand :func:`~hypothesis.strategies.register_type_strategy`.\n\nWhy?\nBecause ``Final`` can only be used during ``class`` definition.\nWe don&#x27;t generate class attributes.\n\nIt also does not make sense as a runtime type on its own.\n   ```\n   \n  \n  \n   ### 6.35.1\n   ```\n   -------------------\n\nThis patch fixes ``hypothesis write`` output highlighting with :pypi:`rich`\nversion 12.0 and later.\n   ```\n   \n  \n  \n   ### 6.35.0\n   ```\n   -------------------\n\nThis release disallows using :obj:`python:typing.ClassVar`\nwith :func:`~hypothesis.strategies.from_type`\nand :func:`~hypothesis.strategies.register_type_strategy`.\n\nWhy?\nBecause ``ClassVar`` can only be used during ``class`` definition.\nWe don&#x27;t generate class attributes.\n\nIt also does not make sense as a runtime type on its own.\n   ```\n   \n  \n  \n   ### 6.34.2\n   ```\n   -------------------\n\nThis patch updates our vendored `list of top-level domains &lt;https://www.iana.org/domains/root/db&gt;`__,\nwhich is used by the provisional :func:`~hypothesis.provisional.domains` strategy.\n   ```\n   \n  \n  \n   ### 6.34.1\n   ```\n   -------------------\n\nThis patch fixes :issue:`3169`, an extremely rare bug which would\ntrigger if an internal least-recently-reused cache dropped a newly\nadded entry immediately after it was added.\n   ```\n   \n  \n  \n   ### 6.34.0\n   ```\n   -------------------\n\nThis release fixes :issue:`3133` and :issue:`3144`, where attempting\nto generate Pandas series of lists or sets would fail with confusing\nerrors if you did not specify ``dtype=object``.\n   ```\n   \n  \n  \n   ### 6.33.0\n   ```\n   -------------------\n\nThis release disallows using :obj:`python:typing.TypeAlias`\nwith :func:`~hypothesis.strategies.from_type`\nand :func:`~hypothesis.strategies.register_type_strategy`.\n\nWhy? Because ``TypeAlias`` is not really a type,\nit is a tag for type checkers that some expression is a type alias,\nnot something else.\n\nIt does not make sense for Hypothesis to resolve it as a strategy.\nReferences :issue:`2978`.\n   ```\n   \n  \n  \n   ### 6.32.1\n   ```\n   -------------------\n\nThis patch updates our autoformatting tools, improving our code style without any API changes.\n   ```\n   \n  \n  \n   ### 6.32.0\n   ```\n   -------------------\n\nThis release drops support for Python 3.6, which `reached end of life upstream\n&lt;https://devguide.python.org/#status-of-python-branches&gt;`__ on 2021-12-23.\n   ```\n   \n  \n  \n   ### 6.31.6\n   ```\n   -------------------\n\nThis patch adds a temporary hook for a downstream tool,\nwhich is not part of the public API.\n   ```\n   \n  \n  \n   ### 6.31.5\n   ```\n   -------------------\n\nThis release updates our copyright headers to `use a general authorship statement and omit the year\n&lt;https://www.linuxfoundation.org/blog/copyright-notices-in-open-source-software-projects/&gt;`__.\n   ```\n   \n  \n  \n   ### 6.31.4\n   ```\n   -------------------\n\nThis patch makes the ``.example()`` method more representative of\ntest-time data generation, albeit often at a substantial cost to\nreadability (:issue:`3182`).\n   ```\n   \n  \n  \n   ### 6.31.3\n   ```\n   -------------------\n\nThis patch improves annotations on some of Hypothesis&#x27; internal functions, in order to\ndeobfuscate the signatures of some strategies. In particular, strategies shared between\n:ref:`hypothesis.extra.numpy &lt;hypothesis-numpy&gt;` and\n:ref:`the hypothesis.extra.array_api extra &lt;array-api&gt;` will benefit from this patch.\n   ```\n   \n  \n  \n   ### 6.31.2\n   ```\n   -------------------\n\nThis patch fix invariants display in stateful falsifying examples (:issue:`3185`).\n   ```\n   \n  \n  \n   ### 6.31.1\n   ```\n   -------------------\n\nThis patch updates :func:`xps.indices` so no flat indices are generated, i.e.\ngenerated indices will now always explicitly cover each axes of an array if no\nellipsis is present. This is to be consistent with a specification change that\ndropped support for flat indexing\n(`272 &lt;https://github.com/data-apis/array-api/pull/272&gt;`_).\n   ```\n   \n  \n  \n   ### 6.31.0\n   ```\n   -------------------\n\nThis release makes us compatible with :pypi:`Django` 4.0, in particular by adding\nsupport for use of :mod:`zoneinfo` timezones (though we respect the new\n``USE_DEPRECATED_PYTZ`` setting if you need it).\n   ```\n   \n  \n  \n   ### 6.30.1\n   ```\n   -------------------\n\nThis patch updates our vendored `list of top-level domains &lt;https://www.iana.org/domains/root/db&gt;`__,\nwhich is used by the provisional :func:`~hypothesis.provisional.domains` strategy.\n   ```\n   \n  \n  \n   ### 6.30.0\n   ```\n   -------------------\n\nThis release adds an ``allow_subnormal`` argument to the\n:func:`~hypothesis.strategies.floats` strategy, which can explicitly toggle the\ngeneration of :wikipedia:`subnormal floats &lt;Subnormal_number&gt;` (:issue:`3155`).\nDisabling such generation is useful when testing flush-to-zero builds of\nlibraries.\n\n:func:`nps.from_dtype() &lt;hypothesis.extra.numpy.from_dtype&gt;` and\n:func:`xps.from_dtype` can also accept the ``allow_subnormal`` argument, and\n:func:`xps.from_dtype` or :func:`xps.arrays` will disable subnormals by default\nif the array module ``xp`` is detected to flush-to-zero (like is typical with\nCuPy).\n   ```\n   \n  \n  \n   ### 6.29.3\n   ```\n   -------------------\n\nThis patch fixes a bug in :func:`~hypothesis.extra.numpy.mutually_broadcastable_shapes`,\nwhich restricted the patterns of singleton dimensions that could be generated for\ndimensions that extended beyond ``base_shape`` (:issue:`3170`).\n   ```\n   \n  \n  \n   ### 6.29.2\n   ```\n   -------------------\n\nThis patch clarifies our pretty-printing of DataFrames (:issue:`3114`).\n   ```\n   \n  \n  \n   ### 6.29.1\n   ```\n   -------------------\n\nThis patch documents :func:`~hypothesis.strategies.timezones`\n`Windows-only requirement &lt;https://docs.python.org/3/library/zoneinfo.html#data-sources&gt;`__\nfor the :pypi:`tzdata` package, and ensures that\n``pip install hypothesis[zoneinfo]`` will install the latest version.\n   ```\n   \n  \n  \n   ### 6.29.0\n   ```\n   -------------------\n\nThis release teaches :func:`~hypothesis.strategies.builds` to use\n:func:`~hypothesis.strategies.deferred` when resolving unrecognised type hints,\nso that you can conveniently register strategies for recursive types\nwith constraints on some arguments (:issue:`3026`):\n\n.. code-block:: python\n\n    class RecursiveClass:\n        def __init__(self, value: int, next_node: typing.Optional[&quot;SomeClass&quot;]):\n            assert value &gt; 0\n            self.value = value\n            self.next_node = next_node\n\n\n    st.register_type_strategy(\n        RecursiveClass, st.builds(RecursiveClass, value=st.integers(min_value=1))\n    )\n   ```\n   \n  \n  \n   ### 6.28.1\n   ```\n   -------------------\n\nThis release fixes some internal calculations related to collection sizes (:issue:`3143`).\n   ```\n   \n  \n  \n   ### 6.28.0\n   ```\n   -------------------\n\nThis release modifies our :pypi:`pytest` plugin, to avoid importing Hypothesis\nand therefore triggering :ref:`Hypothesis&#x27; entry points &lt;entry-points&gt;` for\ntest suites where Hypothesis is installed but not actually used (:issue:`3140`).\n   ```\n   \n  \n  \n   ### 6.27.3\n   ```\n   -------------------\n\nThis release fixes :issue:`3080`, where :func:`~hypothesis.strategies.from_type`\nfailed on unions containing :pep:`585` builtin generic types (like ``list[int]``)\nin Python 3.9 and later.\n   ```\n   \n  \n  \n   ### 6.27.2\n   ```\n   -------------------\n\nThis patch makes the :command:`hypothesis codemod`\n:ref:`command &lt;hypothesis-cli&gt;` somewhat faster.\n   ```\n   \n  \n  \n   ### 6.27.1\n   ```\n   -------------------\n\nThis patch changes the backing datastructures of :func:`~hypothesis.register_random`\nand a few internal caches to use :class:`weakref.WeakValueDictionary`.  This reduces\nmemory usage and may improve performance when registered :class:`~random.Random`\ninstances are only used for a subset of your tests (:issue:`3131`).\n   ```\n   \n  \n  \n   ### 6.27.0\n   ```\n   -------------------\n\nThis release teaches Hypothesis&#x27; multiple-error reporting to format tracebacks\nusing :pypi:`pytest` or :pypi:`better-exceptions`, if they are installed and\nenabled (:issue:`3116`).\n   ```\n   \n  \n  \n   ### 6.26.0\n   ```\n   -------------------\n\nDid you know that of the 2\\ :superscript:`64` possible floating-point numbers,\n2\\ :superscript:`53` of them are ``nan`` - and Python prints them all the same way?\n\nWhile nans *usually* have all zeros in the sign bit and mantissa, this\n`isn&#x27;t always true &lt;https://wingolog.org/archives/2011/05/18/value-representation-in-javascript-implementations&gt;`__,\nand :wikipedia:`&#x27;signaling&#x27; nans might trap or error &lt;https://en.wikipedia.org/wiki/NaN#Signaling_NaN&gt;`.\nTo help distinguish such errors in e.g. CI logs, Hypothesis now prints ``-nan`` for\nnegative nans, and adds a comment like `` Saw 3 signaling NaNs`` if applicable.\n   ```\n   \n  \n  \n   ### 6.25.0\n   ```\n   -------------------\n\nThis release adds special filtering logic to make a few special cases\nlike ``s.map(lambda x: x)`` and ``lists().filter(len)`` more efficient\n(:issue:`2701`).\n   ```\n   \n  \n  \n   ### 6.24.6\n   ```\n   -------------------\n\nThis patch makes :func:`~hypothesis.strategies.floats` generate\n:wikipedia:`&quot;subnormal&quot; floating point numbers &lt;Subnormal_number&gt;`\nmore often, as these rare values can have strange interactions with\n`unsafe compiler optimisations like -ffast-math\n&lt;https://simonbyrne.github.io/notes/fastmath/#flushing_subnormals_to_zero&gt;`__\n(:issue:`2976`).\n   ```\n   \n  \n  \n   ### 6.24.5\n   ```\n   -------------------\n\nThis patch fixes a rare internal error in the :func:`~hypothesis.strategies.datetimes`\nstrategy, where the implementation of ``allow_imaginary=False`` crashed when checking\na time during the skipped hour of a DST transition *if* the DST offset is negative -\nonly true of ``Europe/Dublin``, who we presume have their reasons - and the ``tzinfo``\nobject is a :pypi:`pytz` timezone (which predates :pep:`495`).\n   ```\n   \n  \n  \n   ### 6.24.4\n   ```\n   -------------------\n\nThis patch gives Hypothesis it&#x27;s own internal :class:`~random.Random` instance,\nensuring that test suites which reset the global random state don&#x27;t induce\nweird correlations between property-based tests (:issue:`2135`).\n   ```\n   \n  \n  \n   ### 6.24.3\n   ```\n   -------------------\n\nThis patch updates documentation of :func:`~hypothesis.note`\n(:issue:`3147`).\n   ```\n   \n  \n  \n   ### 6.24.2\n   ```\n   -------------------\n\nThis patch updates internal testing for the :ref:`Array API extra &lt;array-api&gt;`\nto be consistent with new specification changes: ``sum()`` not accepting\nboolean arrays (`234 &lt;https://github.com/data-apis/array-api/pull/234&gt;`_),\n``unique()`` split into separate functions\n(`275 &lt;https://github.com/data-apis/array-api/pull/275&gt;`_), and treating NaNs\nas distinct (`310 &lt;https://github.com/data-apis/array-api/pull/310&gt;`_). It has\nno user visible impact.\n   ```\n   \n  \n  \n   ### 6.24.1\n   ```\n   -------------------\n\nThis patch updates our vendored `list of top-level domains &lt;https://www.iana.org/domains/root/db&gt;`__,\nwhich is used by the provisional :func:`~hypothesis.provisional.domains` strategy.\n   ```\n   \n  \n  \n   ### 6.24.0\n   ```\n   -------------------\n\nThis patch updates our vendored `list of top-level domains\n&lt;https://data.iana.org/TLD/tlds-alpha-by-domain.txt&gt;`__, which is used\nby the provisional :func:`~hypothesis.provisional.domains` strategy.\n\n(did you know that gTLDs can be both `added &lt;https://newgtlds.icann.org/en/&gt;`__\nand `removed &lt;https://www.icann.org/resources/pages/gtld-registry-agreement-termination-2015-10-09-en&gt;`__?)\n   ```\n   \n  \n  \n   ### 6.23.4\n   ```\n   -------------------\n\nThis patch adds an error for when ``shapes`` in :func:`xps.arrays()` is not\npassed as either a valid shape or strategy.\n   ```\n   \n  \n  \n   ### 6.23.3\n   ```\n   -------------------\n\nThis patch updates our formatting with :pypi:`shed`.\n   ```\n   \n  \n  \n   ### 6.23.2\n   ```\n   -------------------\n\nThis patch replaces external links to :doc:`NumPy &lt;numpy:index&gt;` API docs\nwith :mod:`sphinx.ext.intersphinx` cross-references. It is purely a documentation improvement.\n   ```\n   \n  \n  \n   ### 6.23.1\n   ```\n   -------------------\n\nThis patch cleans up internal logic for :func:`xps.arrays()`. There is no\nuser-visible change.\n   ```\n   \n  \n  \n   ### 6.23.0\n   ```\n   -------------------\n\nThis release follows :pypi:`pytest` in considering :class:`SystemExit` and\n:class:`GeneratorExit` exceptions to be test failures, meaning that we will\nshink to minimal examples and check for flakiness even though they subclass\n:class:`BaseException` directly (:issue:`2223`).\n\n:class:`KeyboardInterrupt` continues to interrupt everything, and will be\nre-raised immediately.\n   ```\n   \n  \n  \n   ### 6.22.0\n   ```\n   -------------------\n\nThis release adds :class:`~hypothesis.extra.django.LiveServerTestCase` and\n:class:`~hypothesis.extra.django.StaticLiveServerTestCase` for django test.\nThanks to Ivan Tham for this feature!\n   ```\n   \n  \n  \n   ### 6.21.6\n   ```\n   -------------------\n\nThis patch fixes some new linter warnings such as :pypi:`flake8-bugbear`&#x27;s\n``B904`` for explicit exception chaining, so tracebacks might be a bit nicer.\n   ```\n   \n  \n  \n   ### 6.21.5\n   ```\n   -------------------\n\nThis release fixes ``None`` being inferred as the float64 dtype in\n:func:`~xps.from_dtype()` and :func:`~xps.arrays()` from the\n:ref:`Array API extra &lt;array-api&gt;`.\n   ```\n   \n  \n  \n   ### 6.21.4\n   ```\n   -------------------\n\nThis release fixes the type hint for the\n:func:`given() &lt;hypothesis.given&gt;` decorator\nwhen decorating an ``async`` function (:issue:`3099`).\n   ```\n   \n  \n  \n   ### 6.21.3\n   ```\n   -------------------\n\nThis release improves Ghostwritten tests for builtins (:issue:`2977`).\n   ```\n   \n  \n  \n   ### 6.21.2\n   ```\n   -------------------\n\nThis release deprecates use of both ``min_dims &gt; len(shape)`` and\n``max_dims &gt; len(shape)`` when ``allow_newaxis == False`` in\n:func:`~hypothesis.extra.numpy.basic_indices` (:issue:`3091`).\n   ```\n   \n  \n  \n   ### 6.21.1\n   ```\n   -------------------\n\nThis release improves the behaviour of :func:`~hypothesis.strategies.builds`\nand :func:`~hypothesis.strategies.from_type` in certain situations involving\ndecorators (:issue:`2495` and :issue:`3029`).\n   ```\n   \n  \n  \n   ### 6.21.0\n   ```\n   -------------------\n\nThis release introduces strategies for array/tensor libraries adopting the\n`Array API standard &lt;https://data-apis.org/&gt;`__ (:issue:`3037`).\nThey are available in :ref:`the hypothesis.extra.array_api extra &lt;array-api&gt;`,\nand work much like the existing :doc:`strategies for NumPy &lt;numpy&gt;`.\n   ```\n   \n  \n  \n   ### 6.20.1\n   ```\n   -------------------\n\nThis patch fixes :issue:`961`, where calling ``given()`` inline on a\nbound method would fail to handle the ``self`` argument correctly.\n   ```\n   \n  \n  \n   ### 6.20.0\n   ```\n   -------------------\n\nThis release allows :func:`~hypothesis.strategies.slices` to generate ``step=None``,\nand fixes an off-by-one error where the ``start`` index could be equal to ``size``.\nThis works fine for all Python sequences and Numpy arrays, but is undefined behaviour\nin the `Array API standard &lt;https://data-apis.org/&gt;`__ (see :pull:`3065`).\n   ```\n   \n  \n  \n   ### 6.19.0\n   ```\n   -------------------\n\nThis release makes :doc:`stateful testing &lt;stateful&gt;` more likely to tell you\nif you do something unexpected and unsupported:\n\n- The :obj:`~hypothesis.HealthCheck.return_value` health check now applies to\n  :func:`~hypothesis.stateful.rule` and :func:`~hypothesis.stateful.initialize`\n  rules, if they don&#x27;t have ``target`` bundles, as well as\n  :func:`~hypothesis.stateful.invariant`.\n- Using a :func:`~hypothesis.stateful.consumes` bundle as a ``target`` is\n  deprecated, and will be an error in a future version.\n\nIf existing code triggers these new checks, check for related bugs and\nmisunderstandings - these patterns *never* had any effect.\n   ```\n   \n  \n  \n   ### 6.18.0\n   ```\n   -------------------\n\nThis release teaches :func:`~hypothesis.strategies.from_type` a neat trick:\nwhen resolving an :obj:`python:typing.Annotated` type, if one of the annotations\nis a strategy object we use that as the inferred strategy.  For example:\n\n.. code-block:: python\n\n    PositiveInt = Annotated[int, st.integers(min_value=1)]\n\nIf there are multiple strategies, we use the last outer-most annotation.\nSee :issue:`2978` and :pull:`3082` for discussion.\n\n*Requires Python 3.9 or later for*\n:func:`get_type_hints(..., include_extras=False) &lt;typing.get_type_hints&gt;`.\n   ```\n   \n  \n  \n   ### 6.17.4\n   ```\n   -------------------\n\nThis patch makes unique :func:`~hypothesis.extra.numpy.arrays` much more\nefficient, especially when there are only a few valid elements - such as\nfor eight-bit integers (:issue:`3066`).\n   ```\n   \n  \n  \n   ### 6.17.3\n   ```\n   -------------------\n\nThis patch fixes the repr of :func:`~hypothesis.extra.numpy.array_shapes`.\n   ```\n   \n  \n  \n   ### 6.17.2\n   ```\n   -------------------\n\nThis patch wraps some internal helper code in our proxies decorator to prevent\nmutations of method docstrings carrying over to other instances of the respective\nmethods.\n   ```\n   \n  \n  \n   ### 6.17.1\n   ```\n   -------------------\n\nThis patch moves some internal helper code in preparation for :issue:`3065`.\nThere is no user-visible change, unless you depended on undocumented internals.\n   ```\n   \n  \n  \n   ### 6.17.0\n   ```\n   -------------------\n\nThis release adds type annotations to the :doc:`stateful testing &lt;stateful&gt;` API.\n\nThanks to Ruben Opdebeeck for this contribution!\n   ```\n   \n  \n  \n   ### 6.16.0\n   ```\n   -------------------\n\nThis release adds the :class:`~hypothesis.strategies.DrawFn` type as a reusable\ntype hint for the ``draw`` argument of\n:func:`composite &lt;hypothesis.strategies.composite&gt;` functions.\n\nThanks to Ruben Opdebeeck for this contribution!\n   ```\n   \n  \n  \n   ### 6.15.0\n   ```\n   -------------------\n\nThis release emits a more useful error message when :func:`given() &lt;hypothesis.given&gt;`\nis applied to a coroutine function, i.e. one defined using ``async def`` (:issue:`3054`).\n\nThis was previously only handled by the generic :obj:`~hypothesis.HealthCheck.return_value`\nhealth check, which doesn&#x27;t direct you to use either :ref:`a custom executor &lt;custom-function-execution&gt;`\nor a library such as :pypi:`pytest-trio` or :pypi:`pytest-asyncio` to handle it for you.\n   ```\n   \n  \n  \n   ### 6.14.9\n   ```\n   -------------------\n\nThis patch fixes a regression in Hypothesis 6.14.8, where :func:`~hypothesis.strategies.from_type`\nfailed to resolve types which inherit from multiple parametrised generic types,\naffecting the :pypi:`returns` package (:issue:`3060`).\n   ```\n   \n  \n  \n   ### 6.14.8\n   ```\n   -------------------\n\nThis patch ensures that registering a strategy for a subclass of a a parametrised\ngeneric type such as ``class Lines(Sequence[str]):`` will not &quot;leak&quot; into unrelated\nstrategies such as ``st.from_type(Sequence[int])`` (:issue:`2951`).\nUnfortunately this fix requires :pep:`560`, meaning Python 3.7 or later.\n   ```\n   \n  \n  \n   ### 6.14.7\n   ```\n   -------------------\n\nThis patch fixes :issue:`3050`, where :pypi:`attrs` classes could\ncause an internal error in the :doc:`ghostwriter &lt;ghostwriter&gt;`.\n   ```\n   \n  \n  \n   ### 6.14.6\n   ```\n   -------------------\n\nThis patch improves the error message for :issue:`3016`, where :pep:`585`\nbuiltin generics with self-referential forward-reference strings cannot be\nresolved to a strategy by :func:`~hypothesis.strategies.from_type`.\n   ```\n   \n  \n  \n   ### 6.14.5\n   ```\n   -------------------\n\nThis patch fixes ``hypothesis.strategies._internal.types.is_a_new_type``.\nIt was failing on Python ``3.10.0b4``, where ``NewType`` is a function.\n   ```\n   \n  \n  \n   ### 6.14.4\n   ```\n   -------------------\n\nThis patch fixes :func:`~hypothesis.strategies.from_type` and\n:func:`~hypothesis.strategies.register_type_strategy` for\n:obj:`python:typing.NewType` on Python 3.10, which changed the\nunderlying implementation (see :bpo:`44353` for details).\n   ```\n   \n  \n  \n   ### 6.14.3\n   ```\n   -------------------\n\nThis patch updates our autoformatting tools, improving our code style without any API changes.\n   ```\n   \n  \n  \n   ### 6.14.2\n   ```\n   -------------------\n\nThis patch ensures that we shorten tracebacks for tests which fail due\nto inconsistent data generation between runs (i.e. raise ``Flaky``).\n   ```\n   \n  \n  \n   ### 6.14.1\n   ```\n   -------------------\n\nThis patch updates some internal type annotations.\nThere is no user-visible change.\n   ```\n   \n  \n  \n   ### 6.14.0\n   ```\n   -------------------\n\nThe :ref:`explain phase &lt;phases&gt;` now requires shrinking to be enabled,\nand will be automatically skipped for deadline-exceeded errors.\n   ```\n   \n  \n  \n   ### 6.13.14\n   ```\n   --------------------\n\nThis patch improves the :func:`~hypothesis.strategies.tuples` strategy\ntype annotations, to preserve the element types for up to length-five\ntuples (:issue:`3005`).\n\nAs for :func:`~hypothesis.strategies.one_of`, this is the best we can do\nbefore a `planned extension &lt;https://mail.python.org/archives/list/typing-sigpython.org/thread/LOQFV3IIWGFDB7F5BDX746EZJG4VVBI3/&gt;`__\nto :pep:`646` is released, hopefully in Python 3.11.\n   ```\n   \n  \n  \n   ### 6.13.13\n   ```\n   --------------------\n\nThis patch teaches :doc:`the Ghostwriter &lt;ghostwriter&gt;` how to find\n:doc:`custom ufuncs &lt;numpy:reference/ufuncs&gt;` from *any* module that defines them,\nand that ``yaml.unsafe_load()`` does not undo ``yaml.safe_load()``.\n   ```\n   \n  \n  \n   ### 6.13.12\n   ```\n   --------------------\n\nThis patch reduces the amount of internal code excluded from our test suite&#x27;s\ncode coverage checks.\n\nThere is no user-visible change.\n   ```\n   \n  \n  \n   ### 6.13.11\n   ```\n   --------------------\n\nThis patch removes some old internal helper code that previously existed\nto make Python 2 compatibility easier.\n\nThere is no user-visible change.\n   ```\n   \n  \n  \n   ### 6.13.10\n   ```\n   --------------------\n\nThis release adjusts some internal code to help make our test suite more\nreliable.\n\nThere is no user-visible change.\n   ```\n   \n  \n  \n   ### 6.13.9\n   ```\n   -------------------\n\nThis patch cleans up some internal code related to filtering strategies.\n\nThere is no user-visible change.\n   ```\n   \n  \n  \n   ### 6.13.8\n   ```\n   -------------------\n\nThis patch slightly improves the performance of some internal code for\ngenerating integers.\n   ```\n   \n  \n  \n   ### 6.13.7\n   ```\n   -------------------\n\nThis patch fixes a bug in :func:`~hypothesis.strategies.from_regex` that\ncaused ``from_regex(&quot;&quot;, fullmatch=True)`` to unintentionally generate non-empty\nstrings (:issue:`4982`).\n\nThe only strings that completely match an empty regex pattern are empty\nstrings.\n   ```\n   \n  \n  \n   ### 6.13.6\n   ```\n   -------------------\n\nThis patch fixes a bug that caused :func:`~hypothesis.strategies.integers`\nto shrink towards negative values instead of positive values in some cases.\n   ```\n   \n  \n  \n   ### 6.13.5\n   ```\n   -------------------\n\nThis patch fixes rare cases where ``hypothesis write --binary-op`` could\nprint :doc:`reproducing instructions &lt;reproducing&gt;` from the internal\nsearch for an identity element.\n   ```\n   \n  \n  \n   ### 6.13.4\n   ```\n   -------------------\n\nThis patch removes some unnecessary intermediate list-comprehensions,\nusing the latest versions of :pypi:`pyupgrade` and :pypi:`shed`.\n   ```\n   \n  \n  \n   ### 6.13.3\n   ```\n   -------------------\n\nThis patch adds a ``.hypothesis`` property to invalid test functions, bringing\nthem inline with valid tests and fixing a bug where :pypi:`pytest-asyncio` would\nswallow the real error message and mistakenly raise a version incompatibility\nerror.\n   ```\n   \n  \n  \n   ### 6.13.2\n   ```\n   -------------------\n\nSome of Hypothesis&#x27;s numpy/pandas strategies use a ``fill`` argument to speed\nup generating large arrays, by generating a single fill value and sharing that\nvalue among many array slots instead of filling every single slot individually.\n\nWhen no ``fill`` argument is provided, Hypothesis tries to detect whether it is\nOK to automatically use the ``elements`` argument as a fill strategy, so that\nit can still use the faster approach.\n\nThis patch fixes a bug that would cause that optimization to trigger in some\ncases where it isn&#x27;t 100% guaranteed to be OK.\n\nIf this makes some of your numpy/pandas tests run more slowly, try adding an\nexplicit ``fill`` argument to the relevant strategies to ensure that Hypothesis\nalways uses the faster approach.\n   ```\n   \n  \n  \n   ### 6.13.1\n   ```\n   -------------------\n\nThis patch strengthens some internal import-time consistency checks for the\nbuilt-in strategies.\n\nThere is no user-visible change.\n   ```\n   \n  \n  \n   ### 6.13.0\n   ```\n   -------------------\n\nThis release adds URL fragment generation to the :func:`~hypothesis.provisional.urls`\nstrategy (:issue:`2908`). Thanks to Pax (R. Margret) for contributing this patch at the\n`PyCon US Mentored Sprints &lt;https://us.pycon.org/2021/summits/mentored-sprints/&gt;`__!\n   ```\n   \n  \n  \n   ### 6.12.1\n   ```\n   -------------------\n\nThis patch fixes :issue:`2964`, where ``.map()`` and ``.filter()`` methods\nwere omitted from the ``repr()`` of :func:`~hypothesis.strategies.just` and\n:func:`~hypothesis.strategies.sampled_from` strategies, since\n:ref:`version 5.43.7 &lt;v5.43.7&gt;`.\n   ```\n   \n  \n  \n   ### 6.12.0\n   ```\n   -------------------\n\nThis release automatically rewrites some simple filters, such as\n``integers().filter(lambda x: x &gt; 9)`` to the more efficient\n``integers(min_value=10)``, based on the AST of the predicate.\n\nWe continue to recommend using the efficient form directly wherever\npossible, but this should be useful for e.g. :pypi:`pandera` &quot;``Checks``&quot;\nwhere you already have a simple predicate and translating manually\nis really annoying.  See :issue:`2701` for ideas about floats and\nsimple text strategies.\n   ```\n   \n  \n  \n   ### 6.11.0\n   ```\n   -------------------\n\n:func:`hypothesis.target` now returns the ``observation`` value,\nallowing it to be conveniently used inline in expressions such as\n``assert target(abs(a - b)) &lt; 0.1``.\n   ```\n   \n  \n  \n   ### 6.10.1\n   ```\n   -------------------\n\nThis patch fixes a deprecation warning if you&#x27;re using recent versions\nof :pypi:`importlib-metadata` (:issue:`2934`), which we use to load\n:ref:`third-party plugins &lt;entry-points&gt;` such as `Pydantic&#x27;s integration\n&lt;https://pydantic-docs.helpmanual.io/hypothesis_plugin/&gt;`__.\nOn older versions of :pypi:`importlib-metadata`, there is no change and\nyou don&#x27;t need to upgrade.\n   ```\n   \n  \n  \n   ### 6.10.0\n   ```\n   -------------------\n\nThis release teaches the :doc:`Ghostwriter &lt;ghostwriter&gt;` to read parameter\ntypes from Sphinx, Google, or Numpy-style structured docstrings, and improves\nsome related heuristics about how to test scientific and numerical programs.\n   ```\n   \n  \n  \n   ### 6.9.2\n   ```\n   ------------------\n\nThis release improves the :doc:`Ghostwriter&#x27;s &lt;ghostwriter&gt;` handling\nof exceptions, by reading ``:raises ...:`` entries in function docstrings\nand ensuring that we don&#x27;t suppresss the error raised by test assertions.\n   ```\n   \n  \n  \n   ### 6.9.1\n   ```\n   ------------------\n\nThis patch updates our autoformatting tools, improving our code style without any API changes.\n   ```\n   \n  \n  \n   ### 6.9.0\n   ```\n   ------------------\n\nThis release teaches :func:`~hypothesis.strategies.from_type` how to see\nthrough :obj:`python:typing.Annotated`.  Thanks to Vytautas Strimaitis\nfor reporting and fixing :issue:`2919`!\n   ```\n   \n  \n  \n   ### 6.8.12\n   ```\n   -------------------\n\nIf :pypi:`rich` is installed, the :command:`hypothesis write` command\nwill use it to syntax-highlight the :doc:`Ghostwritten &lt;ghostwriter&gt;`\ncode.\n   ```\n   \n  \n  \n   ### 6.8.11\n   ```\n   -------------------\n\nThis patch improves an error message from :func:`~hypothesis.strategies.builds`\nwhen :func:`~hypothesis.strategies.from_type` would be more suitable (:issue:`2930`).\n   ```\n   \n  \n  \n   ### 6.8.10\n   ```\n   -------------------\n\nThis patch updates the type annotations for :func:`~hypothesis.extra.numpy.arrays` to reflect that\n``shape: SearchStrategy[int]`` is supported.\n   ```\n   \n  \n  \n   ### 6.8.9\n   ```\n   ------------------\n\nThis patch fixes :func:`~hypothesis.strategies.from_type` with\n:mod:`abstract types &lt;python:abc&gt;` which have either required but\nnon-type-annotated arguments to ``__init__``, or where\n:func:`~hypothesis.strategies.from_type` can handle some concrete\nsubclasses but not others.\n   ```\n   \n  \n  \n   ### 6.8.8\n   ```\n   ------------------\n\nThis patch teaches :command:`hypothesis write` to check for possible roundtrips\nin several more cases, such as by looking for an inverse in the module which\ndefines the function to test.\n   ```\n   \n  \n  \n   ### 6.8.7\n   ```\n   ------------------\n\nThis patch adds a more helpful error message if you try to call\n:func:`~hypothesis.strategies.sampled_from` on an :class:`~python:enum.Enum`\nwhich has no members, but *does* have :func:`~python:dataclasses.dataclass`-style\nannotations (:issue:`2923`).\n   ```\n   \n  \n  \n   ### 6.8.6\n   ```\n   ------------------\n\nThe :func:`~hypothesis.strategies.fixed_dictionaries` strategy now preserves\ndict iteration order instead of sorting the keys.  This also affe", "created_at": "2023-04-08T06:15:58Z", "updated_at": "2023-04-12T18:22:10Z", "closed_at": "2023-04-12T18:22:10Z", "merged_at": null, "merge_commit_sha": "c3a590b8bdbb16730b7dfc36b79de0efce97848d", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/binaryornot/binaryornot/pulls/623/commits", "review_comments_url": "https://api.github.com/repos/binaryornot/binaryornot/pulls/623/comments", "review_comment_url": "https://api.github.com/repos/binaryornot/binaryornot/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/binaryornot/binaryornot/issues/623/comments", "statuses_url": "https://api.github.com/repos/binaryornot/binaryornot/statuses/cb4e2b1cd84bb772deaaa134e90e8ca6a6a8396b", "head": {"label": "binaryornot:pyup-pin-hypothesis-6.71.0", "ref": "pyup-pin-hypothesis-6.71.0", "sha": "cb4e2b1cd84bb772deaaa134e90e8ca6a6a8396b", "user": {"login": "binaryornot", "id": 130566187, "node_id": "O_kgDOB8hIKw", "avatar_url": "https://avatars.githubusercontent.com/u/130566187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binaryornot", "html_url": "https://github.com/binaryornot", "followers_url": "https://api.github.com/users/binaryornot/followers", "following_url": "https://api.github.com/users/binaryornot/following{/other_user}", "gists_url": "https://api.github.com/users/binaryornot/gists{/gist_id}", "starred_url": "https://api.github.com/users/binaryornot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binaryornot/subscriptions", "organizations_url": "https://api.github.com/users/binaryornot/orgs", "repos_url": "https://api.github.com/users/binaryornot/repos", "events_url": "https://api.github.com/users/binaryornot/events{/privacy}", "received_events_url": "https://api.github.com/users/binaryornot/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 12170815, "node_id": "MDEwOlJlcG9zaXRvcnkxMjE3MDgxNQ==", "name": "binaryornot", "full_name": "binaryornot/binaryornot", "private": false, "owner": {"login": "binaryornot", "id": 130566187, "node_id": "O_kgDOB8hIKw", "avatar_url": "https://avatars.githubusercontent.com/u/130566187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binaryornot", "html_url": "https://github.com/binaryornot", "followers_url": "https://api.github.com/users/binaryornot/followers", "following_url": "https://api.github.com/users/binaryornot/following{/other_user}", "gists_url": "https://api.github.com/users/binaryornot/gists{/gist_id}", "starred_url": "https://api.github.com/users/binaryornot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binaryornot/subscriptions", "organizations_url": "https://api.github.com/users/binaryornot/orgs", "repos_url": "https://api.github.com/users/binaryornot/repos", "events_url": "https://api.github.com/users/binaryornot/events{/privacy}", "received_events_url": "https://api.github.com/users/binaryornot/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/binaryornot/binaryornot", "description": "Ultra-lightweight pure Python package to check if a file is binary or text.", "fork": false, "url": "https://api.github.com/repos/binaryornot/binaryornot", "forks_url": "https://api.github.com/repos/binaryornot/binaryornot/forks", "keys_url": "https://api.github.com/repos/binaryornot/binaryornot/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/binaryornot/binaryornot/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/binaryornot/binaryornot/teams", "hooks_url": "https://api.github.com/repos/binaryornot/binaryornot/hooks", "issue_events_url": "https://api.github.com/repos/binaryornot/binaryornot/issues/events{/number}", "events_url": "https://api.github.com/repos/binaryornot/binaryornot/events", "assignees_url": "https://api.github.com/repos/binaryornot/binaryornot/assignees{/user}", "branches_url": "https://api.github.com/repos/binaryornot/binaryornot/branches{/branch}", "tags_url": "https://api.github.com/repos/binaryornot/binaryornot/tags", "blobs_url": "https://api.github.com/repos/binaryornot/binaryornot/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/binaryornot/binaryornot/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/binaryornot/binaryornot/git/refs{/sha}", "trees_url": "https://api.github.com/repos/binaryornot/binaryornot/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/binaryornot/binaryornot/statuses/{sha}", "languages_url": "https://api.github.com/repos/binaryornot/binaryornot/languages", "stargazers_url": "https://api.github.com/repos/binaryornot/binaryornot/stargazers", "contributors_url": "https://api.github.com/repos/binaryornot/binaryornot/contributors", "subscribers_url": "https://api.github.com/repos/binaryornot/binaryornot/subscribers", "subscription_url": "https://api.github.com/repos/binaryornot/binaryornot/subscription", "commits_url": "https://api.github.com/repos/binaryornot/binaryornot/commits{/sha}", "git_commits_url": "https://api.github.com/repos/binaryornot/binaryornot/git/commits{/sha}", "comments_url": "https://api.github.com/repos/binaryornot/binaryornot/comments{/number}", "issue_comment_url": "https://api.github.com/repos/binaryornot/binaryornot/issues/comments{/number}", "contents_url": "https://api.github.com/repos/binaryornot/binaryornot/contents/{+path}", "compare_url": "https://api.github.com/repos/binaryornot/binaryornot/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/binaryornot/binaryornot/merges", "archive_url": "https://api.github.com/repos/binaryornot/binaryornot/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/binaryornot/binaryornot/downloads", "issues_url": "https://api.github.com/repos/binaryornot/binaryornot/issues{/number}", "pulls_url": "https://api.github.com/repos/binaryornot/binaryornot/pulls{/number}", "milestones_url": "https://api.github.com/repos/binaryornot/binaryornot/milestones{/number}", "notifications_url": "https://api.github.com/repos/binaryornot/binaryornot/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/binaryornot/binaryornot/labels{/name}", "releases_url": "https://api.github.com/repos/binaryornot/binaryornot/releases{/id}", "deployments_url": "https://api.github.com/repos/binaryornot/binaryornot/deployments", "created_at": "2013-08-17T00:10:43Z", "updated_at": "2024-06-06T14:32:49Z", "pushed_at": "2024-06-28T10:39:01Z", "git_url": "git://github.com/binaryornot/binaryornot.git", "ssh_url": "git@github.com:binaryornot/binaryornot.git", "clone_url": "https://github.com/binaryornot/binaryornot.git", "svn_url": "https://github.com/binaryornot/binaryornot", "homepage": null, "size": 532, "stargazers_count": 139, "watchers_count": 139, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 44, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 19, "license": {"key": "bsd-3-clause", "name": "BSD 3-Clause \"New\" or \"Revised\" License", "spdx_id": "BSD-3-Clause", "url": "https://api.github.com/licenses/bsd-3-clause", "node_id": "MDc6TGljZW5zZTU="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 44, "open_issues": 19, "watchers": 139, "default_branch": "main"}}, "base": {"label": "binaryornot:main", "ref": "main", "sha": "ac4f56e1e62ef8ee2a3c04e443b9b22fd5bed0d1", "user": {"login": "binaryornot", "id": 130566187, "node_id": "O_kgDOB8hIKw", "avatar_url": "https://avatars.githubusercontent.com/u/130566187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binaryornot", "html_url": "https://github.com/binaryornot", "followers_url": "https://api.github.com/users/binaryornot/followers", "following_url": "https://api.github.com/users/binaryornot/following{/other_user}", "gists_url": "https://api.github.com/users/binaryornot/gists{/gist_id}", "starred_url": "https://api.github.com/users/binaryornot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binaryornot/subscriptions", "organizations_url": "https://api.github.com/users/binaryornot/orgs", "repos_url": "https://api.github.com/users/binaryornot/repos", "events_url": "https://api.github.com/users/binaryornot/events{/privacy}", "received_events_url": "https://api.github.com/users/binaryornot/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 12170815, "node_id": "MDEwOlJlcG9zaXRvcnkxMjE3MDgxNQ==", "name": "binaryornot", "full_name": "binaryornot/binaryornot", "private": false, "owner": {"login": "binaryornot", "id": 130566187, "node_id": "O_kgDOB8hIKw", "avatar_url": "https://avatars.githubusercontent.com/u/130566187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binaryornot", "html_url": "https://github.com/binaryornot", "followers_url": "https://api.github.com/users/binaryornot/followers", "following_url": "https://api.github.com/users/binaryornot/following{/other_user}", "gists_url": "https://api.github.com/users/binaryornot/gists{/gist_id}", "starred_url": "https://api.github.com/users/binaryornot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binaryornot/subscriptions", "organizations_url": "https://api.github.com/users/binaryornot/orgs", "repos_url": "https://api.github.com/users/binaryornot/repos", "events_url": "https://api.github.com/users/binaryornot/events{/privacy}", "received_events_url": "https://api.github.com/users/binaryornot/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/binaryornot/binaryornot", "description": "Ultra-lightweight pure Python package to check if a file is binary or text.", "fork": false, "url": "https://api.github.com/repos/binaryornot/binaryornot", "forks_url": "https://api.github.com/repos/binaryornot/binaryornot/forks", "keys_url": "https://api.github.com/repos/binaryornot/binaryornot/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/binaryornot/binaryornot/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/binaryornot/binaryornot/teams", "hooks_url": "https://api.github.com/repos/binaryornot/binaryornot/hooks", "issue_events_url": "https://api.github.com/repos/binaryornot/binaryornot/issues/events{/number}", "events_url": "https://api.github.com/repos/binaryornot/binaryornot/events", "assignees_url": "https://api.github.com/repos/binaryornot/binaryornot/assignees{/user}", "branches_url": "https://api.github.com/repos/binaryornot/binaryornot/branches{/branch}", "tags_url": "https://api.github.com/repos/binaryornot/binaryornot/tags", "blobs_url": "https://api.github.com/repos/binaryornot/binaryornot/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/binaryornot/binaryornot/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/binaryornot/binaryornot/git/refs{/sha}", "trees_url": "https://api.github.com/repos/binaryornot/binaryornot/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/binaryornot/binaryornot/statuses/{sha}", "languages_url": "https://api.github.com/repos/binaryornot/binaryornot/languages", "stargazers_url": "https://api.github.com/repos/binaryornot/binaryornot/stargazers", "contributors_url": "https://api.github.com/repos/binaryornot/binaryornot/contributors", "subscribers_url": "https://api.github.com/repos/binaryornot/binaryornot/subscribers", "subscription_url": "https://api.github.com/repos/binaryornot/binaryornot/subscription", "commits_url": "https://api.github.com/repos/binaryornot/binaryornot/commits{/sha}", "git_commits_url": "https://api.github.com/repos/binaryornot/binaryornot/git/commits{/sha}", "comments_url": "https://api.github.com/repos/binaryornot/binaryornot/comments{/number}", "issue_comment_url": "https://api.github.com/repos/binaryornot/binaryornot/issues/comments{/number}", "contents_url": "https://api.github.com/repos/binaryornot/binaryornot/contents/{+path}", "compare_url": "https://api.github.com/repos/binaryornot/binaryornot/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/binaryornot/binaryornot/merges", "archive_url": "https://api.github.com/repos/binaryornot/binaryornot/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/binaryornot/binaryornot/downloads", "issues_url": "https://api.github.com/repos/binaryornot/binaryornot/issues{/number}", "pulls_url": "https://api.github.com/repos/binaryornot/binaryornot/pulls{/number}", "milestones_url": "https://api.github.com/repos/binaryornot/binaryornot/milestones{/number}", "notifications_url": "https://api.github.com/repos/binaryornot/binaryornot/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/binaryornot/binaryornot/labels{/name}", "releases_url": "https://api.github.com/repos/binaryornot/binaryornot/releases{/id}", "deployments_url": "https://api.github.com/repos/binaryornot/binaryornot/deployments", "created_at": "2013-08-17T00:10:43Z", "updated_at": "2024-06-06T14:32:49Z", "pushed_at": "2024-06-28T10:39:01Z", "git_url": "git://github.com/binaryornot/binaryornot.git", "ssh_url": "git@github.com:binaryornot/binaryornot.git", "clone_url": "https://github.com/binaryornot/binaryornot.git", "svn_url": "https://github.com/binaryornot/binaryornot", "homepage": null, "size": 532, "stargazers_count": 139, "watchers_count": 139, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 44, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 19, "license": {"key": "bsd-3-clause", "name": "BSD 3-Clause \"New\" or \"Revised\" License", "spdx_id": "BSD-3-Clause", "url": "https://api.github.com/licenses/bsd-3-clause", "node_id": "MDc6TGljZW5zZTU="}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 44, "open_issues": 19, "watchers": 139, "default_branch": "main"}}, "_links": {"self": {"href": "https://api.github.com/repos/binaryornot/binaryornot/pulls/623"}, "html": {"href": "https://github.com/binaryornot/binaryornot/pull/623"}, "issue": {"href": "https://api.github.com/repos/binaryornot/binaryornot/issues/623"}, "comments": {"href": "https://api.github.com/repos/binaryornot/binaryornot/issues/623/comments"}, "review_comments": {"href": "https://api.github.com/repos/binaryornot/binaryornot/pulls/623/comments"}, "review_comment": {"href": "https://api.github.com/repos/binaryornot/binaryornot/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/binaryornot/binaryornot/pulls/623/commits"}, "statuses": {"href": "https://api.github.com/repos/binaryornot/binaryornot/statuses/cb4e2b1cd84bb772deaaa134e90e8ca6a6a8396b"}}, "author_association": "NONE", "auto_merge": null, "active_lock_reason": null, "resolved_issues": []}
